{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\n/**\n * UpdateFranchiseMutationBase\n * auto generated base class for the model UpdateFranchiseMutationModel.\n */\nexport const UpdateFranchiseMutationModelBase = withTypedRefs()(ModelBase.named('UpdateFranchiseMutation').props({\n  __typename: types.optional(types.literal(\"UpdateFranchiseMutation\"), \"UpdateFranchiseMutation\"),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => FranchiseTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class UpdateFranchiseMutationModelSelector extends QueryBuilder {\n  franchise(builder) {\n    return this.__child(`franchise`, FranchiseTypeModelSelector, builder);\n  }\n}\nexport function selectFromUpdateFranchiseMutation() {\n  return new UpdateFranchiseMutationModelSelector();\n}\nexport const updateFranchiseMutationModelPrimitives = selectFromUpdateFranchiseMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","UpdateFranchiseMutationModelBase","named","props","__typename","optional","literal","franchise","union","undefined","null","late","views","self","store","__getStore","UpdateFranchiseMutationModelSelector","builder","__child","selectFromUpdateFranchiseMutation","updateFranchiseMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UpdateFranchiseMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n}\n\n/**\n * UpdateFranchiseMutationBase\n * auto generated base class for the model UpdateFranchiseMutationModel.\n */\nexport const UpdateFranchiseMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UpdateFranchiseMutation')\n  .props({\n    __typename: types.optional(types.literal(\"UpdateFranchiseMutation\"), \"UpdateFranchiseMutation\"),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UpdateFranchiseMutationModelSelector extends QueryBuilder {\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromUpdateFranchiseMutation() {\n  return new UpdateFranchiseMutationModelSelector()\n}\n\nexport const updateFranchiseMutationModelPrimitives = selectFromUpdateFranchiseMutation()\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AAStE;AACA;AACA;AACA;AACA,OAAO,MAAMC,gCAAgC,GAAGJ,aAAa,EAAQ,CAACC,SAAS,CAC5EI,KAAK,CAAC,yBAAyB,CAAC,CAChCC,KAAK,CAAC;EACLC,UAAU,EAAEV,KAAK,CAACW,QAAQ,CAACX,KAAK,CAACY,OAAO,CAAC,yBAAyB,CAAC,EAAE,yBAAyB,CAAC;EAC/FC,SAAS,EAAEb,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEf,SAAS,CAACD,KAAK,CAACiB,IAAI,CAAC,MAAWZ,kBAAkB,CAAC,CAAC;AAC1G,CAAC,CAAC,CACDa,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC,CAAC;AAEN,OAAO,MAAMC,oCAAoC,SAASpB,YAAY,CAAC;EACrEW,SAASA,CAACU,OAAsH,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,WAAU,EAAElB,0BAA0B,EAAEiB,OAAO,CAAC;EAAC;AAC5M;AACA,OAAO,SAASE,iCAAiCA,CAAA,EAAG;EAClD,OAAO,IAAIH,oCAAoC,EAAE;AACnD;AAEA,OAAO,MAAMI,sCAAsC,GAAGD,iCAAiC,EAAE"},"metadata":{},"sourceType":"module"}