{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { CityTypeModel } from \"./CityTypeModel\";\nimport { CityTypeModelSelector } from \"./CityTypeModel.base\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\n/**\n * StadiumTypeBase\n * auto generated base class for the model StadiumTypeModel.\n */\nexport const StadiumTypeModelBase = withTypedRefs()(ModelBase.named('StadiumType').props({\n  __typename: types.optional(types.literal(\"StadiumType\"), \"StadiumType\"),\n  id: types.identifier,\n  stadiumName: types.union(types.undefined, types.string),\n  seats: types.union(types.undefined, types.integer),\n  boxes: types.union(types.undefined, types.integer),\n  grade: types.union(types.undefined, types.integer),\n  maxGrade: types.union(types.undefined, types.integer),\n  homeFieldAdvantage: types.union(types.undefined, types.integer),\n  city: types.union(types.undefined, MSTGQLRef(types.late(() => CityTypeModel))),\n  franchise: types.union(types.undefined, MSTGQLRef(types.late(() => FranchiseTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class StadiumTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get stadiumName() {\n    return this.__attr(`stadiumName`);\n  }\n  get seats() {\n    return this.__attr(`seats`);\n  }\n  get boxes() {\n    return this.__attr(`boxes`);\n  }\n  get grade() {\n    return this.__attr(`grade`);\n  }\n  get maxGrade() {\n    return this.__attr(`maxGrade`);\n  }\n  get homeFieldAdvantage() {\n    return this.__attr(`homeFieldAdvantage`);\n  }\n  city(builder) {\n    return this.__child(`city`, CityTypeModelSelector, builder);\n  }\n  franchise(builder) {\n    return this.__child(`franchise`, FranchiseTypeModelSelector, builder);\n  }\n}\nexport function selectFromStadiumType() {\n  return new StadiumTypeModelSelector();\n}\nexport const stadiumTypeModelPrimitives = selectFromStadiumType().stadiumName.seats.boxes.grade.maxGrade.homeFieldAdvantage;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","CityTypeModel","CityTypeModelSelector","FranchiseTypeModel","FranchiseTypeModelSelector","StadiumTypeModelBase","named","props","__typename","optional","literal","id","identifier","stadiumName","union","undefined","string","seats","integer","boxes","grade","maxGrade","homeFieldAdvantage","city","late","franchise","views","self","store","__getStore","StadiumTypeModelSelector","__attr","builder","__child","selectFromStadiumType","stadiumTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/StadiumTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { CityTypeModel, CityTypeModelType } from \"./CityTypeModel\"\nimport { CityTypeModelSelector } from \"./CityTypeModel.base\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  city: CityTypeModelType;\n  franchise: FranchiseTypeModelType;\n}\n\n/**\n * StadiumTypeBase\n * auto generated base class for the model StadiumTypeModel.\n */\nexport const StadiumTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('StadiumType')\n  .props({\n    __typename: types.optional(types.literal(\"StadiumType\"), \"StadiumType\"),\n    id: types.identifier,\n    stadiumName: types.union(types.undefined, types.string),\n    seats: types.union(types.undefined, types.integer),\n    boxes: types.union(types.undefined, types.integer),\n    grade: types.union(types.undefined, types.integer),\n    maxGrade: types.union(types.undefined, types.integer),\n    homeFieldAdvantage: types.union(types.undefined, types.integer),\n    city: types.union(types.undefined, MSTGQLRef(types.late((): any => CityTypeModel))),\n    franchise: types.union(types.undefined, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class StadiumTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get stadiumName() { return this.__attr(`stadiumName`) }\n  get seats() { return this.__attr(`seats`) }\n  get boxes() { return this.__attr(`boxes`) }\n  get grade() { return this.__attr(`grade`) }\n  get maxGrade() { return this.__attr(`maxGrade`) }\n  get homeFieldAdvantage() { return this.__attr(`homeFieldAdvantage`) }\n  city(builder?: string | CityTypeModelSelector | ((selector: CityTypeModelSelector) => CityTypeModelSelector)) { return this.__child(`city`, CityTypeModelSelector, builder) }\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromStadiumType() {\n  return new StadiumTypeModelSelector()\n}\n\nexport const stadiumTypeModelPrimitives = selectFromStadiumType().stadiumName.seats.boxes.grade.maxGrade.homeFieldAdvantage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}