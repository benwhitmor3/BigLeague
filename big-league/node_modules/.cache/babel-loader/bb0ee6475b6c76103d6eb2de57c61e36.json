{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\nimport { StadiumTypeModel } from \"./StadiumTypeModel\";\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\";\n/**\n * CityTypeBase\n * auto generated base class for the model CityTypeModel.\n */\nexport const CityTypeModelBase = withTypedRefs()(ModelBase.named('CityType').props({\n  __typename: types.optional(types.literal(\"CityType\"), \"CityType\"),\n  id: types.identifier,\n  city: types.union(types.undefined, types.string),\n  cityValue: types.union(types.undefined, types.integer),\n  league: types.union(types.undefined, MSTGQLRef(types.late(() => LeagueTypeModel))),\n  stadiumSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(() => StadiumTypeModel))))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class CityTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get city() {\n    return this.__attr(`city`);\n  }\n  get cityValue() {\n    return this.__attr(`cityValue`);\n  }\n  league(builder) {\n    return this.__child(`league`, LeagueTypeModelSelector, builder);\n  }\n  stadiumSet(builder) {\n    return this.__child(`stadiumSet`, StadiumTypeModelSelector, builder);\n  }\n}\nexport function selectFromCityType() {\n  return new CityTypeModelSelector();\n}\nexport const cityTypeModelPrimitives = selectFromCityType().city.cityValue;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","LeagueTypeModel","LeagueTypeModelSelector","StadiumTypeModel","StadiumTypeModelSelector","CityTypeModelBase","named","props","__typename","optional","literal","id","identifier","city","union","undefined","string","cityValue","integer","league","late","stadiumSet","array","views","self","store","__getStore","CityTypeModelSelector","__attr","builder","__child","selectFromCityType","cityTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/CityTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { StadiumTypeModel, StadiumTypeModelType } from \"./StadiumTypeModel\"\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  league: LeagueTypeModelType;\n  stadiumSet: IObservableArray<StadiumTypeModelType>;\n}\n\n/**\n * CityTypeBase\n * auto generated base class for the model CityTypeModel.\n */\nexport const CityTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('CityType')\n  .props({\n    __typename: types.optional(types.literal(\"CityType\"), \"CityType\"),\n    id: types.identifier,\n    city: types.union(types.undefined, types.string),\n    cityValue: types.union(types.undefined, types.integer),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    stadiumSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => StadiumTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class CityTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get city() { return this.__attr(`city`) }\n  get cityValue() { return this.__attr(`cityValue`) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  stadiumSet(builder?: string | StadiumTypeModelSelector | ((selector: StadiumTypeModelSelector) => StadiumTypeModelSelector)) { return this.__child(`stadiumSet`, StadiumTypeModelSelector, builder) }\n}\nexport function selectFromCityType() {\n  return new CityTypeModelSelector()\n}\n\nexport const cityTypeModelPrimitives = selectFromCityType().city.cityValue\n"],"mappings":"AAAA;AACA;AACA;;AAGA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAA6B,mBAAmB;AACxE,SAASC,uBAAuB,QAAQ,wBAAwB;AAChE,SAASC,gBAAgB,QAA8B,oBAAoB;AAC3E,SAASC,wBAAwB,QAAQ,yBAAyB;AAUlE;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGN,aAAa,EAAQ,CAACC,SAAS,CAC7DM,KAAK,CAAC,UAAU,CAAC,CACjBC,KAAK,CAAC;EACLC,UAAU,EAAEZ,KAAK,CAACa,QAAQ,CAACb,KAAK,CAACc,OAAO,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC;EACjEC,EAAE,EAAEf,KAAK,CAACgB,UAAU;EACpBC,IAAI,EAAEjB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACoB,MAAM,CAAC;EAChDC,SAAS,EAAErB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACsB,OAAO,CAAC;EACtDC,MAAM,EAAEvB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAElB,SAAS,CAACD,KAAK,CAACwB,IAAI,CAAC,MAAWnB,eAAe,CAAC,CAAC,CAAC;EACvFoB,UAAU,EAAEzB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAAC0B,KAAK,CAACzB,SAAS,CAACD,KAAK,CAACwB,IAAI,CAAC,MAAWjB,gBAAgB,CAAC,CAAC,CAAC;AAC1G,CAAC,CAAC,CACDoB,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC,CAAC;AAEN,OAAO,MAAMC,qBAAqB,SAAS7B,YAAY,CAAC;EACtD,IAAIa,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACiB,MAAM,CAAE,IAAG,CAAC;EAAC;EACpC,IAAIf,IAAIA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACe,MAAM,CAAE,MAAK,CAAC;EAAC;EACxC,IAAIX,SAASA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACW,MAAM,CAAE,WAAU,CAAC;EAAC;EAClDT,MAAMA,CAACU,OAA6G,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,QAAO,EAAE5B,uBAAuB,EAAE2B,OAAO,CAAC;EAAC;EACxLR,UAAUA,CAACQ,OAAgH,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,YAAW,EAAE1B,wBAAwB,EAAEyB,OAAO,CAAC;EAAC;AACtM;AACA,OAAO,SAASE,kBAAkBA,CAAA,EAAG;EACnC,OAAO,IAAIJ,qBAAqB,EAAE;AACpC;AAEA,OAAO,MAAMK,uBAAuB,GAAGD,kBAAkB,EAAE,CAAClB,IAAI,CAACI,SAAS"},"metadata":{},"sourceType":"module"}