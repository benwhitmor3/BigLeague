{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { CityTypeModel } from \"./CityTypeModel\";\nimport { CityTypeModelSelector } from \"./CityTypeModel.base\";\nimport { CoachTypeModel } from \"./CoachTypeModel\";\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { GmTypeModel } from \"./GmTypeModel\";\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\";\nimport { PlayerHistoryTypeModel } from \"./PlayerHistoryTypeModel\";\nimport { PlayerHistoryTypeModelSelector } from \"./PlayerHistoryTypeModel.base\";\nimport { PlayerTypeModel } from \"./PlayerTypeModel\";\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\";\nimport { UserTypeModel } from \"./UserTypeModel\";\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\";\n/**\n * LeagueTypeBase\n * auto generated base class for the model LeagueTypeModel.\n */\nexport var LeagueTypeModelBase = withTypedRefs()(ModelBase.named('LeagueType').props({\n  __typename: types.optional(types.literal(\"LeagueType\"), \"LeagueType\"),\n  id: types.identifier,\n  leagueName: types.union(types.undefined, types.string),\n  user: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return UserTypeModel;\n  }))),\n  franchiseSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return FranchiseTypeModel;\n  })))),\n  citySet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return CityTypeModel;\n  })))),\n  gmSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return GmTypeModel;\n  })))),\n  coachSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return CoachTypeModel;\n  })))),\n  playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return PlayerTypeModel;\n  })))),\n  playerhistorySet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return PlayerHistoryTypeModel;\n  }))))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var LeagueTypeModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(LeagueTypeModelSelector, _QueryBuilder);\n  var _super = _createSuper(LeagueTypeModelSelector);\n  function LeagueTypeModelSelector() {\n    _classCallCheck(this, LeagueTypeModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LeagueTypeModelSelector, [{\n    key: \"id\",\n    get: function get() {\n      return this.__attr(\"id\");\n    }\n  }, {\n    key: \"leagueName\",\n    get: function get() {\n      return this.__attr(\"leagueName\");\n    }\n  }, {\n    key: \"user\",\n    value: function user(builder) {\n      return this.__child(\"user\", UserTypeModelSelector, builder);\n    }\n  }, {\n    key: \"franchiseSet\",\n    value: function franchiseSet(builder) {\n      return this.__child(\"franchiseSet\", FranchiseTypeModelSelector, builder);\n    }\n  }, {\n    key: \"citySet\",\n    value: function citySet(builder) {\n      return this.__child(\"citySet\", CityTypeModelSelector, builder);\n    }\n  }, {\n    key: \"gmSet\",\n    value: function gmSet(builder) {\n      return this.__child(\"gmSet\", GmTypeModelSelector, builder);\n    }\n  }, {\n    key: \"coachSet\",\n    value: function coachSet(builder) {\n      return this.__child(\"coachSet\", CoachTypeModelSelector, builder);\n    }\n  }, {\n    key: \"playerSet\",\n    value: function playerSet(builder) {\n      return this.__child(\"playerSet\", PlayerTypeModelSelector, builder);\n    }\n  }, {\n    key: \"playerhistorySet\",\n    value: function playerhistorySet(builder) {\n      return this.__child(\"playerhistorySet\", PlayerHistoryTypeModelSelector, builder);\n    }\n  }]);\n  return LeagueTypeModelSelector;\n}(QueryBuilder);\nexport function selectFromLeagueType() {\n  return new LeagueTypeModelSelector();\n}\nexport var leagueTypeModelPrimitives = selectFromLeagueType().leagueName;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","CityTypeModel","CityTypeModelSelector","CoachTypeModel","CoachTypeModelSelector","FranchiseTypeModel","FranchiseTypeModelSelector","GmTypeModel","GmTypeModelSelector","PlayerHistoryTypeModel","PlayerHistoryTypeModelSelector","PlayerTypeModel","PlayerTypeModelSelector","UserTypeModel","UserTypeModelSelector","LeagueTypeModelBase","named","props","__typename","optional","literal","id","identifier","leagueName","union","undefined","string","user","null","late","franchiseSet","array","citySet","gmSet","coachSet","playerSet","playerhistorySet","views","self","store","__getStore","LeagueTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromLeagueType","leagueTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/LeagueTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { CityTypeModel, CityTypeModelType } from \"./CityTypeModel\"\nimport { CityTypeModelSelector } from \"./CityTypeModel.base\"\nimport { CoachTypeModel, CoachTypeModelType } from \"./CoachTypeModel\"\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { GmTypeModel, GmTypeModelType } from \"./GmTypeModel\"\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\"\nimport { PlayerHistoryTypeModel, PlayerHistoryTypeModelType } from \"./PlayerHistoryTypeModel\"\nimport { PlayerHistoryTypeModelSelector } from \"./PlayerHistoryTypeModel.base\"\nimport { PlayerTypeModel, PlayerTypeModelType } from \"./PlayerTypeModel\"\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  user: UserTypeModelType;\n  franchiseSet: IObservableArray<FranchiseTypeModelType>;\n  citySet: IObservableArray<CityTypeModelType>;\n  gmSet: IObservableArray<GmTypeModelType>;\n  coachSet: IObservableArray<CoachTypeModelType>;\n  playerSet: IObservableArray<PlayerTypeModelType>;\n  playerhistorySet: IObservableArray<PlayerHistoryTypeModelType>;\n}\n\n/**\n * LeagueTypeBase\n * auto generated base class for the model LeagueTypeModel.\n */\nexport const LeagueTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('LeagueType')\n  .props({\n    __typename: types.optional(types.literal(\"LeagueType\"), \"LeagueType\"),\n    id: types.identifier,\n    leagueName: types.union(types.undefined, types.string),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n    franchiseSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => FranchiseTypeModel)))),\n    citySet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => CityTypeModel)))),\n    gmSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => GmTypeModel)))),\n    coachSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => CoachTypeModel)))),\n    playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => PlayerTypeModel)))),\n    playerhistorySet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => PlayerHistoryTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class LeagueTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get leagueName() { return this.__attr(`leagueName`) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n  franchiseSet(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchiseSet`, FranchiseTypeModelSelector, builder) }\n  citySet(builder?: string | CityTypeModelSelector | ((selector: CityTypeModelSelector) => CityTypeModelSelector)) { return this.__child(`citySet`, CityTypeModelSelector, builder) }\n  gmSet(builder?: string | GmTypeModelSelector | ((selector: GmTypeModelSelector) => GmTypeModelSelector)) { return this.__child(`gmSet`, GmTypeModelSelector, builder) }\n  coachSet(builder?: string | CoachTypeModelSelector | ((selector: CoachTypeModelSelector) => CoachTypeModelSelector)) { return this.__child(`coachSet`, CoachTypeModelSelector, builder) }\n  playerSet(builder?: string | PlayerTypeModelSelector | ((selector: PlayerTypeModelSelector) => PlayerTypeModelSelector)) { return this.__child(`playerSet`, PlayerTypeModelSelector, builder) }\n  playerhistorySet(builder?: string | PlayerHistoryTypeModelSelector | ((selector: PlayerHistoryTypeModelSelector) => PlayerHistoryTypeModelSelector)) { return this.__child(`playerhistorySet`, PlayerHistoryTypeModelSelector, builder) }\n}\nexport function selectFromLeagueType() {\n  return new LeagueTypeModelSelector()\n}\n\nexport const leagueTypeModelPrimitives = selectFromLeagueType().leagueName\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}