{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { UserTypeModel } from \"./UserTypeModel\";\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\";\n/**\n * CreateFranchiseMutationBase\n * auto generated base class for the model CreateFranchiseMutationModel.\n */\nexport const CreateFranchiseMutationModelBase = withTypedRefs()(ModelBase.named('CreateFranchiseMutation').props({\n  __typename: types.optional(types.literal(\"CreateFranchiseMutation\"), \"CreateFranchiseMutation\"),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => FranchiseTypeModel))),\n  user: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => UserTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class CreateFranchiseMutationModelSelector extends QueryBuilder {\n  franchise(builder) {\n    return this.__child(`franchise`, FranchiseTypeModelSelector, builder);\n  }\n  user(builder) {\n    return this.__child(`user`, UserTypeModelSelector, builder);\n  }\n}\nexport function selectFromCreateFranchiseMutation() {\n  return new CreateFranchiseMutationModelSelector();\n}\nexport const createFranchiseMutationModelPrimitives = selectFromCreateFranchiseMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","UserTypeModel","UserTypeModelSelector","CreateFranchiseMutationModelBase","named","props","__typename","optional","literal","franchise","union","undefined","null","late","user","views","self","store","__getStore","CreateFranchiseMutationModelSelector","builder","__child","selectFromCreateFranchiseMutation","createFranchiseMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/CreateFranchiseMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n  user: UserTypeModelType;\n}\n\n/**\n * CreateFranchiseMutationBase\n * auto generated base class for the model CreateFranchiseMutationModel.\n */\nexport const CreateFranchiseMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('CreateFranchiseMutation')\n  .props({\n    __typename: types.optional(types.literal(\"CreateFranchiseMutation\"), \"CreateFranchiseMutation\"),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class CreateFranchiseMutationModelSelector extends QueryBuilder {\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n}\nexport function selectFromCreateFranchiseMutation() {\n  return new CreateFranchiseMutationModelSelector()\n}\n\nexport const createFranchiseMutationModelPrimitives = selectFromCreateFranchiseMutation()\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AACtE,SAASC,aAAa,QAA2B,iBAAiB;AAClE,SAASC,qBAAqB,QAAQ,sBAAsB;AAU5D;AACA;AACA;AACA;AACA,OAAO,MAAMC,gCAAgC,GAAGN,aAAa,EAAQ,CAACC,SAAS,CAC5EM,KAAK,CAAC,yBAAyB,CAAC,CAChCC,KAAK,CAAC;EACLC,UAAU,EAAEZ,KAAK,CAACa,QAAQ,CAACb,KAAK,CAACc,OAAO,CAAC,yBAAyB,CAAC,EAAE,yBAAyB,CAAC;EAC/FC,SAAS,EAAEf,KAAK,CAACgB,KAAK,CAAChB,KAAK,CAACiB,SAAS,EAAEjB,KAAK,CAACkB,IAAI,EAAEjB,SAAS,CAACD,KAAK,CAACmB,IAAI,CAAC,MAAWd,kBAAkB,CAAC,CAAC,CAAC;EACzGe,IAAI,EAAEpB,KAAK,CAACgB,KAAK,CAAChB,KAAK,CAACiB,SAAS,EAAEjB,KAAK,CAACkB,IAAI,EAAEjB,SAAS,CAACD,KAAK,CAACmB,IAAI,CAAC,MAAWZ,aAAa,CAAC,CAAC;AAChG,CAAC,CAAC,CACDc,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC,CAAC;AAEN,OAAO,MAAMC,oCAAoC,SAASvB,YAAY,CAAC;EACrEa,SAASA,CAACW,OAAsH,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,WAAU,EAAErB,0BAA0B,EAAEoB,OAAO,CAAC;EAAC;EAC1MN,IAAIA,CAACM,OAAuG,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,MAAK,EAAEnB,qBAAqB,EAAEkB,OAAO,CAAC;EAAC;AAC9K;AACA,OAAO,SAASE,iCAAiCA,CAAA,EAAG;EAClD,OAAO,IAAIH,oCAAoC,EAAE;AACnD;AAEA,OAAO,MAAMI,sCAAsC,GAAGD,iCAAiC,EAAE"},"metadata":{},"sourceType":"module"}