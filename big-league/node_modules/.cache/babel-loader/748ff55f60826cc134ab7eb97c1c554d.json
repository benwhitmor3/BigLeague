{"ast":null,"code":"var _jsxFileName = \"/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Organisms/Tables/LeaderboardTable.tsx\";\nimport React, { useContext } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table } from 'antd';\nimport { observer } from \"mobx-react\";\nimport { observable } from 'mobx';\nimport { StoreContext } from \"../../../models\";\nimport { tableStyles } from \"./TableStyles\";\nexport const LeaderboardTable = observer(() => {\n  const store = useContext(StoreContext);\n  const columns = [{\n    title: 'Franchise',\n    dataIndex: ['franchise'],\n    key: 'franchise'\n  }, {\n    title: 'Profit (m)',\n    dataIndex: 'profit',\n    key: 'profit',\n    sorter: (a, b) => a.profit - b.profit,\n    defaultSortOrder: 'descend',\n    render: profit => {\n      var _ref;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 45\n        }\n      }, (_ref = profit / 1000000) === null || _ref === void 0 ? void 0 : _ref.toFixed(0));\n    }\n  }];\n\n  // need to map to array —– can't use toJS(franchiseSet) as that doesn't carry mob x \"getter\" which has profit\n  let data = observable(store.User.league.franchiseSet.map(franchise => franchise));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowKey: \"id\"\n    // @ts-ignore (need this to add defaultSorter for Wins)\n    ,\n    columns: columns,\n    dataSource: data,\n    pagination: false,\n    bordered: true,\n    style: tableStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }));\n});\nexport default LeaderboardTable;","map":{"version":3,"names":["React","useContext","Table","observer","observable","StoreContext","tableStyles","LeaderboardTable","store","columns","title","dataIndex","key","sorter","a","b","profit","defaultSortOrder","render","_ref","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","data","User","league","franchiseSet","map","franchise","rowKey","dataSource","pagination","bordered","style"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Organisms/Tables/LeaderboardTable.tsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport 'antd/dist/antd.css';\nimport {Space, Table, Tag} from 'antd';\nimport {observer} from \"mobx-react\";\nimport {IObservableArray, observable, toJS} from 'mobx';\nimport {StoreContext, FranchiseTypeModelType, PlayerTypeModelType} from \"../../../models\";\nimport {tableStyles} from \"./TableStyles\";\n\n\nexport const LeaderboardTable: React.FunctionComponent = observer(() => {\n\n        const store = useContext(StoreContext)\n\n        const columns = [\n            {\n                title: 'Franchise',\n                dataIndex: ['franchise'],\n                key: 'franchise',\n            },\n            {\n                title: 'Profit (m)',\n                dataIndex: 'profit',\n                key: 'profit',\n                sorter: (a: any, b: any) => a.profit - b.profit,\n                defaultSortOrder: 'descend',\n                render: (profit: number) => <span>{(profit / 1000000)?.toFixed(0)}</span>,\n            },\n        ];\n\n        // need to map to array —– can't use toJS(franchiseSet) as that doesn't carry mob x \"getter\" which has profit\n        let data: IObservableArray<FranchiseTypeModelType> =  observable(store.User.league.franchiseSet.map((franchise: FranchiseTypeModelType) => franchise))\n\n        return (\n            <div>\n                <Table\n                    rowKey=\"id\"\n                    // @ts-ignore (need this to add defaultSorter for Wins)\n                    columns={columns}\n                    dataSource={data}\n                    pagination={false}\n                    bordered\n                    style={tableStyles}\n                />\n            </div>\n        );\n    }\n)\n\nexport default LeaderboardTable;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAO,oBAAoB;AAC3B,SAAeC,KAAK,QAAY,MAAM;AACtC,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAA0BC,UAAU,QAAa,MAAM;AACvD,SAAQC,YAAY,QAAoD,iBAAiB;AACzF,SAAQC,WAAW,QAAO,eAAe;AAGzC,OAAO,MAAMC,gBAAyC,GAAGJ,QAAQ,CAAC,MAAM;EAEhE,MAAMK,KAAK,GAAGP,UAAU,CAACI,YAAY,CAAC;EAEtC,MAAMI,OAAO,GAAG,CACZ;IACIC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAE,CAAC,WAAW,CAAC;IACxBC,GAAG,EAAE;EACT,CAAC,EACD;IACIF,KAAK,EAAE,YAAY;IACnBC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAEA,CAACC,CAAM,EAAEC,CAAM,KAAKD,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM;IAC/CC,gBAAgB,EAAE,SAAS;IAC3BC,MAAM,EAAGF,MAAc;MAAA,IAAAG,IAAA;MAAA,oBAAKnB,KAAA,CAAAoB,aAAA;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,IAAAP,IAAA,GAAQH,MAAM,GAAG,OAAO,cAAAG,IAAA,uBAAjBA,IAAA,CAAoBQ,OAAO,CAAC,CAAC,CAAC,CAAQ;IAAA;EAC7E,CAAC,CACJ;;EAED;EACA,IAAIC,IAA8C,GAAIxB,UAAU,CAACI,KAAK,CAACqB,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,GAAG,CAAEC,SAAiC,IAAKA,SAAS,CAAC,CAAC;EAEtJ,oBACIjC,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI1B,KAAA,CAAAoB,aAAA,CAAClB,KAAK;IACFgC,MAAM,EAAC;IACP;IAAA;IACAzB,OAAO,EAAEA,OAAQ;IACjB0B,UAAU,EAAEP,IAAK;IACjBQ,UAAU,EAAE,KAAM;IAClBC,QAAQ;IACRC,KAAK,EAAEhC,WAAY;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACrB,CACA;AAEd,CAAC,CACJ;AAED,eAAenB,gBAAgB"},"metadata":{},"sourceType":"module"}