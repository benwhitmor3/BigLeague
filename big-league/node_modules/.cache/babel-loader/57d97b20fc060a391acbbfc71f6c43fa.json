{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\nimport { PlayerHistorySuitEnumType } from \"./PlayerHistorySuitEnum\";\n/**\n * PlayerHistoryTypeBase\n * auto generated base class for the model PlayerHistoryTypeModel.\n */\nexport const PlayerHistoryTypeModelBase = withTypedRefs()(ModelBase.named('PlayerHistoryType').props({\n  __typename: types.optional(types.literal(\"PlayerHistoryType\"), \"PlayerHistoryType\"),\n  id: types.identifier,\n  season: types.union(types.undefined, types.integer),\n  name: types.union(types.undefined, types.string),\n  suit: types.union(types.undefined, PlayerHistorySuitEnumType),\n  age: types.union(types.undefined, types.integer),\n  pv: types.union(types.undefined, types.number),\n  epv: types.union(types.undefined, types.number),\n  sEpv: types.union(types.undefined, types.number),\n  league: types.union(types.undefined, MSTGQLRef(types.late(() => LeagueTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class PlayerHistoryTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get season() {\n    return this.__attr(`season`);\n  }\n  get name() {\n    return this.__attr(`name`);\n  }\n  get suit() {\n    return this.__attr(`suit`);\n  }\n  get age() {\n    return this.__attr(`age`);\n  }\n  get pv() {\n    return this.__attr(`pv`);\n  }\n  get epv() {\n    return this.__attr(`epv`);\n  }\n  get sEpv() {\n    return this.__attr(`sEpv`);\n  }\n  league(builder) {\n    return this.__child(`league`, LeagueTypeModelSelector, builder);\n  }\n}\nexport function selectFromPlayerHistoryType() {\n  return new PlayerHistoryTypeModelSelector();\n}\nexport const playerHistoryTypeModelPrimitives = selectFromPlayerHistoryType().season.name.suit.age.pv.epv.sEpv;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","LeagueTypeModel","LeagueTypeModelSelector","PlayerHistorySuitEnumType","PlayerHistoryTypeModelBase","named","props","__typename","optional","literal","id","identifier","season","union","undefined","integer","name","string","suit","age","pv","number","epv","sEpv","league","late","views","self","store","__getStore","PlayerHistoryTypeModelSelector","__attr","builder","__child","selectFromPlayerHistoryType","playerHistoryTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/PlayerHistoryTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { PlayerHistorySuitEnumType } from \"./PlayerHistorySuitEnum\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  league: LeagueTypeModelType;\n}\n\n/**\n * PlayerHistoryTypeBase\n * auto generated base class for the model PlayerHistoryTypeModel.\n */\nexport const PlayerHistoryTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('PlayerHistoryType')\n  .props({\n    __typename: types.optional(types.literal(\"PlayerHistoryType\"), \"PlayerHistoryType\"),\n    id: types.identifier,\n    season: types.union(types.undefined, types.integer),\n    name: types.union(types.undefined, types.string),\n    suit: types.union(types.undefined, PlayerHistorySuitEnumType),\n    age: types.union(types.undefined, types.integer),\n    pv: types.union(types.undefined, types.number),\n    epv: types.union(types.undefined, types.number),\n    sEpv: types.union(types.undefined, types.number),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class PlayerHistoryTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get season() { return this.__attr(`season`) }\n  get name() { return this.__attr(`name`) }\n  get suit() { return this.__attr(`suit`) }\n  get age() { return this.__attr(`age`) }\n  get pv() { return this.__attr(`pv`) }\n  get epv() { return this.__attr(`epv`) }\n  get sEpv() { return this.__attr(`sEpv`) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n}\nexport function selectFromPlayerHistoryType() {\n  return new PlayerHistoryTypeModelSelector()\n}\n\nexport const playerHistoryTypeModelPrimitives = selectFromPlayerHistoryType().season.name.suit.age.pv.epv.sEpv\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}