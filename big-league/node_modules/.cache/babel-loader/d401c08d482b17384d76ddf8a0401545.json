{"ast":null,"code":"import'antd/dist/antd.css';import{lineupError,rosterError,staffError,starterError,unsignedError}from\"../../Atoms/notificationerrors\";export var simSeasonChecker=function simSeasonChecker(franchise,league){// every team needs at least 5 players\nif(franchise.playerSet.length<5){league.setSeasonSimCheck(false);return rosterError(franchise.franchise);}// all players with a franchise need a lineup\nif(franchise.lineup.includes(null)){league.setSeasonSimCheck(false);return lineupError(franchise.franchise);}// each franchise needs 5 starters\nif(franchise.starters.length!==5){league.setSeasonSimCheck(false);return starterError(franchise.franchise);}// all players with a franchise need to be signed\nif(franchise.contracts.includes(null)){league.setSeasonSimCheck(false);return unsignedError(franchise.franchise);}// all franchises need staff\nif(!franchise.gm||!franchise.coach){league.setSeasonSimCheck(false);return staffError(franchise.franchise);}};","map":{"version":3,"names":["lineupError","rosterError","staffError","starterError","unsignedError","simSeasonChecker","franchise","league","playerSet","length","setSeasonSimCheck","lineup","includes","starters","contracts","gm","coach"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/SimulationButtons/SimSeasonChecker.tsx"],"sourcesContent":["import 'antd/dist/antd.css';\nimport {FranchiseTypeModelType, LeagueTypeModelType} from \"../../../models\";\nimport {lineupError, rosterError, staffError, starterError, unsignedError} from \"../../Atoms/notificationerrors\";\n\n\nexport const simSeasonChecker = (franchise: FranchiseTypeModelType, league: LeagueTypeModelType) => {\n    // every team needs at least 5 players\n    if (franchise.playerSet.length < 5) {\n        league.setSeasonSimCheck(false)\n        return rosterError(franchise.franchise);\n    }\n    // all players with a franchise need a lineup\n    if (franchise.lineup.includes(null)) {\n        league.setSeasonSimCheck(false)\n        return lineupError(franchise.franchise);\n    }\n    // each franchise needs 5 starters\n    if (franchise.starters.length !== 5) {\n        league.setSeasonSimCheck(false)\n        return starterError(franchise.franchise);\n    }\n    // all players with a franchise need to be signed\n    if (franchise.contracts.includes(null)) {\n        league.setSeasonSimCheck(false)\n        return unsignedError(franchise.franchise);\n    }\n    // all franchises need staff\n    if (!franchise.gm || !franchise.coach) {\n        league.setSeasonSimCheck(false)\n        return staffError(franchise.franchise);\n    }\n}"],"mappings":"AAAA,MAAO,oBAAoB,CAE3B,OAAQA,WAAW,CAAEC,WAAW,CAAEC,UAAU,CAAEC,YAAY,CAAEC,aAAa,KAAO,gCAAgC,CAGhH,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,SAAiC,CAAEC,MAA2B,CAAK,CAChG;AACA,GAAID,SAAS,CAACE,SAAS,CAACC,MAAM,CAAG,CAAC,CAAE,CAChCF,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC,CAC/B,MAAO,CAAAT,WAAW,CAACK,SAAS,CAACA,SAAS,CAAC,CAC3C,CACA;AACA,GAAIA,SAAS,CAACK,MAAM,CAACC,QAAQ,CAAC,IAAI,CAAC,CAAE,CACjCL,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC,CAC/B,MAAO,CAAAV,WAAW,CAACM,SAAS,CAACA,SAAS,CAAC,CAC3C,CACA;AACA,GAAIA,SAAS,CAACO,QAAQ,CAACJ,MAAM,GAAK,CAAC,CAAE,CACjCF,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC,CAC/B,MAAO,CAAAP,YAAY,CAACG,SAAS,CAACA,SAAS,CAAC,CAC5C,CACA;AACA,GAAIA,SAAS,CAACQ,SAAS,CAACF,QAAQ,CAAC,IAAI,CAAC,CAAE,CACpCL,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC,CAC/B,MAAO,CAAAN,aAAa,CAACE,SAAS,CAACA,SAAS,CAAC,CAC7C,CACA;AACA,GAAI,CAACA,SAAS,CAACS,EAAE,EAAI,CAACT,SAAS,CAACU,KAAK,CAAE,CACnCT,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC,CAC/B,MAAO,CAAAR,UAAU,CAACI,SAAS,CAACA,SAAS,CAAC,CAC1C,CACJ,CAAC"},"metadata":{},"sourceType":"module"}