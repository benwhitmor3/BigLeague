{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\n/**\n * SeasonTypeBase\n * auto generated base class for the model SeasonTypeModel.\n */\nexport var SeasonTypeModelBase = withTypedRefs()(ModelBase.named('SeasonType').props({\n  __typename: types.optional(types.literal(\"SeasonType\"), \"SeasonType\"),\n  id: types.identifier,\n  franchise: types.union(types.undefined, MSTGQLRef(types.late(function () {\n    return FranchiseTypeModel;\n  }))),\n  season: types.union(types.undefined, types.integer),\n  ready: types.union(types.undefined, types.boolean),\n  wins: types.union(types.undefined, types.integer),\n  losses: types.union(types.undefined, types.integer),\n  ppg: types.union(types.undefined, types.number),\n  std: types.union(types.undefined, types.number),\n  championships: types.union(types.undefined, types.integer),\n  bonuses: types.union(types.undefined, types.integer),\n  penalties: types.union(types.undefined, types.integer),\n  fanBase: types.union(types.undefined, types.number),\n  fanIndex: types.union(types.undefined, types.number),\n  advertising: types.union(types.undefined, types.integer),\n  ticketPrice: types.union(types.undefined, types.number),\n  ticketsSold: types.union(types.undefined, types.number),\n  boxPrice: types.union(types.undefined, types.number),\n  boxesSold: types.union(types.undefined, types.number),\n  revenue: types.union(types.undefined, types.number),\n  expenses: types.union(types.undefined, types.number)\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var SeasonTypeModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(SeasonTypeModelSelector, _QueryBuilder);\n  var _super = _createSuper(SeasonTypeModelSelector);\n  function SeasonTypeModelSelector() {\n    _classCallCheck(this, SeasonTypeModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SeasonTypeModelSelector, [{\n    key: \"id\",\n    get: function get() {\n      return this.__attr(\"id\");\n    }\n  }, {\n    key: \"season\",\n    get: function get() {\n      return this.__attr(\"season\");\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return this.__attr(\"ready\");\n    }\n  }, {\n    key: \"wins\",\n    get: function get() {\n      return this.__attr(\"wins\");\n    }\n  }, {\n    key: \"losses\",\n    get: function get() {\n      return this.__attr(\"losses\");\n    }\n  }, {\n    key: \"ppg\",\n    get: function get() {\n      return this.__attr(\"ppg\");\n    }\n  }, {\n    key: \"std\",\n    get: function get() {\n      return this.__attr(\"std\");\n    }\n  }, {\n    key: \"championships\",\n    get: function get() {\n      return this.__attr(\"championships\");\n    }\n  }, {\n    key: \"bonuses\",\n    get: function get() {\n      return this.__attr(\"bonuses\");\n    }\n  }, {\n    key: \"penalties\",\n    get: function get() {\n      return this.__attr(\"penalties\");\n    }\n  }, {\n    key: \"fanBase\",\n    get: function get() {\n      return this.__attr(\"fanBase\");\n    }\n  }, {\n    key: \"fanIndex\",\n    get: function get() {\n      return this.__attr(\"fanIndex\");\n    }\n  }, {\n    key: \"advertising\",\n    get: function get() {\n      return this.__attr(\"advertising\");\n    }\n  }, {\n    key: \"ticketPrice\",\n    get: function get() {\n      return this.__attr(\"ticketPrice\");\n    }\n  }, {\n    key: \"ticketsSold\",\n    get: function get() {\n      return this.__attr(\"ticketsSold\");\n    }\n  }, {\n    key: \"boxPrice\",\n    get: function get() {\n      return this.__attr(\"boxPrice\");\n    }\n  }, {\n    key: \"boxesSold\",\n    get: function get() {\n      return this.__attr(\"boxesSold\");\n    }\n  }, {\n    key: \"revenue\",\n    get: function get() {\n      return this.__attr(\"revenue\");\n    }\n  }, {\n    key: \"expenses\",\n    get: function get() {\n      return this.__attr(\"expenses\");\n    }\n  }, {\n    key: \"franchise\",\n    value: function franchise(builder) {\n      return this.__child(\"franchise\", FranchiseTypeModelSelector, builder);\n    }\n  }]);\n  return SeasonTypeModelSelector;\n}(QueryBuilder);\nexport function selectFromSeasonType() {\n  return new SeasonTypeModelSelector();\n}\nexport var seasonTypeModelPrimitives = selectFromSeasonType().season.ready.wins.losses.ppg.std.championships.bonuses.penalties.fanBase.fanIndex.advertising.ticketPrice.ticketsSold.boxPrice.boxesSold.revenue.expenses;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","SeasonTypeModelBase","named","props","__typename","optional","literal","id","identifier","franchise","union","undefined","late","season","integer","ready","boolean","wins","losses","ppg","number","std","championships","bonuses","penalties","fanBase","fanIndex","advertising","ticketPrice","ticketsSold","boxPrice","boxesSold","revenue","expenses","views","self","store","__getStore","SeasonTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromSeasonType","seasonTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/SeasonTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n}\n\n/**\n * SeasonTypeBase\n * auto generated base class for the model SeasonTypeModel.\n */\nexport const SeasonTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('SeasonType')\n  .props({\n    __typename: types.optional(types.literal(\"SeasonType\"), \"SeasonType\"),\n    id: types.identifier,\n    franchise: types.union(types.undefined, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n    season: types.union(types.undefined, types.integer),\n    ready: types.union(types.undefined, types.boolean),\n    wins: types.union(types.undefined, types.integer),\n    losses: types.union(types.undefined, types.integer),\n    ppg: types.union(types.undefined, types.number),\n    std: types.union(types.undefined, types.number),\n    championships: types.union(types.undefined, types.integer),\n    bonuses: types.union(types.undefined, types.integer),\n    penalties: types.union(types.undefined, types.integer),\n    fanBase: types.union(types.undefined, types.number),\n    fanIndex: types.union(types.undefined, types.number),\n    advertising: types.union(types.undefined, types.integer),\n    ticketPrice: types.union(types.undefined, types.number),\n    ticketsSold: types.union(types.undefined, types.number),\n    boxPrice: types.union(types.undefined, types.number),\n    boxesSold: types.union(types.undefined, types.number),\n    revenue: types.union(types.undefined, types.number),\n    expenses: types.union(types.undefined, types.number),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class SeasonTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get season() { return this.__attr(`season`) }\n  get ready() { return this.__attr(`ready`) }\n  get wins() { return this.__attr(`wins`) }\n  get losses() { return this.__attr(`losses`) }\n  get ppg() { return this.__attr(`ppg`) }\n  get std() { return this.__attr(`std`) }\n  get championships() { return this.__attr(`championships`) }\n  get bonuses() { return this.__attr(`bonuses`) }\n  get penalties() { return this.__attr(`penalties`) }\n  get fanBase() { return this.__attr(`fanBase`) }\n  get fanIndex() { return this.__attr(`fanIndex`) }\n  get advertising() { return this.__attr(`advertising`) }\n  get ticketPrice() { return this.__attr(`ticketPrice`) }\n  get ticketsSold() { return this.__attr(`ticketsSold`) }\n  get boxPrice() { return this.__attr(`boxPrice`) }\n  get boxesSold() { return this.__attr(`boxesSold`) }\n  get revenue() { return this.__attr(`revenue`) }\n  get expenses() { return this.__attr(`expenses`) }\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromSeasonType() {\n  return new SeasonTypeModelSelector()\n}\n\nexport const seasonTypeModelPrimitives = selectFromSeasonType().season.ready.wins.losses.ppg.std.championships.bonuses.penalties.fanBase.fanIndex.advertising.ticketPrice.ticketsSold.boxPrice.boxesSold.revenue.expenses\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}