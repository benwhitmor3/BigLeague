{"ast":null,"code":"var _jsxFileName = \"/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/LineupSelect.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { StoreContext } from \"../../models\";\nimport { Select } from \"../Atoms/Select\";\nimport { observer } from \"mobx-react\";\nimport { mutateCreatePlayerQuery } from \"../Utils/queries\";\nconst LineupSelect = observer(_ref => {\n  let {\n    current_lineup,\n    record,\n    setRosterAlert\n  } = _ref;\n  const store = useContext(StoreContext);\n  const [selected, setSelected] = useState(current_lineup);\n  const submitLineup = updated_lineup => {\n    // hides roster alert if previously true\n    setRosterAlert(false);\n    // get current lineup array\n    let lineupArray = record.franchise.playerSet.map(p => p.lineup);\n    // add updated_lineup selection\n    lineupArray.push(updated_lineup);\n    // if legal lineup run mutation\n    if (lineupArray.filter(x => x === \"starter\").length <= 5 && lineupArray.filter(x => x === \"rotation\").length <= 3) {\n      setSelected(updated_lineup);\n      store.mutateCreatePlayer({\n        \"playerInput\": {\n          \"name\": record.name,\n          \"suit\": record.suit,\n          \"age\": record.age,\n          \"pv\": record.pv,\n          \"epv\": record.epv,\n          \"sEpv\": record.sEpv,\n          \"contract\": record.contract,\n          \"tOption\": record.tOption,\n          \"pOption\": record.pOption,\n          \"renew\": record.renew,\n          \"salary\": record.salary,\n          \"grade\": record.grade,\n          \"franchiseId\": record.franchise.id,\n          \"trainer\": record.trainer,\n          \"year\": record.year,\n          \"lineup\": updated_lineup,\n          \"leagueId\": store.User.franchise.league.id\n        }\n      }, mutateCreatePlayerQuery, undefined);\n    }\n    // else set roster alert pop-up\n    else {\n      setRosterAlert(true);\n    }\n  };\n  let other_values = [\"starter\", \"rotation\", \"bench\"].filter(x => ![current_lineup].includes(x));\n  const options = other_values => {\n    if (other_values.length === 2) {\n      return [{\n        value: current_lineup,\n        label: current_lineup\n      }, {\n        value: other_values[0],\n        label: other_values[0]\n      }, {\n        value: other_values[1],\n        label: other_values[1]\n      }];\n    } else {\n      return [{\n        value: current_lineup,\n        label: current_lineup\n      }, {\n        value: other_values[0],\n        label: other_values[0]\n      }, {\n        value: other_values[1],\n        label: other_values[1]\n      }, {\n        value: other_values[2],\n        label: other_values[2]\n      }];\n    }\n  };\n  return /*#__PURE__*/React.createElement(Select, {\n    options: options(other_values),\n    value: selected,\n    onChange: updated_lineup => submitLineup(updated_lineup),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }\n  });\n});\nexport default LineupSelect;","map":{"version":3,"names":["React","useContext","useState","StoreContext","Select","observer","mutateCreatePlayerQuery","LineupSelect","_ref","current_lineup","record","setRosterAlert","store","selected","setSelected","submitLineup","updated_lineup","lineupArray","franchise","playerSet","map","p","lineup","push","filter","x","length","mutateCreatePlayer","name","suit","age","pv","epv","sEpv","contract","tOption","pOption","renew","salary","grade","id","trainer","year","User","league","undefined","other_values","includes","options","value","label","createElement","onChange","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/LineupSelect.tsx"],"sourcesContent":["import React, {useContext, useState} from \"react\";\nimport {PlayerTypeModelType, StoreContext} from \"../../models\";\nimport {Select} from \"../Atoms/Select\";\nimport {observer} from \"mobx-react\";\nimport {mutateCreatePlayerQuery} from \"../Utils/queries\";\n\n\ninterface ILineup {\n    current_lineup: any;\n    record: any;\n    setRosterAlert: (rosteralert:boolean) => void;\n}\n\nconst LineupSelect: React.FunctionComponent<ILineup> = observer(({current_lineup, record, setRosterAlert} : ILineup) => {\n\n            const store = useContext(StoreContext);\n\n            const [selected, setSelected] = useState(current_lineup);\n\n            const submitLineup = (updated_lineup: any) => {\n                // hides roster alert if previously true\n                setRosterAlert(false)\n                // get current lineup array\n                let lineupArray: Array<string> = record.franchise.playerSet.map((p: PlayerTypeModelType) =>\n                    p.lineup\n                );\n                // add updated_lineup selection\n                lineupArray.push(updated_lineup);\n                // if legal lineup run mutation\n                if (lineupArray.filter(x => x === \"starter\").length <= 5 && lineupArray.filter(x => x === \"rotation\").length <= 3) {\n                    setSelected(updated_lineup);\n                    store.mutateCreatePlayer({\n                            \"playerInput\": {\n                                \"name\": record.name,\n                                \"suit\": record.suit,\n                                \"age\": record.age,\n                                \"pv\": record.pv,\n                                \"epv\": record.epv,\n                                \"sEpv\": record.sEpv,\n                                \"contract\": record.contract,\n                                \"tOption\": record.tOption,\n                                \"pOption\": record.pOption,\n                                \"renew\": record.renew,\n                                \"salary\": record.salary,\n                                \"grade\": record.grade,\n                                \"franchiseId\": record.franchise.id,\n                                \"trainer\": record.trainer,\n                                \"year\": record.year,\n                                \"lineup\": updated_lineup,\n                                \"leagueId\": store.User.franchise.league.id\n                            }\n                        }, mutateCreatePlayerQuery,\n                        undefined\n                    )\n                }\n                // else set roster alert pop-up\n                else {\n                    setRosterAlert(true)\n                }\n            };\n\n            let other_values = [\"starter\", \"rotation\", \"bench\"].filter(x => ![current_lineup].includes(x));\n\n            const options = (other_values: Array<string>) => {\n                if (other_values.length === 2) {\n                    return [{value: current_lineup, label: current_lineup}, {\n                        value: other_values[0],\n                        label: other_values[0]\n                    },\n                        {value: other_values[1], label: other_values[1]}];\n                } else {\n                    return [{value: current_lineup, label: current_lineup}, {\n                        value: other_values[0],\n                        label: other_values[0]\n                    },\n                        {value: other_values[1], label: other_values[1]}, {value: other_values[2], label: other_values[2]}];\n                }\n            };\n\n            return <Select options={options(other_values)} value={selected}\n                           onChange={(updated_lineup: any) => submitLineup(updated_lineup)}/>\n        }\n);\n\nexport default LineupSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}