{"ast":null,"code":"import _slicedToArray from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/SimulationButtons/SimSeasonButton.tsx\";\nimport React, { useContext, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Button } from 'antd';\nimport { observer } from \"mobx-react\";\nimport axios from \"axios\";\nimport { StoreContext } from \"../../../models\";\nimport { userQuery } from \"../../Utils/queries\";\nimport { simSeasonChecker } from \"./SimSeasonChecker\";\nimport { simButtonStyles } from \"./SimButtonStyles\";\nimport BigLoading from \"../../Atoms/Loading/BigLoading\";\nimport { ticketError, unusedActionError } from \"../../Atoms/notificationerrors\";\nexport var SimSeasonButton = observer(function () {\n  var store = useContext(StoreContext);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\n  var simSeason = function simSeason() {\n    // sets seasonSimCheck as true\n    store.User.league.setSeasonSimCheck(true);\n    // loops through each franchise, if check fails, sets seasonSim to false\n    store.User.franchise.league.franchiseSet.forEach(function (franchise) {\n      return simSeasonChecker(franchise, store.User.league);\n    });\n    //checks if user team has ticket pricing, if check fails, sets seasonSim to false\n    if (store.User.franchise.seasonSet[store.User.franchise.seasonSet.length - 1].ticketPrice === 0 || store.User.franchise.seasonSet[store.User.franchise.seasonSet.length - 1].boxPrice === 0) {\n      store.User.league.setSeasonSimCheck(false);\n      return ticketError(store.User.franchise.franchise);\n    }\n    //checks if user team has actions available, if check fails, sets seasonSim to false\n    if (store.User.franchise.action.numberOfActions > 0) {\n      store.User.league.setSeasonSimCheck(false);\n      return unusedActionError(store.User.franchise.franchise);\n    }\n    // if seasonSimCheck is false do not run season simulation\n    if (store.User.league.seasonSimCheck === false) {\n      return;\n    }\n    var link = '';\n    if (window.location.port === '3000') {\n      link = window.location.hostname + ':8000';\n    } else {\n      link = window.location.host;\n    }\n    // season sim request\n    var data = new FormData();\n    data.append(\"league_id\", store.User.franchise.league.id);\n    data.append(\"season\", store.User.franchise.seasonSet.length);\n    setLoading(true);\n    axios.post(window.location.protocol + \"//\" + link + '/season_sim', data).then(function (res) {\n      console.log(res.data);\n      store.queryUser({\n        email: email\n      }, userQuery);\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading(false);\n    });\n  };\n  var leagueReset = function leagueReset() {\n    // reset league request\n    var data = new FormData();\n    data.append(\"league_id\", store.User.franchise.league.id);\n    setLoading(true);\n    axios.post('http://127.0.0.1:8000/league_reset', data).then(function (res) {\n      console.log(res.data);\n      store.queryUser({\n        email: email\n      }, userQuery);\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading(false);\n    });\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BigLoading, {\n    animation: \"ld ld-bounce\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }));else if (store.User.franchise.seasonSet.length === 11) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Your Big League Journey Has Concluded\"), /*#__PURE__*/React.createElement(Button, {\n    style: simButtonStyles,\n    onClick: function onClick() {\n      return leagueReset();\n    },\n    block: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Click Here To Reset!\"));else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: simButtonStyles,\n      onClick: function onClick() {\n        return simSeason();\n      },\n      block: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Simulate Season\"));\n  }\n});\nexport default SimSeasonButton;","map":{"version":3,"names":["React","useContext","useState","Button","observer","axios","StoreContext","userQuery","simSeasonChecker","simButtonStyles","BigLoading","ticketError","unusedActionError","SimSeasonButton","store","_useState","_useState2","_slicedToArray","loading","setLoading","email","localStorage","getItem","simSeason","User","league","setSeasonSimCheck","franchise","franchiseSet","forEach","seasonSet","length","ticketPrice","boxPrice","action","numberOfActions","seasonSimCheck","link","window","location","port","hostname","host","data","FormData","append","id","post","protocol","then","res","console","log","queryUser","catch","err","leagueReset","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","animation","style","textAlign","onClick","block"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/SimulationButtons/SimSeasonButton.tsx"],"sourcesContent":["import React, {useContext, useState} from 'react';\nimport 'antd/dist/antd.css';\nimport {Button} from 'antd';\nimport {observer} from \"mobx-react\";\nimport axios from \"axios\";\nimport {FranchiseTypeModelType, StoreContext} from \"../../../models\";\nimport {userQuery} from \"../../Utils/queries\";\nimport {simSeasonChecker} from \"./SimSeasonChecker\";\nimport {simButtonStyles} from \"./SimButtonStyles\";\nimport BigLoading from \"../../Atoms/Loading/BigLoading\";\nimport {ticketError, unusedActionError} from \"../../Atoms/notificationerrors\";\n\n\nexport const SimSeasonButton: React.FunctionComponent = observer(() => {\n\n        const store = useContext(StoreContext)\n\n        const [loading, setLoading] = useState<boolean>(false)\n        const email: any = localStorage.getItem('email') ? localStorage.getItem('email') : '';\n\n        const simSeason = () => {\n\n            // sets seasonSimCheck as true\n            store.User.league.setSeasonSimCheck(true)\n            // loops through each franchise, if check fails, sets seasonSim to false\n            store.User.franchise.league.franchiseSet.forEach((franchise: FranchiseTypeModelType) =>\n                simSeasonChecker(franchise, store.User.league))\n            //checks if user team has ticket pricing, if check fails, sets seasonSim to false\n            if (store.User.franchise.seasonSet[store.User.franchise.seasonSet.length - 1].ticketPrice === 0\n                || store.User.franchise.seasonSet[store.User.franchise.seasonSet.length - 1].boxPrice === 0) {\n                store.User.league.setSeasonSimCheck(false)\n                return ticketError(store.User.franchise.franchise);\n            }\n            //checks if user team has actions available, if check fails, sets seasonSim to false\n            if (store.User.franchise.action.numberOfActions > 0) {\n                store.User.league.setSeasonSimCheck(false)\n                return unusedActionError(store.User.franchise.franchise);\n            }\n            // if seasonSimCheck is false do not run season simulation\n            if (store.User.league.seasonSimCheck === false) {\n                return\n            }\n\n            let link = '';\n            if (window.location.port === '3000') {\n                link = window.location.hostname + ':8000'\n            } else {\n                link = window.location.host\n            }\n            // season sim request\n            const data = new FormData();\n            data.append(\"league_id\", store.User.franchise.league.id)\n            data.append(\"season\", store.User.franchise.seasonSet.length)\n            setLoading(true)\n            axios.post(window.location.protocol + \"//\" + link + '/season_sim', data)\n                .then(res => {\n                    console.log(res.data)\n                    store.queryUser(\n                    {email: email},\n                    userQuery\n                    )\n                    setLoading(false)\n                })\n                .catch(err => {\n                    console.log(err)\n                    setLoading(false)\n                })\n        };\n\n        const leagueReset = () => {\n\n            // reset league request\n            const data = new FormData();\n            data.append(\"league_id\", store.User.franchise.league.id)\n            setLoading(true)\n            axios.post('http://127.0.0.1:8000/league_reset', data)\n                .then(res => {\n                    console.log(res.data)\n                    store.queryUser(\n                    {email: email},\n                    userQuery\n                    )\n                    setLoading(false)\n                })\n                .catch(err => {\n                    console.log(err)\n                    setLoading(false)\n                })\n        };\n\n        if (loading) return (\n            <div>\n                <BigLoading animation=\"ld ld-bounce\"/>\n            </div>\n        )\n        else if (store.User.franchise.seasonSet.length === 11) return (\n            <div>\n                <h1 style={{textAlign: 'center'}}>\n                    Your Big League Journey Has Concluded\n                </h1>\n                <Button style={simButtonStyles} onClick={() => leagueReset()} block>\n                        Click Here To Reset!\n                </Button>\n                </div>\n        )\n        else {\n            return (\n                <div>\n                    <Button style={simButtonStyles} onClick={() => simSeason()} block>\n                        Simulate Season\n                    </Button>\n                </div>\n            );\n        }\n    }\n)\n\nexport default SimSeasonButton;"],"mappings":"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"},"metadata":{},"sourceType":"module"}