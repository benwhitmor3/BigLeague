{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { ActionTypeModel } from \"./ActionTypeModel\";\nimport { ActionTypeModelSelector } from \"./ActionTypeModel.base\";\n/**\n * UpdateActionMutationBase\n * auto generated base class for the model UpdateActionMutationModel.\n */\nexport const UpdateActionMutationModelBase = withTypedRefs()(ModelBase.named('UpdateActionMutation').props({\n  __typename: types.optional(types.literal(\"UpdateActionMutation\"), \"UpdateActionMutation\"),\n  action: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => ActionTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class UpdateActionMutationModelSelector extends QueryBuilder {\n  action(builder) {\n    return this.__child(`action`, ActionTypeModelSelector, builder);\n  }\n}\nexport function selectFromUpdateActionMutation() {\n  return new UpdateActionMutationModelSelector();\n}\nexport const updateActionMutationModelPrimitives = selectFromUpdateActionMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","ActionTypeModel","ActionTypeModelSelector","UpdateActionMutationModelBase","named","props","__typename","optional","literal","action","union","undefined","null","late","views","self","store","__getStore","UpdateActionMutationModelSelector","builder","__child","selectFromUpdateActionMutation","updateActionMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UpdateActionMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { ActionTypeModel, ActionTypeModelType } from \"./ActionTypeModel\"\nimport { ActionTypeModelSelector } from \"./ActionTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  action: ActionTypeModelType;\n}\n\n/**\n * UpdateActionMutationBase\n * auto generated base class for the model UpdateActionMutationModel.\n */\nexport const UpdateActionMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UpdateActionMutation')\n  .props({\n    __typename: types.optional(types.literal(\"UpdateActionMutation\"), \"UpdateActionMutation\"),\n    action: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => ActionTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UpdateActionMutationModelSelector extends QueryBuilder {\n  action(builder?: string | ActionTypeModelSelector | ((selector: ActionTypeModelSelector) => ActionTypeModelSelector)) { return this.__child(`action`, ActionTypeModelSelector, builder) }\n}\nexport function selectFromUpdateActionMutation() {\n  return new UpdateActionMutationModelSelector()\n}\n\nexport const updateActionMutationModelPrimitives = selectFromUpdateActionMutation()\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAA6B,mBAAmB;AACxE,SAASC,uBAAuB,QAAQ,wBAAwB;AAShE;AACA;AACA;AACA;AACA,OAAO,MAAMC,6BAA6B,GAAGJ,aAAa,EAAQ,CAACC,SAAS,CACzEI,KAAK,CAAC,sBAAsB,CAAC,CAC7BC,KAAK,CAAC;EACLC,UAAU,EAAEV,KAAK,CAACW,QAAQ,CAACX,KAAK,CAACY,OAAO,CAAC,sBAAsB,CAAC,EAAE,sBAAsB,CAAC;EACzFC,MAAM,EAAEb,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEf,SAAS,CAACD,KAAK,CAACiB,IAAI,CAAC,MAAWZ,eAAe,CAAC,CAAC;AACpG,CAAC,CAAC,CACDa,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC,CAAC;AAEN,OAAO,MAAMC,iCAAiC,SAASpB,YAAY,CAAC;EAClEW,MAAMA,CAACU,OAA6G,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,QAAO,EAAElB,uBAAuB,EAAEiB,OAAO,CAAC;EAAC;AAC1L;AACA,OAAO,SAASE,8BAA8BA,CAAA,EAAG;EAC/C,OAAO,IAAIH,iCAAiC,EAAE;AAChD;AAEA,OAAO,MAAMI,mCAAmC,GAAGD,8BAA8B,EAAE"},"metadata":{},"sourceType":"module"}