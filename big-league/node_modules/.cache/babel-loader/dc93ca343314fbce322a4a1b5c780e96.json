{"ast":null,"code":"import _classCallCheck from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* This is a mst-gql generated file, don't modify it manually */ /* eslint-disable */ /* tslint:disable */import{types}from\"mobx-state-tree\";import{MSTGQLRef,QueryBuilder,withTypedRefs}from\"mst-gql\";import{ModelBase}from\"./ModelBase\";import{FranchiseTypeModel}from\"./FranchiseTypeModel\";import{FranchiseTypeModelSelector}from\"./FranchiseTypeModel.base\";import{LeagueTypeModel}from\"./LeagueTypeModel\";import{LeagueTypeModelSelector}from\"./LeagueTypeModel.base\";/**\n * UserTypeBase\n * auto generated base class for the model UserTypeModel.\n */export var UserTypeModelBase=withTypedRefs()(ModelBase.named('UserType').props({__typename:types.optional(types.literal(\"UserType\"),\"UserType\"),id:types.identifier,password:types.union(types.undefined,types.string),email:types.union(types.undefined,types.string),username:types.union(types.undefined,types.string),dateJoined:types.union(types.undefined,types.frozen()),lastLogin:types.union(types.undefined,types.frozen()),isAdmin:types.union(types.undefined,types.boolean),isActive:types.union(types.undefined,types.boolean),isStaff:types.union(types.undefined,types.boolean),isSuperuser:types.union(types.undefined,types.boolean),franchise:types.union(types.undefined,types.null,MSTGQLRef(types.late(function(){return FranchiseTypeModel;}))),league:types.union(types.undefined,types.null,MSTGQLRef(types.late(function(){return LeagueTypeModel;})))}).views(function(self){return{get store(){return self.__getStore();}};}));export var UserTypeModelSelector=/*#__PURE__*/function(_QueryBuilder){_inherits(UserTypeModelSelector,_QueryBuilder);var _super=_createSuper(UserTypeModelSelector);function UserTypeModelSelector(){_classCallCheck(this,UserTypeModelSelector);return _super.apply(this,arguments);}_createClass(UserTypeModelSelector,[{key:\"id\",get:function get(){return this.__attr(\"id\");}},{key:\"password\",get:function get(){return this.__attr(\"password\");}},{key:\"email\",get:function get(){return this.__attr(\"email\");}},{key:\"username\",get:function get(){return this.__attr(\"username\");}},{key:\"dateJoined\",get:function get(){return this.__attr(\"dateJoined\");}},{key:\"lastLogin\",get:function get(){return this.__attr(\"lastLogin\");}},{key:\"isAdmin\",get:function get(){return this.__attr(\"isAdmin\");}},{key:\"isActive\",get:function get(){return this.__attr(\"isActive\");}},{key:\"isStaff\",get:function get(){return this.__attr(\"isStaff\");}},{key:\"isSuperuser\",get:function get(){return this.__attr(\"isSuperuser\");}},{key:\"franchise\",value:function franchise(builder){return this.__child(\"franchise\",FranchiseTypeModelSelector,builder);}},{key:\"league\",value:function league(builder){return this.__child(\"league\",LeagueTypeModelSelector,builder);}}]);return UserTypeModelSelector;}(QueryBuilder);export function selectFromUserType(){return new UserTypeModelSelector();}export var userTypeModelPrimitives=selectFromUserType().password.email.username.dateJoined.lastLogin.isAdmin.isActive.isStaff.isSuperuser;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","LeagueTypeModel","LeagueTypeModelSelector","UserTypeModelBase","named","props","__typename","optional","literal","id","identifier","password","union","undefined","string","email","username","dateJoined","frozen","lastLogin","isAdmin","boolean","isActive","isStaff","isSuperuser","franchise","null","late","league","views","self","store","__getStore","UserTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromUserType","userTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UserTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n  league: LeagueTypeModelType;\n}\n\n/**\n * UserTypeBase\n * auto generated base class for the model UserTypeModel.\n */\nexport const UserTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UserType')\n  .props({\n    __typename: types.optional(types.literal(\"UserType\"), \"UserType\"),\n    id: types.identifier,\n    password: types.union(types.undefined, types.string),\n    email: types.union(types.undefined, types.string),\n    username: types.union(types.undefined, types.string),\n    dateJoined: types.union(types.undefined, types.frozen()),\n    lastLogin: types.union(types.undefined, types.frozen()),\n    isAdmin: types.union(types.undefined, types.boolean),\n    isActive: types.union(types.undefined, types.boolean),\n    isStaff: types.union(types.undefined, types.boolean),\n    isSuperuser: types.union(types.undefined, types.boolean),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n    league: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UserTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get password() { return this.__attr(`password`) }\n  get email() { return this.__attr(`email`) }\n  get username() { return this.__attr(`username`) }\n  get dateJoined() { return this.__attr(`dateJoined`) }\n  get lastLogin() { return this.__attr(`lastLogin`) }\n  get isAdmin() { return this.__attr(`isAdmin`) }\n  get isActive() { return this.__attr(`isActive`) }\n  get isStaff() { return this.__attr(`isStaff`) }\n  get isSuperuser() { return this.__attr(`isSuperuser`) }\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n}\nexport function selectFromUserType() {\n  return new UserTypeModelSelector()\n}\n\nexport const userTypeModelPrimitives = selectFromUserType().password.email.username.dateJoined.lastLogin.isAdmin.isActive.isStaff.isSuperuser\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}