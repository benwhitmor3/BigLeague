{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { ActionTypeModel } from \"./ActionTypeModel\";\nimport { ActionTypeModelSelector } from \"./ActionTypeModel.base\";\nimport { CoachTypeModel } from \"./CoachTypeModel\";\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\";\nimport { GmTypeModel } from \"./GmTypeModel\";\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\nimport { PlayerTypeModel } from \"./PlayerTypeModel\";\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\";\nimport { SeasonTypeModel } from \"./SeasonTypeModel\";\nimport { SeasonTypeModelSelector } from \"./SeasonTypeModel.base\";\nimport { StadiumTypeModel } from \"./StadiumTypeModel\";\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\";\nimport { UserTypeModel } from \"./UserTypeModel\";\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\";\n/**\n * FranchiseTypeBase\n * auto generated base class for the model FranchiseTypeModel.\n */\nexport var FranchiseTypeModelBase = withTypedRefs()(ModelBase.named('FranchiseType').props({\n  __typename: types.optional(types.literal(\"FranchiseType\"), \"FranchiseType\"),\n  id: types.identifier,\n  franchise: types.union(types.undefined, types.string),\n  user: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return UserTypeModel;\n  }))),\n  league: types.union(types.undefined, MSTGQLRef(types.late(function () {\n    return LeagueTypeModel;\n  }))),\n  gm: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return GmTypeModel;\n  }))),\n  coach: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return CoachTypeModel;\n  }))),\n  stadium: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return StadiumTypeModel;\n  }))),\n  playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return PlayerTypeModel;\n  })))),\n  action: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return ActionTypeModel;\n  }))),\n  seasonSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return SeasonTypeModel;\n  }))))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var FranchiseTypeModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(FranchiseTypeModelSelector, _QueryBuilder);\n  var _super = _createSuper(FranchiseTypeModelSelector);\n  function FranchiseTypeModelSelector() {\n    _classCallCheck(this, FranchiseTypeModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FranchiseTypeModelSelector, [{\n    key: \"id\",\n    get: function get() {\n      return this.__attr(\"id\");\n    }\n  }, {\n    key: \"franchise\",\n    get: function get() {\n      return this.__attr(\"franchise\");\n    }\n  }, {\n    key: \"user\",\n    value: function user(builder) {\n      return this.__child(\"user\", UserTypeModelSelector, builder);\n    }\n  }, {\n    key: \"league\",\n    value: function league(builder) {\n      return this.__child(\"league\", LeagueTypeModelSelector, builder);\n    }\n  }, {\n    key: \"gm\",\n    value: function gm(builder) {\n      return this.__child(\"gm\", GmTypeModelSelector, builder);\n    }\n  }, {\n    key: \"coach\",\n    value: function coach(builder) {\n      return this.__child(\"coach\", CoachTypeModelSelector, builder);\n    }\n  }, {\n    key: \"stadium\",\n    value: function stadium(builder) {\n      return this.__child(\"stadium\", StadiumTypeModelSelector, builder);\n    }\n  }, {\n    key: \"playerSet\",\n    value: function playerSet(builder) {\n      return this.__child(\"playerSet\", PlayerTypeModelSelector, builder);\n    }\n  }, {\n    key: \"action\",\n    value: function action(builder) {\n      return this.__child(\"action\", ActionTypeModelSelector, builder);\n    }\n  }, {\n    key: \"seasonSet\",\n    value: function seasonSet(builder) {\n      return this.__child(\"seasonSet\", SeasonTypeModelSelector, builder);\n    }\n  }]);\n  return FranchiseTypeModelSelector;\n}(QueryBuilder);\nexport function selectFromFranchiseType() {\n  return new FranchiseTypeModelSelector();\n}\nexport var franchiseTypeModelPrimitives = selectFromFranchiseType().franchise;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","ActionTypeModel","ActionTypeModelSelector","CoachTypeModel","CoachTypeModelSelector","GmTypeModel","GmTypeModelSelector","LeagueTypeModel","LeagueTypeModelSelector","PlayerTypeModel","PlayerTypeModelSelector","SeasonTypeModel","SeasonTypeModelSelector","StadiumTypeModel","StadiumTypeModelSelector","UserTypeModel","UserTypeModelSelector","FranchiseTypeModelBase","named","props","__typename","optional","literal","id","identifier","franchise","union","undefined","string","user","null","late","league","gm","coach","stadium","playerSet","array","action","seasonSet","views","self","store","__getStore","FranchiseTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromFranchiseType","franchiseTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/FranchiseTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { ActionTypeModel, ActionTypeModelType } from \"./ActionTypeModel\"\nimport { ActionTypeModelSelector } from \"./ActionTypeModel.base\"\nimport { CoachTypeModel, CoachTypeModelType } from \"./CoachTypeModel\"\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\"\nimport { GmTypeModel, GmTypeModelType } from \"./GmTypeModel\"\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { PlayerTypeModel, PlayerTypeModelType } from \"./PlayerTypeModel\"\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\"\nimport { SeasonTypeModel, SeasonTypeModelType } from \"./SeasonTypeModel\"\nimport { SeasonTypeModelSelector } from \"./SeasonTypeModel.base\"\nimport { StadiumTypeModel, StadiumTypeModelType } from \"./StadiumTypeModel\"\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  user: UserTypeModelType;\n  league: LeagueTypeModelType;\n  gm: GmTypeModelType;\n  coach: CoachTypeModelType;\n  stadium: StadiumTypeModelType;\n  playerSet: IObservableArray<PlayerTypeModelType>;\n  action: ActionTypeModelType;\n  seasonSet: IObservableArray<SeasonTypeModelType>;\n}\n\n/**\n * FranchiseTypeBase\n * auto generated base class for the model FranchiseTypeModel.\n */\nexport const FranchiseTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('FranchiseType')\n  .props({\n    __typename: types.optional(types.literal(\"FranchiseType\"), \"FranchiseType\"),\n    id: types.identifier,\n    franchise: types.union(types.undefined, types.string),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    gm: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => GmTypeModel))),\n    coach: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => CoachTypeModel))),\n    stadium: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => StadiumTypeModel))),\n    playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => PlayerTypeModel)))),\n    action: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => ActionTypeModel))),\n    seasonSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => SeasonTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class FranchiseTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get franchise() { return this.__attr(`franchise`) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  gm(builder?: string | GmTypeModelSelector | ((selector: GmTypeModelSelector) => GmTypeModelSelector)) { return this.__child(`gm`, GmTypeModelSelector, builder) }\n  coach(builder?: string | CoachTypeModelSelector | ((selector: CoachTypeModelSelector) => CoachTypeModelSelector)) { return this.__child(`coach`, CoachTypeModelSelector, builder) }\n  stadium(builder?: string | StadiumTypeModelSelector | ((selector: StadiumTypeModelSelector) => StadiumTypeModelSelector)) { return this.__child(`stadium`, StadiumTypeModelSelector, builder) }\n  playerSet(builder?: string | PlayerTypeModelSelector | ((selector: PlayerTypeModelSelector) => PlayerTypeModelSelector)) { return this.__child(`playerSet`, PlayerTypeModelSelector, builder) }\n  action(builder?: string | ActionTypeModelSelector | ((selector: ActionTypeModelSelector) => ActionTypeModelSelector)) { return this.__child(`action`, ActionTypeModelSelector, builder) }\n  seasonSet(builder?: string | SeasonTypeModelSelector | ((selector: SeasonTypeModelSelector) => SeasonTypeModelSelector)) { return this.__child(`seasonSet`, SeasonTypeModelSelector, builder) }\n}\nexport function selectFromFranchiseType() {\n  return new FranchiseTypeModelSelector()\n}\n\nexport const franchiseTypeModelPrimitives = selectFromFranchiseType().franchise\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}