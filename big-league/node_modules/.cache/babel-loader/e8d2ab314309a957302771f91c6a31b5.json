{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\n/**\n * UserTypeBase\n * auto generated base class for the model UserTypeModel.\n */\nexport const UserTypeModelBase = withTypedRefs()(ModelBase.named('UserType').props({\n  __typename: types.optional(types.literal(\"UserType\"), \"UserType\"),\n  id: types.identifier,\n  password: types.union(types.undefined, types.string),\n  email: types.union(types.undefined, types.string),\n  username: types.union(types.undefined, types.string),\n  dateJoined: types.union(types.undefined, types.frozen()),\n  lastLogin: types.union(types.undefined, types.frozen()),\n  isAdmin: types.union(types.undefined, types.boolean),\n  isActive: types.union(types.undefined, types.boolean),\n  isStaff: types.union(types.undefined, types.boolean),\n  isSuperuser: types.union(types.undefined, types.boolean),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => FranchiseTypeModel))),\n  league: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => LeagueTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class UserTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get password() {\n    return this.__attr(`password`);\n  }\n  get email() {\n    return this.__attr(`email`);\n  }\n  get username() {\n    return this.__attr(`username`);\n  }\n  get dateJoined() {\n    return this.__attr(`dateJoined`);\n  }\n  get lastLogin() {\n    return this.__attr(`lastLogin`);\n  }\n  get isAdmin() {\n    return this.__attr(`isAdmin`);\n  }\n  get isActive() {\n    return this.__attr(`isActive`);\n  }\n  get isStaff() {\n    return this.__attr(`isStaff`);\n  }\n  get isSuperuser() {\n    return this.__attr(`isSuperuser`);\n  }\n  franchise(builder) {\n    return this.__child(`franchise`, FranchiseTypeModelSelector, builder);\n  }\n  league(builder) {\n    return this.__child(`league`, LeagueTypeModelSelector, builder);\n  }\n}\nexport function selectFromUserType() {\n  return new UserTypeModelSelector();\n}\nexport const userTypeModelPrimitives = selectFromUserType().password.email.username.dateJoined.lastLogin.isAdmin.isActive.isStaff.isSuperuser;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","LeagueTypeModel","LeagueTypeModelSelector","UserTypeModelBase","named","props","__typename","optional","literal","id","identifier","password","union","undefined","string","email","username","dateJoined","frozen","lastLogin","isAdmin","boolean","isActive","isStaff","isSuperuser","franchise","null","late","league","views","self","store","__getStore","UserTypeModelSelector","__attr","builder","__child","selectFromUserType","userTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UserTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n  league: LeagueTypeModelType;\n}\n\n/**\n * UserTypeBase\n * auto generated base class for the model UserTypeModel.\n */\nexport const UserTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UserType')\n  .props({\n    __typename: types.optional(types.literal(\"UserType\"), \"UserType\"),\n    id: types.identifier,\n    password: types.union(types.undefined, types.string),\n    email: types.union(types.undefined, types.string),\n    username: types.union(types.undefined, types.string),\n    dateJoined: types.union(types.undefined, types.frozen()),\n    lastLogin: types.union(types.undefined, types.frozen()),\n    isAdmin: types.union(types.undefined, types.boolean),\n    isActive: types.union(types.undefined, types.boolean),\n    isStaff: types.union(types.undefined, types.boolean),\n    isSuperuser: types.union(types.undefined, types.boolean),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n    league: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UserTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get password() { return this.__attr(`password`) }\n  get email() { return this.__attr(`email`) }\n  get username() { return this.__attr(`username`) }\n  get dateJoined() { return this.__attr(`dateJoined`) }\n  get lastLogin() { return this.__attr(`lastLogin`) }\n  get isAdmin() { return this.__attr(`isAdmin`) }\n  get isActive() { return this.__attr(`isActive`) }\n  get isStaff() { return this.__attr(`isStaff`) }\n  get isSuperuser() { return this.__attr(`isSuperuser`) }\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n}\nexport function selectFromUserType() {\n  return new UserTypeModelSelector()\n}\n\nexport const userTypeModelPrimitives = selectFromUserType().password.email.username.dateJoined.lastLogin.isAdmin.isActive.isStaff.isSuperuser\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AACtE,SAASC,eAAe,QAA6B,mBAAmB;AACxE,SAASC,uBAAuB,QAAQ,wBAAwB;AAUhE;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGN,aAAa,EAAQ,CAACC,SAAS,CAC7DM,KAAK,CAAC,UAAU,CAAC,CACjBC,KAAK,CAAC;EACLC,UAAU,EAAEZ,KAAK,CAACa,QAAQ,CAACb,KAAK,CAACc,OAAO,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC;EACjEC,EAAE,EAAEf,KAAK,CAACgB,UAAU;EACpBC,QAAQ,EAAEjB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACoB,MAAM,CAAC;EACpDC,KAAK,EAAErB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACoB,MAAM,CAAC;EACjDE,QAAQ,EAAEtB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACoB,MAAM,CAAC;EACpDG,UAAU,EAAEvB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACwB,MAAM,EAAE,CAAC;EACxDC,SAAS,EAAEzB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACwB,MAAM,EAAE,CAAC;EACvDE,OAAO,EAAE1B,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAAC2B,OAAO,CAAC;EACpDC,QAAQ,EAAE5B,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAAC2B,OAAO,CAAC;EACrDE,OAAO,EAAE7B,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAAC2B,OAAO,CAAC;EACpDG,WAAW,EAAE9B,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAAC2B,OAAO,CAAC;EACxDI,SAAS,EAAE/B,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACgC,IAAI,EAAE/B,SAAS,CAACD,KAAK,CAACiC,IAAI,CAAC,MAAW5B,kBAAkB,CAAC,CAAC,CAAC;EACzG6B,MAAM,EAAElC,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,EAAEnB,KAAK,CAACgC,IAAI,EAAE/B,SAAS,CAACD,KAAK,CAACiC,IAAI,CAAC,MAAW1B,eAAe,CAAC,CAAC;AACpG,CAAC,CAAC,CACD4B,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC,CAAC;AAEN,OAAO,MAAMC,qBAAqB,SAASrC,YAAY,CAAC;EACtD,IAAIa,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACyB,MAAM,CAAE,IAAG,CAAC;EAAC;EACpC,IAAIvB,QAAQA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACuB,MAAM,CAAE,UAAS,CAAC;EAAC;EAChD,IAAInB,KAAKA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACmB,MAAM,CAAE,OAAM,CAAC;EAAC;EAC1C,IAAIlB,QAAQA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACkB,MAAM,CAAE,UAAS,CAAC;EAAC;EAChD,IAAIjB,UAAUA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACiB,MAAM,CAAE,YAAW,CAAC;EAAC;EACpD,IAAIf,SAASA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACe,MAAM,CAAE,WAAU,CAAC;EAAC;EAClD,IAAId,OAAOA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACc,MAAM,CAAE,SAAQ,CAAC;EAAC;EAC9C,IAAIZ,QAAQA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACY,MAAM,CAAE,UAAS,CAAC;EAAC;EAChD,IAAIX,OAAOA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACW,MAAM,CAAE,SAAQ,CAAC;EAAC;EAC9C,IAAIV,WAAWA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACU,MAAM,CAAE,aAAY,CAAC;EAAC;EACtDT,SAASA,CAACU,OAAsH,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,WAAU,EAAEpC,0BAA0B,EAAEmC,OAAO,CAAC;EAAC;EAC1MP,MAAMA,CAACO,OAA6G,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,QAAO,EAAElC,uBAAuB,EAAEiC,OAAO,CAAC;EAAC;AAC1L;AACA,OAAO,SAASE,kBAAkBA,CAAA,EAAG;EACnC,OAAO,IAAIJ,qBAAqB,EAAE;AACpC;AAEA,OAAO,MAAMK,uBAAuB,GAAGD,kBAAkB,EAAE,CAAC1B,QAAQ,CAACI,KAAK,CAACC,QAAQ,CAACC,UAAU,CAACE,SAAS,CAACC,OAAO,CAACE,QAAQ,CAACC,OAAO,CAACC,WAAW"},"metadata":{},"sourceType":"module"}