{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { GmTraitEnumType } from \"./GmTraitEnum\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\n/**\n * GmTypeBase\n * auto generated base class for the model GmTypeModel.\n */\nexport var GmTypeModelBase = withTypedRefs()(ModelBase.named('GmType').props({\n  __typename: types.optional(types.literal(\"GMType\"), \"GMType\"),\n  id: types.identifier,\n  trait: types.union(types.undefined, GmTraitEnumType),\n  league: types.union(types.undefined, MSTGQLRef(types.late(function () {\n    return LeagueTypeModel;\n  }))),\n  franchiseSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(function () {\n    return FranchiseTypeModel;\n  }))))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var GmTypeModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(GmTypeModelSelector, _QueryBuilder);\n  var _super = _createSuper(GmTypeModelSelector);\n  function GmTypeModelSelector() {\n    _classCallCheck(this, GmTypeModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GmTypeModelSelector, [{\n    key: \"id\",\n    get: function get() {\n      return this.__attr(\"id\");\n    }\n  }, {\n    key: \"trait\",\n    get: function get() {\n      return this.__attr(\"trait\");\n    }\n  }, {\n    key: \"league\",\n    value: function league(builder) {\n      return this.__child(\"league\", LeagueTypeModelSelector, builder);\n    }\n  }, {\n    key: \"franchiseSet\",\n    value: function franchiseSet(builder) {\n      return this.__child(\"franchiseSet\", FranchiseTypeModelSelector, builder);\n    }\n  }]);\n  return GmTypeModelSelector;\n}(QueryBuilder);\nexport function selectFromGmType() {\n  return new GmTypeModelSelector();\n}\nexport var gmTypeModelPrimitives = selectFromGmType().trait;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","GmTraitEnumType","LeagueTypeModel","LeagueTypeModelSelector","GmTypeModelBase","named","props","__typename","optional","literal","id","identifier","trait","union","undefined","league","late","franchiseSet","array","views","self","store","__getStore","GmTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromGmType","gmTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/GmTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { GmTraitEnumType } from \"./GmTraitEnum\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  league: LeagueTypeModelType;\n  franchiseSet: IObservableArray<FranchiseTypeModelType>;\n}\n\n/**\n * GmTypeBase\n * auto generated base class for the model GmTypeModel.\n */\nexport const GmTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('GmType')\n  .props({\n    __typename: types.optional(types.literal(\"GMType\"), \"GMType\"),\n    id: types.identifier,\n    trait: types.union(types.undefined, GmTraitEnumType),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    franchiseSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => FranchiseTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class GmTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get trait() { return this.__attr(`trait`) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  franchiseSet(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchiseSet`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromGmType() {\n  return new GmTypeModelSelector()\n}\n\nexport const gmTypeModelPrimitives = selectFromGmType().trait\n"],"mappings":";;;;AAAA;AACA;AACA;;AAGA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AACtE,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,eAAe,QAA6B,mBAAmB;AACxE,SAASC,uBAAuB,QAAQ,wBAAwB;AAUhE;AACA;AACA;AACA;AACA,OAAO,IAAMC,eAAe,GAAGP,aAAa,EAAQ,CAACC,SAAS,CAC3DO,KAAK,CAAC,QAAQ,CAAC,CACfC,KAAK,CAAC;EACLC,UAAU,EAAEb,KAAK,CAACc,QAAQ,CAACd,KAAK,CAACe,OAAO,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC;EAC7DC,EAAE,EAAEhB,KAAK,CAACiB,UAAU;EACpBC,KAAK,EAAElB,KAAK,CAACmB,KAAK,CAACnB,KAAK,CAACoB,SAAS,EAAEb,eAAe,CAAC;EACpDc,MAAM,EAAErB,KAAK,CAACmB,KAAK,CAACnB,KAAK,CAACoB,SAAS,EAAEnB,SAAS,CAACD,KAAK,CAACsB,IAAI,CAAC;IAAA,OAAWd,eAAe;EAAA,EAAC,CAAC,CAAC;EACvFe,YAAY,EAAEvB,KAAK,CAACmB,KAAK,CAACnB,KAAK,CAACoB,SAAS,EAAEpB,KAAK,CAACwB,KAAK,CAACvB,SAAS,CAACD,KAAK,CAACsB,IAAI,CAAC;IAAA,OAAWjB,kBAAkB;EAAA,EAAC,CAAC,CAAC;AAC9G,CAAC,CAAC,CACDoB,KAAK,CAAC,UAAAC,IAAI;EAAA,OAAK;IACd,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;IACzC;EACF,CAAC;AAAA,CAAC,CAAC,CAAC;AAEN,WAAaC,mBAAmB,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAAA,SAAAA,oBAAA;IAAAK,eAAA,OAAAL,mBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,mBAAA;IAAAS,GAAA;IAAAC,GAAA,EAC9B,SAAAA,IAAA,EAAS;MAAE,OAAO,IAAI,CAACC,MAAM,MAAM;IAAC;EAAC;IAAAF,GAAA;IAAAC,GAAA,EACrC,SAAAA,IAAA,EAAY;MAAE,OAAO,IAAI,CAACC,MAAM,SAAS;IAAC;EAAC;IAAAF,GAAA;IAAAG,KAAA,EAC3C,SAAApB,OAAOqB,OAA6G,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,WAAWlC,uBAAuB,EAAEiC,OAAO,CAAC;IAAC;EAAC;IAAAJ,GAAA;IAAAG,KAAA,EACzL,SAAAlB,aAAamB,OAAsH,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,iBAAiBrC,0BAA0B,EAAEoC,OAAO,CAAC;IAAC;EAAC;EAAA,OAAAb,mBAAA;AAAA,EAJ1K3B,YAAY;AAMrD,OAAO,SAAS0C,gBAAgBA,CAAA,EAAG;EACjC,OAAO,IAAIf,mBAAmB,EAAE;AAClC;AAEA,OAAO,IAAMgB,qBAAqB,GAAGD,gBAAgB,EAAE,CAAC1B,KAAK"},"metadata":{},"sourceType":"module"}