{"ast":null,"code":"import{types}from\"mobx-state-tree\";import{LeagueTypeModelBase}from\"./LeagueTypeModel.base\";import{FranchiseTypeModel}from\"./FranchiseTypeModel\";/* A graphql query fragment builders for LeagueTypeModel */export{selectFromLeagueType,leagueTypeModelPrimitives,LeagueTypeModelSelector}from\"./LeagueTypeModel.base\";/**\n * LeagueTypeModel\n */export var LeagueTypeModel=LeagueTypeModelBase.actions(function(self){return{// This is an auto-generated example action.\nlog:function log(){console.log(JSON.stringify(self));},setDraftingFranchise:function setDraftingFranchise(franchise){// @ts-ignore\nself.draftingFranchise=self.franchise(franchise.franchise);},setSeasonSimCheck:function setSeasonSimCheck(check){// @ts-ignore\nself.seasonSimCheck=check;}};}).props({draftingFranchise:types.union(types.undefined,types.reference(types.late(function(){return FranchiseTypeModel;}))),seasonSimCheck:types.union(types.undefined,types.boolean)}).views(function(self){return{franchise:function franchise(franchiseName){var franchise=self.franchiseSet.find(function(franchise){if(franchise.franchise===franchiseName)return true;});return franchise;},player:function player(playerName){var player=self.playerSet.find(function(player){if(player.name===playerName)return true;});return player;},franchiseplayers:function franchiseplayers(franchiseName){var franchiseplayers=self.playerSet.filter(function(player){if(player.franchise)if(player.franchise.franchise===franchiseName)return true;});return franchiseplayers;},get draftClass(){var draftClass=self.playerSet.filter(function(player){if(player.year===1)return player;});return draftClass;},get draftClassDrafted(){var draftClassDrafted=self.playerSet.filter(function(player){if(player.year===1&&player.franchise)return player;}).length;return draftClassDrafted;},get draftClassRemaining(){var draftClassRemaining=self.playerSet.filter(function(player){if(player.year===1&&player.franchise==null)return player;}).length;return draftClassRemaining;},get bestDraftPlayer(){var draftClass=self.playerSet.filter(function(player){if(player.year===1&&player.franchise==null)return player;});var bestDraftPlayer=draftClass.sort(function(a,b){// @ts-ignore\nreturn b.pv-a.pv;});return bestDraftPlayer[0];},get freeAgentClass(){var freeAgentClass=self.playerSet.filter(function(player){if(player.year!==1&&player.contract==null)return player;});return freeAgentClass;},get freeAgentClassSigned(){var freeAgentClassSigned=self.playerSet.filter(function(player){if(player.year!==1&&player.contract==null&&player.franchise)return player;});return freeAgentClassSigned;},get draftOrder(){var draftOrder=self.franchiseSet.sort(function(a,b){// @ts-ignore\nreturn a.wins-b.wins;});return draftOrder;},get franchisesWithoutGm(){return self.franchiseSet.map(function(franchise){var _franchise$gm;return(_franchise$gm=franchise.gm)===null||_franchise$gm===void 0?void 0:_franchise$gm.trait;}).filter(function(trait){return trait===undefined;});},get franchisesWithoutCoach(){return self.franchiseSet.map(function(franchise){var _franchise$coach;return(_franchise$coach=franchise.coach)===null||_franchise$coach===void 0?void 0:_franchise$coach.attributeOne;}).filter(function(attributeOne){return attributeOne===undefined;});}};});","map":{"version":3,"names":["types","LeagueTypeModelBase","FranchiseTypeModel","selectFromLeagueType","leagueTypeModelPrimitives","LeagueTypeModelSelector","LeagueTypeModel","actions","self","log","console","JSON","stringify","setDraftingFranchise","franchise","draftingFranchise","setSeasonSimCheck","check","seasonSimCheck","props","union","undefined","reference","late","boolean","views","franchiseName","franchiseSet","find","player","playerName","playerSet","name","franchiseplayers","filter","draftClass","year","draftClassDrafted","length","draftClassRemaining","bestDraftPlayer","sort","a","b","pv","freeAgentClass","contract","freeAgentClassSigned","draftOrder","wins","franchisesWithoutGm","map","_franchise$gm","gm","trait","franchisesWithoutCoach","_franchise$coach","coach","attributeOne"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/LeagueTypeModel.ts"],"sourcesContent":["import {Instance, types} from \"mobx-state-tree\"\nimport {LeagueTypeModelBase} from \"./LeagueTypeModel.base\"\nimport {FranchiseTypeModel, FranchiseTypeModelType} from \"./FranchiseTypeModel\";\nimport {PlayerTypeModelType} from \"./PlayerTypeModel\";\n\n/* The TypeScript type of an instance of LeagueTypeModel */\nexport interface LeagueTypeModelType extends Instance<typeof LeagueTypeModel.Type> {\n}\n\n/* A graphql query fragment builders for LeagueTypeModel */\nexport {selectFromLeagueType, leagueTypeModelPrimitives, LeagueTypeModelSelector} from \"./LeagueTypeModel.base\"\n\n/**\n * LeagueTypeModel\n */\nexport const LeagueTypeModel = LeagueTypeModelBase\n    .actions(self => ({\n        // This is an auto-generated example action.\n        log() {\n            console.log(JSON.stringify(self))\n        },\n        setDraftingFranchise(franchise: FranchiseTypeModelType) {\n            // @ts-ignore\n            self.draftingFranchise = self.franchise(franchise.franchise)\n        },\n        setSeasonSimCheck(check: boolean) {\n            // @ts-ignore\n            self.seasonSimCheck = check\n        },\n    }))\n    .props({\n        draftingFranchise: types.union(types.undefined, types.reference(types.late(() => FranchiseTypeModel))),\n        seasonSimCheck: types.union(types.undefined, types.boolean)\n    })\n    .views(self => ({\n        franchise(franchiseName: string) {\n            let franchise = self.franchiseSet.find((franchise) => {\n                if (franchise.franchise === franchiseName)\n                    return true;\n            });\n            return franchise\n        },\n        player(playerName: string) {\n            let player = self.playerSet.find((player) => {\n                if (player.name === playerName)\n                    return true;\n            });\n            return player\n        },\n        franchiseplayers(franchiseName: string) {\n            let franchiseplayers = self.playerSet.filter((player) => {\n                if (player.franchise)\n                    if (player.franchise.franchise === franchiseName)\n                        return true;\n            });\n            return franchiseplayers\n        },\n        get draftClass() {\n            let draftClass = self.playerSet.filter((player: PlayerTypeModelType) => {\n                if (player.year === 1)\n                    return player\n            })\n            return draftClass\n        },\n        get draftClassDrafted() {\n            let draftClassDrafted = self.playerSet.filter((player: PlayerTypeModelType) => {\n                if (player.year === 1 && player.franchise)\n                    return player\n            }).length\n            return draftClassDrafted\n        },\n        get draftClassRemaining(){\n            let draftClassRemaining = self.playerSet.filter((player: PlayerTypeModelType) => {\n                if (player.year === 1 && player.franchise == null)\n                    return player\n            }).length\n            return draftClassRemaining\n        },\n        get bestDraftPlayer() {\n            let draftClass = self.playerSet.filter((player: PlayerTypeModelType) => {\n                if (player.year === 1 && player.franchise == null)\n                    return player\n            })\n            let bestDraftPlayer = draftClass.sort(function (a, b) {\n                // @ts-ignore\n                return b.pv - a.pv;\n            })\n            return bestDraftPlayer[0]\n        },\n        get freeAgentClass() {\n            let freeAgentClass = self.playerSet.filter((player: PlayerTypeModelType) => {\n                if (player.year !== 1 && player.contract == null)\n                    return player\n            })\n            return freeAgentClass\n        },\n        get freeAgentClassSigned() {\n            let freeAgentClassSigned = self.playerSet.filter((player: PlayerTypeModelType) => {\n                if (player.year !== 1 && player.contract == null && player.franchise)\n                    return player\n            })\n            return freeAgentClassSigned\n        },\n        get draftOrder() {\n            let draftOrder = self.franchiseSet.sort(function (a, b) {\n                // @ts-ignore\n                return a.wins - b.wins;\n            })\n            return draftOrder\n        },\n        get franchisesWithoutGm(){\n            return self.franchiseSet.map((franchise: FranchiseTypeModelType) => franchise.gm?.trait).filter((trait: any) => trait === undefined)\n        },\n        get franchisesWithoutCoach(){\n            return self.franchiseSet.map((franchise: FranchiseTypeModelType) => franchise.coach?.attributeOne).filter((attributeOne: any) => attributeOne === undefined)\n        },\n    }))\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}