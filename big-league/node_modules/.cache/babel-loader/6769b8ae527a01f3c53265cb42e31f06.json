{"ast":null,"code":"import 'antd/dist/antd.css';\nimport { lineupError, rosterError, staffError, starterError, unsignedError } from \"../../Atoms/notificationerrors\";\nexport const simSeasonChecker = (franchise, league) => {\n  // every team needs at least 5 players\n  if (franchise.playerSet.length < 5) {\n    league.setSeasonSimCheck(false);\n    return rosterError(franchise.franchise);\n  }\n  // all players with a franchise need a lineup\n  if (franchise.lineup.includes(null)) {\n    league.setSeasonSimCheck(false);\n    return lineupError(franchise.franchise);\n  }\n  // each franchise needs 5 starters\n  if (franchise.starters.length !== 5) {\n    league.setSeasonSimCheck(false);\n    return starterError(franchise.franchise);\n  }\n  // all players with a franchise need to be signed\n  if (franchise.contracts.includes(null)) {\n    league.setSeasonSimCheck(false);\n    return unsignedError(franchise.franchise);\n  }\n  // all franchises need staff\n  if (!franchise.gm || !franchise.coach) {\n    league.setSeasonSimCheck(false);\n    return staffError(franchise.franchise);\n  }\n};","map":{"version":3,"names":["lineupError","rosterError","staffError","starterError","unsignedError","simSeasonChecker","franchise","league","playerSet","length","setSeasonSimCheck","lineup","includes","starters","contracts","gm","coach"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/SimulationButtons/SimSeasonChecker.tsx"],"sourcesContent":["import 'antd/dist/antd.css';\nimport {FranchiseTypeModelType, LeagueTypeModelType} from \"../../../models\";\nimport {lineupError, rosterError, staffError, starterError, unsignedError} from \"../../Atoms/notificationerrors\";\n\n\nexport const simSeasonChecker = (franchise: FranchiseTypeModelType, league: LeagueTypeModelType) => {\n    // every team needs at least 5 players\n    if (franchise.playerSet.length < 5) {\n        league.setSeasonSimCheck(false)\n        return rosterError(franchise.franchise);\n    }\n    // all players with a franchise need a lineup\n    if (franchise.lineup.includes(null)) {\n        league.setSeasonSimCheck(false)\n        return lineupError(franchise.franchise);\n    }\n    // each franchise needs 5 starters\n    if (franchise.starters.length !== 5) {\n        league.setSeasonSimCheck(false)\n        return starterError(franchise.franchise);\n    }\n    // all players with a franchise need to be signed\n    if (franchise.contracts.includes(null)) {\n        league.setSeasonSimCheck(false)\n        return unsignedError(franchise.franchise);\n    }\n    // all franchises need staff\n    if (!franchise.gm || !franchise.coach) {\n        league.setSeasonSimCheck(false)\n        return staffError(franchise.franchise);\n    }\n}"],"mappings":"AAAA,OAAO,oBAAoB;AAE3B,SAAQA,WAAW,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,aAAa,QAAO,gCAAgC;AAGhH,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,SAAiC,EAAEC,MAA2B,KAAK;EAChG;EACA,IAAID,SAAS,CAACE,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IAChCF,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC;IAC/B,OAAOT,WAAW,CAACK,SAAS,CAACA,SAAS,CAAC;EAC3C;EACA;EACA,IAAIA,SAAS,CAACK,MAAM,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;IACjCL,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC;IAC/B,OAAOV,WAAW,CAACM,SAAS,CAACA,SAAS,CAAC;EAC3C;EACA;EACA,IAAIA,SAAS,CAACO,QAAQ,CAACJ,MAAM,KAAK,CAAC,EAAE;IACjCF,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC;IAC/B,OAAOP,YAAY,CAACG,SAAS,CAACA,SAAS,CAAC;EAC5C;EACA;EACA,IAAIA,SAAS,CAACQ,SAAS,CAACF,QAAQ,CAAC,IAAI,CAAC,EAAE;IACpCL,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC;IAC/B,OAAON,aAAa,CAACE,SAAS,CAACA,SAAS,CAAC;EAC7C;EACA;EACA,IAAI,CAACA,SAAS,CAACS,EAAE,IAAI,CAACT,SAAS,CAACU,KAAK,EAAE;IACnCT,MAAM,CAACG,iBAAiB,CAAC,KAAK,CAAC;IAC/B,OAAOR,UAAU,CAACI,SAAS,CAACA,SAAS,CAAC;EAC1C;AACJ,CAAC"},"metadata":{},"sourceType":"module"}