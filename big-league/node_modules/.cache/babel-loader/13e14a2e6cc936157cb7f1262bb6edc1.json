{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { SeasonTypeModel } from \"./SeasonTypeModel\";\nimport { SeasonTypeModelSelector } from \"./SeasonTypeModel.base\";\n/**\n * UpdateSeasonMutationBase\n * auto generated base class for the model UpdateSeasonMutationModel.\n */\nexport var UpdateSeasonMutationModelBase = withTypedRefs()(ModelBase.named('UpdateSeasonMutation').props({\n  __typename: types.optional(types.literal(\"UpdateSeasonMutation\"), \"UpdateSeasonMutation\"),\n  season: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return SeasonTypeModel;\n  })))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var UpdateSeasonMutationModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(UpdateSeasonMutationModelSelector, _QueryBuilder);\n  var _super = _createSuper(UpdateSeasonMutationModelSelector);\n  function UpdateSeasonMutationModelSelector() {\n    _classCallCheck(this, UpdateSeasonMutationModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(UpdateSeasonMutationModelSelector, [{\n    key: \"season\",\n    value: function season(builder) {\n      return this.__child(\"season\", SeasonTypeModelSelector, builder);\n    }\n  }]);\n  return UpdateSeasonMutationModelSelector;\n}(QueryBuilder);\nexport function selectFromUpdateSeasonMutation() {\n  return new UpdateSeasonMutationModelSelector();\n}\nexport var updateSeasonMutationModelPrimitives = selectFromUpdateSeasonMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","SeasonTypeModel","SeasonTypeModelSelector","UpdateSeasonMutationModelBase","named","props","__typename","optional","literal","season","union","undefined","null","late","views","self","store","__getStore","UpdateSeasonMutationModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","builder","__child","selectFromUpdateSeasonMutation","updateSeasonMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UpdateSeasonMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { SeasonTypeModel, SeasonTypeModelType } from \"./SeasonTypeModel\"\nimport { SeasonTypeModelSelector } from \"./SeasonTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  season: SeasonTypeModelType;\n}\n\n/**\n * UpdateSeasonMutationBase\n * auto generated base class for the model UpdateSeasonMutationModel.\n */\nexport const UpdateSeasonMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UpdateSeasonMutation')\n  .props({\n    __typename: types.optional(types.literal(\"UpdateSeasonMutation\"), \"UpdateSeasonMutation\"),\n    season: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => SeasonTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UpdateSeasonMutationModelSelector extends QueryBuilder {\n  season(builder?: string | SeasonTypeModelSelector | ((selector: SeasonTypeModelSelector) => SeasonTypeModelSelector)) { return this.__child(`season`, SeasonTypeModelSelector, builder) }\n}\nexport function selectFromUpdateSeasonMutation() {\n  return new UpdateSeasonMutationModelSelector()\n}\n\nexport const updateSeasonMutationModelPrimitives = selectFromUpdateSeasonMutation()\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAA6B,mBAAmB;AACxE,SAASC,uBAAuB,QAAQ,wBAAwB;AAShE;AACA;AACA;AACA;AACA,OAAO,IAAMC,6BAA6B,GAAGJ,aAAa,EAAQ,CAACC,SAAS,CACzEI,KAAK,CAAC,sBAAsB,CAAC,CAC7BC,KAAK,CAAC;EACLC,UAAU,EAAEV,KAAK,CAACW,QAAQ,CAACX,KAAK,CAACY,OAAO,CAAC,sBAAsB,CAAC,EAAE,sBAAsB,CAAC;EACzFC,MAAM,EAAEb,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEf,SAAS,CAACD,KAAK,CAACiB,IAAI,CAAC;IAAA,OAAWZ,eAAe;EAAA,EAAC,CAAC;AACpG,CAAC,CAAC,CACDa,KAAK,CAAC,UAAAC,IAAI;EAAA,OAAK;IACd,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;IACzC;EACF,CAAC;AAAA,CAAC,CAAC,CAAC;AAEN,WAAaC,iCAAiC,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,iCAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iCAAA;EAAA,SAAAA,kCAAA;IAAAK,eAAA,OAAAL,iCAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,iCAAA;IAAAS,GAAA;IAAAC,KAAA,EAC5C,SAAAnB,OAAOoB,OAA6G,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,WAAW5B,uBAAuB,EAAE2B,OAAO,CAAC;IAAC;EAAC;EAAA,OAAAX,iCAAA;AAAA,EADpIpB,YAAY;AAGnE,OAAO,SAASiC,8BAA8BA,CAAA,EAAG;EAC/C,OAAO,IAAIb,iCAAiC,EAAE;AAChD;AAEA,OAAO,IAAMc,mCAAmC,GAAGD,8BAA8B,EAAE"},"metadata":{},"sourceType":"module"}