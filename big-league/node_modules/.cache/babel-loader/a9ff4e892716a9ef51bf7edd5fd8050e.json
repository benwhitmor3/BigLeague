{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { StadiumTypeModel } from \"./StadiumTypeModel\";\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\";\n/**\n * UpdateStadiumMutationBase\n * auto generated base class for the model UpdateStadiumMutationModel.\n */\nexport var UpdateStadiumMutationModelBase = withTypedRefs()(ModelBase.named('UpdateStadiumMutation').props({\n  __typename: types.optional(types.literal(\"UpdateStadiumMutation\"), \"UpdateStadiumMutation\"),\n  stadium: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return StadiumTypeModel;\n  })))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var UpdateStadiumMutationModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(UpdateStadiumMutationModelSelector, _QueryBuilder);\n  var _super = _createSuper(UpdateStadiumMutationModelSelector);\n  function UpdateStadiumMutationModelSelector() {\n    _classCallCheck(this, UpdateStadiumMutationModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(UpdateStadiumMutationModelSelector, [{\n    key: \"stadium\",\n    value: function stadium(builder) {\n      return this.__child(\"stadium\", StadiumTypeModelSelector, builder);\n    }\n  }]);\n  return UpdateStadiumMutationModelSelector;\n}(QueryBuilder);\nexport function selectFromUpdateStadiumMutation() {\n  return new UpdateStadiumMutationModelSelector();\n}\nexport var updateStadiumMutationModelPrimitives = selectFromUpdateStadiumMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","StadiumTypeModel","StadiumTypeModelSelector","UpdateStadiumMutationModelBase","named","props","__typename","optional","literal","stadium","union","undefined","null","late","views","self","store","__getStore","UpdateStadiumMutationModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","builder","__child","selectFromUpdateStadiumMutation","updateStadiumMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UpdateStadiumMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { StadiumTypeModel, StadiumTypeModelType } from \"./StadiumTypeModel\"\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  stadium: StadiumTypeModelType;\n}\n\n/**\n * UpdateStadiumMutationBase\n * auto generated base class for the model UpdateStadiumMutationModel.\n */\nexport const UpdateStadiumMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UpdateStadiumMutation')\n  .props({\n    __typename: types.optional(types.literal(\"UpdateStadiumMutation\"), \"UpdateStadiumMutation\"),\n    stadium: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => StadiumTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UpdateStadiumMutationModelSelector extends QueryBuilder {\n  stadium(builder?: string | StadiumTypeModelSelector | ((selector: StadiumTypeModelSelector) => StadiumTypeModelSelector)) { return this.__child(`stadium`, StadiumTypeModelSelector, builder) }\n}\nexport function selectFromUpdateStadiumMutation() {\n  return new UpdateStadiumMutationModelSelector()\n}\n\nexport const updateStadiumMutationModelPrimitives = selectFromUpdateStadiumMutation()\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,gBAAgB,QAA8B,oBAAoB;AAC3E,SAASC,wBAAwB,QAAQ,yBAAyB;AASlE;AACA;AACA;AACA;AACA,OAAO,IAAMC,8BAA8B,GAAGJ,aAAa,EAAQ,CAACC,SAAS,CAC1EI,KAAK,CAAC,uBAAuB,CAAC,CAC9BC,KAAK,CAAC;EACLC,UAAU,EAAEV,KAAK,CAACW,QAAQ,CAACX,KAAK,CAACY,OAAO,CAAC,uBAAuB,CAAC,EAAE,uBAAuB,CAAC;EAC3FC,OAAO,EAAEb,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEf,SAAS,CAACD,KAAK,CAACiB,IAAI,CAAC;IAAA,OAAWZ,gBAAgB;EAAA,EAAC,CAAC;AACtG,CAAC,CAAC,CACDa,KAAK,CAAC,UAAAC,IAAI;EAAA,OAAK;IACd,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;IACzC;EACF,CAAC;AAAA,CAAC,CAAC,CAAC;AAEN,WAAaC,kCAAkC,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,kCAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,kCAAA;EAAA,SAAAA,mCAAA;IAAAK,eAAA,OAAAL,kCAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,kCAAA;IAAAS,GAAA;IAAAC,KAAA,EAC7C,SAAAnB,QAAQoB,OAAgH,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,YAAY5B,wBAAwB,EAAE2B,OAAO,CAAC;IAAC;EAAC;EAAA,OAAAX,kCAAA;AAAA,EADzIpB,YAAY;AAGpE,OAAO,SAASiC,+BAA+BA,CAAA,EAAG;EAChD,OAAO,IAAIb,kCAAkC,EAAE;AACjD;AAEA,OAAO,IAAMc,oCAAoC,GAAGD,+BAA+B,EAAE"},"metadata":{},"sourceType":"module"}