{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { QueryBuilder } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\n/**\n * RefreshBase\n * auto generated base class for the model RefreshModel.\n */\nexport const RefreshModelBase = ModelBase.named('Refresh').props({\n  __typename: types.optional(types.literal(\"Refresh\"), \"Refresh\"),\n  payload: types.union(types.undefined, types.frozen()),\n  refreshExpiresIn: types.union(types.undefined, types.integer),\n  token: types.union(types.undefined, types.string)\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n}));\nexport class RefreshModelSelector extends QueryBuilder {\n  get payload() {\n    return this.__attr(`payload`);\n  }\n  get refreshExpiresIn() {\n    return this.__attr(`refreshExpiresIn`);\n  }\n  get token() {\n    return this.__attr(`token`);\n  }\n}\nexport function selectFromRefresh() {\n  return new RefreshModelSelector();\n}\nexport const refreshModelPrimitives = selectFromRefresh().payload.refreshExpiresIn.token;","map":{"version":3,"names":["types","QueryBuilder","ModelBase","RefreshModelBase","named","props","__typename","optional","literal","payload","union","undefined","frozen","refreshExpiresIn","integer","token","string","views","self","store","__getStore","RefreshModelSelector","__attr","selectFromRefresh","refreshModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/RefreshModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { QueryBuilder } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { RootStoreType } from \"./index\"\n\n\n/**\n * RefreshBase\n * auto generated base class for the model RefreshModel.\n */\nexport const RefreshModelBase = ModelBase\n  .named('Refresh')\n  .props({\n    __typename: types.optional(types.literal(\"Refresh\"), \"Refresh\"),\n    payload: types.union(types.undefined, types.frozen()),\n    refreshExpiresIn: types.union(types.undefined, types.integer),\n    token: types.union(types.undefined, types.string),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  }))\n\nexport class RefreshModelSelector extends QueryBuilder {\n  get payload() { return this.__attr(`payload`) }\n  get refreshExpiresIn() { return this.__attr(`refreshExpiresIn`) }\n  get token() { return this.__attr(`token`) }\n}\nexport function selectFromRefresh() {\n  return new RefreshModelSelector()\n}\n\nexport const refreshModelPrimitives = selectFromRefresh().payload.refreshExpiresIn.token\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,SAAS,QAAQ,aAAa;AAIvC;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGD,SAAS,CACtCE,KAAK,CAAC,SAAS,CAAC,CAChBC,KAAK,CAAC;EACLC,UAAU,EAAEN,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,OAAO,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC;EAC/DC,OAAO,EAAET,KAAK,CAACU,KAAK,CAACV,KAAK,CAACW,SAAS,EAAEX,KAAK,CAACY,MAAM,EAAE,CAAC;EACrDC,gBAAgB,EAAEb,KAAK,CAACU,KAAK,CAACV,KAAK,CAACW,SAAS,EAAEX,KAAK,CAACc,OAAO,CAAC;EAC7DC,KAAK,EAAEf,KAAK,CAACU,KAAK,CAACV,KAAK,CAACW,SAAS,EAAEX,KAAK,CAACgB,MAAM;AAClD,CAAC,CAAC,CACDC,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC;AAEL,OAAO,MAAMC,oBAAoB,SAASpB,YAAY,CAAC;EACrD,IAAIQ,OAAOA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACa,MAAM,CAAE,SAAQ,CAAC;EAAC;EAC9C,IAAIT,gBAAgBA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACS,MAAM,CAAE,kBAAiB,CAAC;EAAC;EAChE,IAAIP,KAAKA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACO,MAAM,CAAE,OAAM,CAAC;EAAC;AAC5C;AACA,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,OAAO,IAAIF,oBAAoB,EAAE;AACnC;AAEA,OAAO,MAAMG,sBAAsB,GAAGD,iBAAiB,EAAE,CAACd,OAAO,CAACI,gBAAgB,CAACE,KAAK"},"metadata":{},"sourceType":"module"}