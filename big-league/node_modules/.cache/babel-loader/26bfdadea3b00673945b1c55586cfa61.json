{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { UserTypeModel } from \"./UserTypeModel\";\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\";\n/**\n * CreateFranchiseMutationBase\n * auto generated base class for the model CreateFranchiseMutationModel.\n */\nexport var CreateFranchiseMutationModelBase = withTypedRefs()(ModelBase.named('CreateFranchiseMutation').props({\n  __typename: types.optional(types.literal(\"CreateFranchiseMutation\"), \"CreateFranchiseMutation\"),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return FranchiseTypeModel;\n  }))),\n  user: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return UserTypeModel;\n  })))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var CreateFranchiseMutationModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(CreateFranchiseMutationModelSelector, _QueryBuilder);\n  var _super = _createSuper(CreateFranchiseMutationModelSelector);\n  function CreateFranchiseMutationModelSelector() {\n    _classCallCheck(this, CreateFranchiseMutationModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(CreateFranchiseMutationModelSelector, [{\n    key: \"franchise\",\n    value: function franchise(builder) {\n      return this.__child(\"franchise\", FranchiseTypeModelSelector, builder);\n    }\n  }, {\n    key: \"user\",\n    value: function user(builder) {\n      return this.__child(\"user\", UserTypeModelSelector, builder);\n    }\n  }]);\n  return CreateFranchiseMutationModelSelector;\n}(QueryBuilder);\nexport function selectFromCreateFranchiseMutation() {\n  return new CreateFranchiseMutationModelSelector();\n}\nexport var createFranchiseMutationModelPrimitives = selectFromCreateFranchiseMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","UserTypeModel","UserTypeModelSelector","CreateFranchiseMutationModelBase","named","props","__typename","optional","literal","franchise","union","undefined","null","late","user","views","self","store","__getStore","CreateFranchiseMutationModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","builder","__child","selectFromCreateFranchiseMutation","createFranchiseMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/CreateFranchiseMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n  user: UserTypeModelType;\n}\n\n/**\n * CreateFranchiseMutationBase\n * auto generated base class for the model CreateFranchiseMutationModel.\n */\nexport const CreateFranchiseMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('CreateFranchiseMutation')\n  .props({\n    __typename: types.optional(types.literal(\"CreateFranchiseMutation\"), \"CreateFranchiseMutation\"),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class CreateFranchiseMutationModelSelector extends QueryBuilder {\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n}\nexport function selectFromCreateFranchiseMutation() {\n  return new CreateFranchiseMutationModelSelector()\n}\n\nexport const createFranchiseMutationModelPrimitives = selectFromCreateFranchiseMutation()\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AACtE,SAASC,aAAa,QAA2B,iBAAiB;AAClE,SAASC,qBAAqB,QAAQ,sBAAsB;AAU5D;AACA;AACA;AACA;AACA,OAAO,IAAMC,gCAAgC,GAAGN,aAAa,EAAQ,CAACC,SAAS,CAC5EM,KAAK,CAAC,yBAAyB,CAAC,CAChCC,KAAK,CAAC;EACLC,UAAU,EAAEZ,KAAK,CAACa,QAAQ,CAACb,KAAK,CAACc,OAAO,CAAC,yBAAyB,CAAC,EAAE,yBAAyB,CAAC;EAC/FC,SAAS,EAAEf,KAAK,CAACgB,KAAK,CAAChB,KAAK,CAACiB,SAAS,EAAEjB,KAAK,CAACkB,IAAI,EAAEjB,SAAS,CAACD,KAAK,CAACmB,IAAI,CAAC;IAAA,OAAWd,kBAAkB;EAAA,EAAC,CAAC,CAAC;EACzGe,IAAI,EAAEpB,KAAK,CAACgB,KAAK,CAAChB,KAAK,CAACiB,SAAS,EAAEjB,KAAK,CAACkB,IAAI,EAAEjB,SAAS,CAACD,KAAK,CAACmB,IAAI,CAAC;IAAA,OAAWZ,aAAa;EAAA,EAAC,CAAC;AAChG,CAAC,CAAC,CACDc,KAAK,CAAC,UAAAC,IAAI;EAAA,OAAK;IACd,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;IACzC;EACF,CAAC;AAAA,CAAC,CAAC,CAAC;AAEN,WAAaC,oCAAoC,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,oCAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,oCAAA;EAAA,SAAAA,qCAAA;IAAAK,eAAA,OAAAL,oCAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,oCAAA;IAAAS,GAAA;IAAAC,KAAA,EAC/C,SAAApB,UAAUqB,OAAsH,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,cAAc/B,0BAA0B,EAAE8B,OAAO,CAAC;IAAC;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAC3M,SAAAf,KAAKgB,OAAuG,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,SAAS7B,qBAAqB,EAAE4B,OAAO,CAAC;IAAC;EAAC;EAAA,OAAAX,oCAAA;AAAA,EAFrHvB,YAAY;AAItE,OAAO,SAASoC,iCAAiCA,CAAA,EAAG;EAClD,OAAO,IAAIb,oCAAoC,EAAE;AACnD;AAEA,OAAO,IAAMc,sCAAsC,GAAGD,iCAAiC,EAAE"},"metadata":{},"sourceType":"module"}