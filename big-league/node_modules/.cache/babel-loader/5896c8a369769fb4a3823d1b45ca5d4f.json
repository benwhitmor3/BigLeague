{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\n/**\n * UpdateFranchiseMutationBase\n * auto generated base class for the model UpdateFranchiseMutationModel.\n */\nexport var UpdateFranchiseMutationModelBase = withTypedRefs()(ModelBase.named('UpdateFranchiseMutation').props({\n  __typename: types.optional(types.literal(\"UpdateFranchiseMutation\"), \"UpdateFranchiseMutation\"),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return FranchiseTypeModel;\n  })))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var UpdateFranchiseMutationModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(UpdateFranchiseMutationModelSelector, _QueryBuilder);\n  var _super = _createSuper(UpdateFranchiseMutationModelSelector);\n  function UpdateFranchiseMutationModelSelector() {\n    _classCallCheck(this, UpdateFranchiseMutationModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(UpdateFranchiseMutationModelSelector, [{\n    key: \"franchise\",\n    value: function franchise(builder) {\n      return this.__child(\"franchise\", FranchiseTypeModelSelector, builder);\n    }\n  }]);\n  return UpdateFranchiseMutationModelSelector;\n}(QueryBuilder);\nexport function selectFromUpdateFranchiseMutation() {\n  return new UpdateFranchiseMutationModelSelector();\n}\nexport var updateFranchiseMutationModelPrimitives = selectFromUpdateFranchiseMutation();","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","UpdateFranchiseMutationModelBase","named","props","__typename","optional","literal","franchise","union","undefined","null","late","views","self","store","__getStore","UpdateFranchiseMutationModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","builder","__child","selectFromUpdateFranchiseMutation","updateFranchiseMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/UpdateFranchiseMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n}\n\n/**\n * UpdateFranchiseMutationBase\n * auto generated base class for the model UpdateFranchiseMutationModel.\n */\nexport const UpdateFranchiseMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('UpdateFranchiseMutation')\n  .props({\n    __typename: types.optional(types.literal(\"UpdateFranchiseMutation\"), \"UpdateFranchiseMutation\"),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class UpdateFranchiseMutationModelSelector extends QueryBuilder {\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromUpdateFranchiseMutation() {\n  return new UpdateFranchiseMutationModelSelector()\n}\n\nexport const updateFranchiseMutationModelPrimitives = selectFromUpdateFranchiseMutation()\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AAStE;AACA;AACA;AACA;AACA,OAAO,IAAMC,gCAAgC,GAAGJ,aAAa,EAAQ,CAACC,SAAS,CAC5EI,KAAK,CAAC,yBAAyB,CAAC,CAChCC,KAAK,CAAC;EACLC,UAAU,EAAEV,KAAK,CAACW,QAAQ,CAACX,KAAK,CAACY,OAAO,CAAC,yBAAyB,CAAC,EAAE,yBAAyB,CAAC;EAC/FC,SAAS,EAAEb,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEf,SAAS,CAACD,KAAK,CAACiB,IAAI,CAAC;IAAA,OAAWZ,kBAAkB;EAAA,EAAC,CAAC;AAC1G,CAAC,CAAC,CACDa,KAAK,CAAC,UAAAC,IAAI;EAAA,OAAK;IACd,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;IACzC;EACF,CAAC;AAAA,CAAC,CAAC,CAAC;AAEN,WAAaC,oCAAoC,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,oCAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,oCAAA;EAAA,SAAAA,qCAAA;IAAAK,eAAA,OAAAL,oCAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,oCAAA;IAAAS,GAAA;IAAAC,KAAA,EAC/C,SAAAnB,UAAUoB,OAAsH,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,cAAc5B,0BAA0B,EAAE2B,OAAO,CAAC;IAAC;EAAC;EAAA,OAAAX,oCAAA;AAAA,EADnJpB,YAAY;AAGtE,OAAO,SAASiC,iCAAiCA,CAAA,EAAG;EAClD,OAAO,IAAIb,oCAAoC,EAAE;AACnD;AAEA,OAAO,IAAMc,sCAAsC,GAAGD,iCAAiC,EAAE"},"metadata":{},"sourceType":"module"}