{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { CoachAttributeOneEnumType } from \"./CoachAttributeOneEnum\";\nimport { CoachAttributeTwoEnumType } from \"./CoachAttributeTwoEnum\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\n/**\n * CoachTypeBase\n * auto generated base class for the model CoachTypeModel.\n */\nexport const CoachTypeModelBase = withTypedRefs()(ModelBase.named('CoachType').props({\n  __typename: types.optional(types.literal(\"CoachType\"), \"CoachType\"),\n  id: types.identifier,\n  name: types.union(types.undefined, types.string),\n  attributeOne: types.union(types.undefined, CoachAttributeOneEnumType),\n  attributeTwo: types.union(types.undefined, CoachAttributeTwoEnumType),\n  league: types.union(types.undefined, MSTGQLRef(types.late(() => LeagueTypeModel))),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => FranchiseTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class CoachTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get name() {\n    return this.__attr(`name`);\n  }\n  get attributeOne() {\n    return this.__attr(`attributeOne`);\n  }\n  get attributeTwo() {\n    return this.__attr(`attributeTwo`);\n  }\n  league(builder) {\n    return this.__child(`league`, LeagueTypeModelSelector, builder);\n  }\n  franchise(builder) {\n    return this.__child(`franchise`, FranchiseTypeModelSelector, builder);\n  }\n}\nexport function selectFromCoachType() {\n  return new CoachTypeModelSelector();\n}\nexport const coachTypeModelPrimitives = selectFromCoachType().name.attributeOne.attributeTwo;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","CoachAttributeOneEnumType","CoachAttributeTwoEnumType","FranchiseTypeModel","FranchiseTypeModelSelector","LeagueTypeModel","LeagueTypeModelSelector","CoachTypeModelBase","named","props","__typename","optional","literal","id","identifier","name","union","undefined","string","attributeOne","attributeTwo","league","late","franchise","null","views","self","store","__getStore","CoachTypeModelSelector","__attr","builder","__child","selectFromCoachType","coachTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/CoachTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { CoachAttributeOneEnumType } from \"./CoachAttributeOneEnum\"\nimport { CoachAttributeTwoEnumType } from \"./CoachAttributeTwoEnum\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  league: LeagueTypeModelType;\n  franchise: FranchiseTypeModelType;\n}\n\n/**\n * CoachTypeBase\n * auto generated base class for the model CoachTypeModel.\n */\nexport const CoachTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('CoachType')\n  .props({\n    __typename: types.optional(types.literal(\"CoachType\"), \"CoachType\"),\n    id: types.identifier,\n    name: types.union(types.undefined, types.string),\n    attributeOne: types.union(types.undefined, CoachAttributeOneEnumType),\n    attributeTwo: types.union(types.undefined, CoachAttributeTwoEnumType),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class CoachTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get name() { return this.__attr(`name`) }\n  get attributeOne() { return this.__attr(`attributeOne`) }\n  get attributeTwo() { return this.__attr(`attributeTwo`) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromCoachType() {\n  return new CoachTypeModelSelector()\n}\n\nexport const coachTypeModelPrimitives = selectFromCoachType().name.attributeOne.attributeTwo\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,yBAAyB,QAAQ,yBAAyB;AACnE,SAASC,yBAAyB,QAAQ,yBAAyB;AACnE,SAASC,kBAAkB,QAAgC,sBAAsB;AACjF,SAASC,0BAA0B,QAAQ,2BAA2B;AACtE,SAASC,eAAe,QAA6B,mBAAmB;AACxE,SAASC,uBAAuB,QAAQ,wBAAwB;AAUhE;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAGR,aAAa,EAAQ,CAACC,SAAS,CAC9DQ,KAAK,CAAC,WAAW,CAAC,CAClBC,KAAK,CAAC;EACLC,UAAU,EAAEd,KAAK,CAACe,QAAQ,CAACf,KAAK,CAACgB,OAAO,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC;EACnEC,EAAE,EAAEjB,KAAK,CAACkB,UAAU;EACpBC,IAAI,EAAEnB,KAAK,CAACoB,KAAK,CAACpB,KAAK,CAACqB,SAAS,EAAErB,KAAK,CAACsB,MAAM,CAAC;EAChDC,YAAY,EAAEvB,KAAK,CAACoB,KAAK,CAACpB,KAAK,CAACqB,SAAS,EAAEhB,yBAAyB,CAAC;EACrEmB,YAAY,EAAExB,KAAK,CAACoB,KAAK,CAACpB,KAAK,CAACqB,SAAS,EAAEf,yBAAyB,CAAC;EACrEmB,MAAM,EAAEzB,KAAK,CAACoB,KAAK,CAACpB,KAAK,CAACqB,SAAS,EAAEpB,SAAS,CAACD,KAAK,CAAC0B,IAAI,CAAC,MAAWjB,eAAe,CAAC,CAAC,CAAC;EACvFkB,SAAS,EAAE3B,KAAK,CAACoB,KAAK,CAACpB,KAAK,CAACqB,SAAS,EAAErB,KAAK,CAAC4B,IAAI,EAAE3B,SAAS,CAACD,KAAK,CAAC0B,IAAI,CAAC,MAAWnB,kBAAkB,CAAC,CAAC;AAC1G,CAAC,CAAC,CACDsB,KAAK,CAACC,IAAI,KAAK;EACd,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;EACzC;AACF,CAAC,CAAC,CAAC,CAAC;AAEN,OAAO,MAAMC,sBAAsB,SAAS/B,YAAY,CAAC;EACvD,IAAIe,EAAEA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACiB,MAAM,CAAE,IAAG,CAAC;EAAC;EACpC,IAAIf,IAAIA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACe,MAAM,CAAE,MAAK,CAAC;EAAC;EACxC,IAAIX,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACW,MAAM,CAAE,cAAa,CAAC;EAAC;EACxD,IAAIV,YAAYA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACU,MAAM,CAAE,cAAa,CAAC;EAAC;EACxDT,MAAMA,CAACU,OAA6G,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,QAAO,EAAE1B,uBAAuB,EAAEyB,OAAO,CAAC;EAAC;EACxLR,SAASA,CAACQ,OAAsH,EAAE;IAAE,OAAO,IAAI,CAACC,OAAO,CAAE,WAAU,EAAE5B,0BAA0B,EAAE2B,OAAO,CAAC;EAAC;AAC5M;AACA,OAAO,SAASE,mBAAmBA,CAAA,EAAG;EACpC,OAAO,IAAIJ,sBAAsB,EAAE;AACrC;AAEA,OAAO,MAAMK,wBAAwB,GAAGD,mBAAmB,EAAE,CAAClB,IAAI,CAACI,YAAY,CAACC,YAAY"},"metadata":{},"sourceType":"module"}