{"ast":null,"code":"import _classCallCheck from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { UserTypeModel } from \"./UserTypeModel\";\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\";\n/**\n * CreateLeagueMutationBase\n * auto generated base class for the model CreateLeagueMutationModel.\n */\nexport var CreateLeagueMutationModelBase = withTypedRefs()(ModelBase.named('CreateLeagueMutation').props({\n  __typename: types.optional(types.literal(\"CreateLeagueMutation\"), \"CreateLeagueMutation\"),\n  leagueName: types.union(types.undefined, types.null, types.string),\n  user: types.union(types.undefined, types.null, MSTGQLRef(types.late(function () {\n    return UserTypeModel;\n  })))\n}).views(function (self) {\n  return {\n    get store() {\n      return self.__getStore();\n    }\n  };\n}));\nexport var CreateLeagueMutationModelSelector = /*#__PURE__*/function (_QueryBuilder) {\n  _inherits(CreateLeagueMutationModelSelector, _QueryBuilder);\n  var _super = _createSuper(CreateLeagueMutationModelSelector);\n  function CreateLeagueMutationModelSelector() {\n    _classCallCheck(this, CreateLeagueMutationModelSelector);\n    return _super.apply(this, arguments);\n  }\n  _createClass(CreateLeagueMutationModelSelector, [{\n    key: \"leagueName\",\n    get: function get() {\n      return this.__attr(\"leagueName\");\n    }\n  }, {\n    key: \"user\",\n    value: function user(builder) {\n      return this.__child(\"user\", UserTypeModelSelector, builder);\n    }\n  }]);\n  return CreateLeagueMutationModelSelector;\n}(QueryBuilder);\nexport function selectFromCreateLeagueMutation() {\n  return new CreateLeagueMutationModelSelector();\n}\nexport var createLeagueMutationModelPrimitives = selectFromCreateLeagueMutation().leagueName;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","UserTypeModel","UserTypeModelSelector","CreateLeagueMutationModelBase","named","props","__typename","optional","literal","leagueName","union","undefined","null","string","user","late","views","self","store","__getStore","CreateLeagueMutationModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromCreateLeagueMutation","createLeagueMutationModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/CreateLeagueMutationModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  user: UserTypeModelType;\n}\n\n/**\n * CreateLeagueMutationBase\n * auto generated base class for the model CreateLeagueMutationModel.\n */\nexport const CreateLeagueMutationModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('CreateLeagueMutation')\n  .props({\n    __typename: types.optional(types.literal(\"CreateLeagueMutation\"), \"CreateLeagueMutation\"),\n    leagueName: types.union(types.undefined, types.null, types.string),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class CreateLeagueMutationModelSelector extends QueryBuilder {\n  get leagueName() { return this.__attr(`leagueName`) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n}\nexport function selectFromCreateLeagueMutation() {\n  return new CreateLeagueMutationModelSelector()\n}\n\nexport const createLeagueMutationModelPrimitives = selectFromCreateLeagueMutation().leagueName\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,aAAa,QAAQ,SAAS;AAChE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,aAAa,QAA2B,iBAAiB;AAClE,SAASC,qBAAqB,QAAQ,sBAAsB;AAS5D;AACA;AACA;AACA;AACA,OAAO,IAAMC,6BAA6B,GAAGJ,aAAa,EAAQ,CAACC,SAAS,CACzEI,KAAK,CAAC,sBAAsB,CAAC,CAC7BC,KAAK,CAAC;EACLC,UAAU,EAAEV,KAAK,CAACW,QAAQ,CAACX,KAAK,CAACY,OAAO,CAAC,sBAAsB,CAAC,EAAE,sBAAsB,CAAC;EACzFC,UAAU,EAAEb,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEhB,KAAK,CAACiB,MAAM,CAAC;EAClEC,IAAI,EAAElB,KAAK,CAACc,KAAK,CAACd,KAAK,CAACe,SAAS,EAAEf,KAAK,CAACgB,IAAI,EAAEf,SAAS,CAACD,KAAK,CAACmB,IAAI,CAAC;IAAA,OAAWd,aAAa;EAAA,EAAC,CAAC;AAChG,CAAC,CAAC,CACDe,KAAK,CAAC,UAAAC,IAAI;EAAA,OAAK;IACd,IAAIC,KAAKA,CAAA,EAAG;MACV,OAAOD,IAAI,CAACE,UAAU,EAAiB;IACzC;EACF,CAAC;AAAA,CAAC,CAAC,CAAC;AAEN,WAAaC,iCAAiC,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,iCAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iCAAA;EAAA,SAAAA,kCAAA;IAAAK,eAAA,OAAAL,iCAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,iCAAA;IAAAS,GAAA;IAAAC,GAAA,EAC5C,SAAAA,IAAA,EAAiB;MAAE,OAAO,IAAI,CAACC,MAAM,cAAc;IAAC;EAAC;IAAAF,GAAA;IAAAG,KAAA,EACrD,SAAAlB,KAAKmB,OAAuG,EAAE;MAAE,OAAO,IAAI,CAACC,OAAO,SAAShC,qBAAqB,EAAE+B,OAAO,CAAC;IAAC;EAAC;EAAA,OAAAb,iCAAA;AAAA,EAFxHtB,YAAY;AAInE,OAAO,SAASqC,8BAA8BA,CAAA,EAAG;EAC/C,OAAO,IAAIf,iCAAiC,EAAE;AAChD;AAEA,OAAO,IAAMgB,mCAAmC,GAAGD,8BAA8B,EAAE,CAAC1B,UAAU"},"metadata":{},"sourceType":"module"}