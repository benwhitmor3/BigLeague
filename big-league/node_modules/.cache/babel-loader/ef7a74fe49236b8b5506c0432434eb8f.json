{"ast":null,"code":"var _jsxFileName = \"/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/SimulationButtons/DraftButton.tsx\";\nimport React, { useContext } from 'react';\nimport 'antd/dist/antd.css';\nimport { Button } from 'antd';\nimport { observer } from \"mobx-react\";\nimport { StoreContext } from \"../../../models\";\nimport { simButtonStyles } from \"./SimButtonStyles\";\nimport { mutateCreatePlayerQuery } from \"../../Utils/queries\";\nexport const DraftButton = observer(() => {\n  const store = useContext(StoreContext);\n  const draftSimRepeat = (franchise, player) => {\n    let numOfTeamsBeforeUser = 0;\n    let currentTeamPosition = store.User.league.draftOrder.indexOf(franchise);\n    let userTeamPosition = store.User.league.draftOrder.indexOf(store.User.franchise);\n    let numOfDrafteesRemaining = store.User.league.draftClass.filter(player => {\n      if (player.year === 1 && player.franchise == null) return player;\n    }).length;\n    if (userTeamPosition > currentTeamPosition) {\n      numOfTeamsBeforeUser = userTeamPosition - currentTeamPosition;\n    } else {\n      numOfTeamsBeforeUser = Math.abs(store.User.league.franchiseSet.length - currentTeamPosition + userTeamPosition);\n    }\n    if (numOfDrafteesRemaining < numOfTeamsBeforeUser) {\n      numOfTeamsBeforeUser = numOfDrafteesRemaining;\n    }\n    for (let i = 0; i < numOfTeamsBeforeUser; i++) {\n      draftRepeater(i);\n    }\n    function draftRepeater(i) {\n      setTimeout(function () {\n        franchise = store.User.league.draftingFranchise;\n        player = store.User.league.bestDraftPlayer;\n        console.log(franchise.franchise, \" \", player.name);\n        draftSim(franchise, player);\n      }, 1000 * i);\n    }\n  };\n  const draftSim = (franchise, player) => {\n    store.mutateCreatePlayer({\n      \"playerInput\": {\n        \"name\": player.name,\n        \"suit\": player.suit,\n        \"age\": player.age,\n        \"pv\": player.pv,\n        \"epv\": player.epv,\n        \"sEpv\": player.sEpv,\n        \"contract\": undefined,\n        \"tOption\": undefined,\n        \"pOption\": undefined,\n        \"renew\": undefined,\n        \"salary\": undefined,\n        \"grade\": undefined,\n        \"lineup\": \"bench\",\n        \"franchiseId\": store.User.franchise.league.draftingFranchise.id,\n        \"trainer\": false,\n        \"year\": player.year,\n        \"leagueId\": store.User.franchise.league.id\n      }\n    }, mutateCreatePlayerQuery, undefined);\n    try {\n      // make next franchise in draft order draftingFranchise\n      store.User.league.setDraftingFranchise(store.User.league.draftOrder[store.User.league.draftOrder.indexOf(franchise) + 1]);\n    } catch (exception_var) {\n      // if at the end of draft order reset to beginning\n      store.User.league.setDraftingFranchise(store.User.league.draftOrder[0]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, store.User.league.bestDraftPlayer ? /*#__PURE__*/React.createElement(Button, {\n    style: simButtonStyles,\n    onClick: () => draftSimRepeat(store.User.league.draftingFranchise, store.User.league.bestDraftPlayer),\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Draft Sim\") : /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Go to OffSeason\"));\n});\nexport default DraftButton;","map":{"version":3,"names":["React","useContext","Button","observer","StoreContext","simButtonStyles","mutateCreatePlayerQuery","DraftButton","store","draftSimRepeat","franchise","player","numOfTeamsBeforeUser","currentTeamPosition","User","league","draftOrder","indexOf","userTeamPosition","numOfDrafteesRemaining","draftClass","filter","year","length","Math","abs","franchiseSet","i","draftRepeater","setTimeout","draftingFranchise","bestDraftPlayer","console","log","name","draftSim","mutateCreatePlayer","suit","age","pv","epv","sEpv","undefined","id","setDraftingFranchise","exception_var","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","block","textAlign"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/SimulationButtons/DraftButton.tsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport 'antd/dist/antd.css';\nimport {Button} from 'antd';\nimport {observer} from \"mobx-react\";\nimport {FranchiseTypeModelType, PlayerTypeModelType, StoreContext} from \"../../../models\";\nimport {simButtonStyles} from \"./SimButtonStyles\";\nimport {mutateCreatePlayerQuery} from \"../../Utils/queries\";\n\nexport const DraftButton: React.FunctionComponent = observer(() => {\n\n        const store = useContext(StoreContext)\n\n\n        const draftSimRepeat = (franchise: FranchiseTypeModelType, player: any) => {\n\n            let numOfTeamsBeforeUser: number = 0\n            let currentTeamPosition: number = store.User.league.draftOrder.indexOf(franchise)\n            let userTeamPosition: number =  store.User.league.draftOrder.indexOf(store.User.franchise)\n            let numOfDrafteesRemaining: number = store.User.league.draftClass.filter((player: PlayerTypeModelType) => {\n                if (player.year === 1 && player.franchise == null)\n                    return player\n            }).length\n\n            if (userTeamPosition > currentTeamPosition) {\n                numOfTeamsBeforeUser = userTeamPosition - currentTeamPosition\n            }\n            else{\n                numOfTeamsBeforeUser = Math.abs(store.User.league.franchiseSet.length - currentTeamPosition + userTeamPosition)\n            }\n\n            if (numOfDrafteesRemaining < numOfTeamsBeforeUser) {\n                numOfTeamsBeforeUser = numOfDrafteesRemaining\n            }\n\n            for (let i = 0; i < numOfTeamsBeforeUser; i++) {\n                draftRepeater(i);\n            }\n\n            function draftRepeater(i: any) {\n                setTimeout(function () {\n                    franchise = store.User.league.draftingFranchise\n                    player = store.User.league.bestDraftPlayer\n                    console.log(franchise.franchise, \" \", player.name)\n                    draftSim(franchise, player)\n                }, 1000 * i);\n            }\n        }\n\n        const draftSim = (franchise: FranchiseTypeModelType, player: any) => {\n            store.mutateCreatePlayer({\n                    \"playerInput\": {\n                        \"name\": player.name,\n                        \"suit\": player.suit,\n                        \"age\": player.age,\n                        \"pv\": player.pv,\n                        \"epv\": player.epv,\n                        \"sEpv\": player.sEpv,\n                        \"contract\": undefined,\n                        \"tOption\": undefined,\n                        \"pOption\": undefined,\n                        \"renew\": undefined,\n                        \"salary\": undefined,\n                        \"grade\": undefined,\n                        \"lineup\": \"bench\",\n                        \"franchiseId\": store.User.franchise.league.draftingFranchise.id,\n                        \"trainer\": false,\n                        \"year\": player.year,\n                        \"leagueId\": store.User.franchise.league.id\n                    }\n                }, mutateCreatePlayerQuery,\n                undefined\n            )\n            try {\n                // make next franchise in draft order draftingFranchise\n                store.User.league.setDraftingFranchise(store.User.league.draftOrder[store.User.league.draftOrder.indexOf(franchise) + 1])\n            } catch (exception_var) {\n                // if at the end of draft order reset to beginning\n                store.User.league.setDraftingFranchise(store.User.league.draftOrder[0])\n            }\n        }\n\n\n        return (\n            <div>\n                {store.User.league.bestDraftPlayer ?\n                    <Button style={simButtonStyles}\n                            onClick={() => draftSimRepeat(store.User.league.draftingFranchise, store.User.league.bestDraftPlayer)}\n                            block>\n                        Draft Sim\n                    </Button> :\n                    <h1 style={{textAlign: 'center'}}>\n                        Go to OffSeason\n                    </h1>\n                }\n            </div>\n        );\n    }\n)\n\nexport default DraftButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}