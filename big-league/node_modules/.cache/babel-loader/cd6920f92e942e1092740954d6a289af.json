{"ast":null,"code":"import _classCallCheck from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* This is a mst-gql generated file, don't modify it manually */ /* eslint-disable */ /* tslint:disable */import{types}from\"mobx-state-tree\";import{MSTGQLRef,QueryBuilder,withTypedRefs}from\"mst-gql\";import{ModelBase}from\"./ModelBase\";import{CityTypeModel}from\"./CityTypeModel\";import{CityTypeModelSelector}from\"./CityTypeModel.base\";import{CoachTypeModel}from\"./CoachTypeModel\";import{CoachTypeModelSelector}from\"./CoachTypeModel.base\";import{FranchiseTypeModel}from\"./FranchiseTypeModel\";import{FranchiseTypeModelSelector}from\"./FranchiseTypeModel.base\";import{GmTypeModel}from\"./GmTypeModel\";import{GmTypeModelSelector}from\"./GmTypeModel.base\";import{PlayerHistoryTypeModel}from\"./PlayerHistoryTypeModel\";import{PlayerHistoryTypeModelSelector}from\"./PlayerHistoryTypeModel.base\";import{PlayerTypeModel}from\"./PlayerTypeModel\";import{PlayerTypeModelSelector}from\"./PlayerTypeModel.base\";import{UserTypeModel}from\"./UserTypeModel\";import{UserTypeModelSelector}from\"./UserTypeModel.base\";/**\n * LeagueTypeBase\n * auto generated base class for the model LeagueTypeModel.\n */export var LeagueTypeModelBase=withTypedRefs()(ModelBase.named('LeagueType').props({__typename:types.optional(types.literal(\"LeagueType\"),\"LeagueType\"),id:types.identifier,leagueName:types.union(types.undefined,types.string),user:types.union(types.undefined,types.null,MSTGQLRef(types.late(function(){return UserTypeModel;}))),franchiseSet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return FranchiseTypeModel;})))),citySet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return CityTypeModel;})))),gmSet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return GmTypeModel;})))),coachSet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return CoachTypeModel;})))),playerSet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return PlayerTypeModel;})))),playerhistorySet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return PlayerHistoryTypeModel;}))))}).views(function(self){return{get store(){return self.__getStore();}};}));export var LeagueTypeModelSelector=/*#__PURE__*/function(_QueryBuilder){_inherits(LeagueTypeModelSelector,_QueryBuilder);var _super=_createSuper(LeagueTypeModelSelector);function LeagueTypeModelSelector(){_classCallCheck(this,LeagueTypeModelSelector);return _super.apply(this,arguments);}_createClass(LeagueTypeModelSelector,[{key:\"id\",get:function get(){return this.__attr(\"id\");}},{key:\"leagueName\",get:function get(){return this.__attr(\"leagueName\");}},{key:\"user\",value:function user(builder){return this.__child(\"user\",UserTypeModelSelector,builder);}},{key:\"franchiseSet\",value:function franchiseSet(builder){return this.__child(\"franchiseSet\",FranchiseTypeModelSelector,builder);}},{key:\"citySet\",value:function citySet(builder){return this.__child(\"citySet\",CityTypeModelSelector,builder);}},{key:\"gmSet\",value:function gmSet(builder){return this.__child(\"gmSet\",GmTypeModelSelector,builder);}},{key:\"coachSet\",value:function coachSet(builder){return this.__child(\"coachSet\",CoachTypeModelSelector,builder);}},{key:\"playerSet\",value:function playerSet(builder){return this.__child(\"playerSet\",PlayerTypeModelSelector,builder);}},{key:\"playerhistorySet\",value:function playerhistorySet(builder){return this.__child(\"playerhistorySet\",PlayerHistoryTypeModelSelector,builder);}}]);return LeagueTypeModelSelector;}(QueryBuilder);export function selectFromLeagueType(){return new LeagueTypeModelSelector();}export var leagueTypeModelPrimitives=selectFromLeagueType().leagueName;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","CityTypeModel","CityTypeModelSelector","CoachTypeModel","CoachTypeModelSelector","FranchiseTypeModel","FranchiseTypeModelSelector","GmTypeModel","GmTypeModelSelector","PlayerHistoryTypeModel","PlayerHistoryTypeModelSelector","PlayerTypeModel","PlayerTypeModelSelector","UserTypeModel","UserTypeModelSelector","LeagueTypeModelBase","named","props","__typename","optional","literal","id","identifier","leagueName","union","undefined","string","user","null","late","franchiseSet","array","citySet","gmSet","coachSet","playerSet","playerhistorySet","views","self","store","__getStore","LeagueTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromLeagueType","leagueTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/LeagueTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { CityTypeModel, CityTypeModelType } from \"./CityTypeModel\"\nimport { CityTypeModelSelector } from \"./CityTypeModel.base\"\nimport { CoachTypeModel, CoachTypeModelType } from \"./CoachTypeModel\"\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { GmTypeModel, GmTypeModelType } from \"./GmTypeModel\"\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\"\nimport { PlayerHistoryTypeModel, PlayerHistoryTypeModelType } from \"./PlayerHistoryTypeModel\"\nimport { PlayerHistoryTypeModelSelector } from \"./PlayerHistoryTypeModel.base\"\nimport { PlayerTypeModel, PlayerTypeModelType } from \"./PlayerTypeModel\"\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  user: UserTypeModelType;\n  franchiseSet: IObservableArray<FranchiseTypeModelType>;\n  citySet: IObservableArray<CityTypeModelType>;\n  gmSet: IObservableArray<GmTypeModelType>;\n  coachSet: IObservableArray<CoachTypeModelType>;\n  playerSet: IObservableArray<PlayerTypeModelType>;\n  playerhistorySet: IObservableArray<PlayerHistoryTypeModelType>;\n}\n\n/**\n * LeagueTypeBase\n * auto generated base class for the model LeagueTypeModel.\n */\nexport const LeagueTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('LeagueType')\n  .props({\n    __typename: types.optional(types.literal(\"LeagueType\"), \"LeagueType\"),\n    id: types.identifier,\n    leagueName: types.union(types.undefined, types.string),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n    franchiseSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => FranchiseTypeModel)))),\n    citySet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => CityTypeModel)))),\n    gmSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => GmTypeModel)))),\n    coachSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => CoachTypeModel)))),\n    playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => PlayerTypeModel)))),\n    playerhistorySet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => PlayerHistoryTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class LeagueTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get leagueName() { return this.__attr(`leagueName`) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n  franchiseSet(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchiseSet`, FranchiseTypeModelSelector, builder) }\n  citySet(builder?: string | CityTypeModelSelector | ((selector: CityTypeModelSelector) => CityTypeModelSelector)) { return this.__child(`citySet`, CityTypeModelSelector, builder) }\n  gmSet(builder?: string | GmTypeModelSelector | ((selector: GmTypeModelSelector) => GmTypeModelSelector)) { return this.__child(`gmSet`, GmTypeModelSelector, builder) }\n  coachSet(builder?: string | CoachTypeModelSelector | ((selector: CoachTypeModelSelector) => CoachTypeModelSelector)) { return this.__child(`coachSet`, CoachTypeModelSelector, builder) }\n  playerSet(builder?: string | PlayerTypeModelSelector | ((selector: PlayerTypeModelSelector) => PlayerTypeModelSelector)) { return this.__child(`playerSet`, PlayerTypeModelSelector, builder) }\n  playerhistorySet(builder?: string | PlayerHistoryTypeModelSelector | ((selector: PlayerHistoryTypeModelSelector) => PlayerHistoryTypeModelSelector)) { return this.__child(`playerhistorySet`, PlayerHistoryTypeModelSelector, builder) }\n}\nexport function selectFromLeagueType() {\n  return new LeagueTypeModelSelector()\n}\n\nexport const leagueTypeModelPrimitives = selectFromLeagueType().leagueName\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}