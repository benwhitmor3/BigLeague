{"ast":null,"code":"import _slicedToArray from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import{StoreContext}from\"../../models\";import{Select}from\"../Atoms/Select\";import{observer}from\"mobx-react\";import{mutateCreatePlayerQuery}from\"../Utils/queries\";var LineupSelect=observer(function(_ref){var current_lineup=_ref.current_lineup,record=_ref.record,setRosterAlert=_ref.setRosterAlert;var store=useContext(StoreContext);var _useState=useState(current_lineup),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var submitLineup=function submitLineup(updated_lineup){// hides roster alert if previously true\nsetRosterAlert(false);// get current lineup array\nvar lineupArray=record.franchise.playerSet.map(function(p){return p.lineup;});// add updated_lineup selection\nlineupArray.push(updated_lineup);// if legal lineup run mutation\nif(lineupArray.filter(function(x){return x===\"starter\";}).length<=5&&lineupArray.filter(function(x){return x===\"rotation\";}).length<=3){setSelected(updated_lineup);store.mutateCreatePlayer({\"playerInput\":{\"name\":record.name,\"suit\":record.suit,\"age\":record.age,\"pv\":record.pv,\"epv\":record.epv,\"sEpv\":record.sEpv,\"contract\":record.contract,\"tOption\":record.tOption,\"pOption\":record.pOption,\"renew\":record.renew,\"salary\":record.salary,\"grade\":record.grade,\"franchiseId\":record.franchise.id,\"trainer\":record.trainer,\"year\":record.year,\"lineup\":updated_lineup,\"leagueId\":store.User.franchise.league.id}},mutateCreatePlayerQuery,undefined);}// else set roster alert pop-up\nelse{setRosterAlert(true);}};var other_values=[\"starter\",\"rotation\",\"bench\"].filter(function(x){return![current_lineup].includes(x);});var options=function options(other_values){if(other_values.length===2){return[{value:current_lineup,label:current_lineup},{value:other_values[0],label:other_values[0]},{value:other_values[1],label:other_values[1]}];}else{return[{value:current_lineup,label:current_lineup},{value:other_values[0],label:other_values[0]},{value:other_values[1],label:other_values[1]},{value:other_values[2],label:other_values[2]}];}};return/*#__PURE__*/React.createElement(Select,{options:options(other_values),value:selected,onChange:function onChange(updated_lineup){return submitLineup(updated_lineup);}});});export default LineupSelect;","map":{"version":3,"names":["React","useContext","useState","StoreContext","Select","observer","mutateCreatePlayerQuery","LineupSelect","_ref","current_lineup","record","setRosterAlert","store","_useState","_useState2","_slicedToArray","selected","setSelected","submitLineup","updated_lineup","lineupArray","franchise","playerSet","map","p","lineup","push","filter","x","length","mutateCreatePlayer","name","suit","age","pv","epv","sEpv","contract","tOption","pOption","renew","salary","grade","id","trainer","year","User","league","undefined","other_values","includes","options","value","label","createElement","onChange"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Molecules/LineupSelect.tsx"],"sourcesContent":["import React, {useContext, useState} from \"react\";\nimport {PlayerTypeModelType, StoreContext} from \"../../models\";\nimport {Select} from \"../Atoms/Select\";\nimport {observer} from \"mobx-react\";\nimport {mutateCreatePlayerQuery} from \"../Utils/queries\";\n\n\ninterface ILineup {\n    current_lineup: any;\n    record: any;\n    setRosterAlert: (rosteralert:boolean) => void;\n}\n\nconst LineupSelect: React.FunctionComponent<ILineup> = observer(({current_lineup, record, setRosterAlert} : ILineup) => {\n\n            const store = useContext(StoreContext);\n\n            const [selected, setSelected] = useState(current_lineup);\n\n            const submitLineup = (updated_lineup: any) => {\n                // hides roster alert if previously true\n                setRosterAlert(false)\n                // get current lineup array\n                let lineupArray: Array<string> = record.franchise.playerSet.map((p: PlayerTypeModelType) =>\n                    p.lineup\n                );\n                // add updated_lineup selection\n                lineupArray.push(updated_lineup);\n                // if legal lineup run mutation\n                if (lineupArray.filter(x => x === \"starter\").length <= 5 && lineupArray.filter(x => x === \"rotation\").length <= 3) {\n                    setSelected(updated_lineup);\n                    store.mutateCreatePlayer({\n                            \"playerInput\": {\n                                \"name\": record.name,\n                                \"suit\": record.suit,\n                                \"age\": record.age,\n                                \"pv\": record.pv,\n                                \"epv\": record.epv,\n                                \"sEpv\": record.sEpv,\n                                \"contract\": record.contract,\n                                \"tOption\": record.tOption,\n                                \"pOption\": record.pOption,\n                                \"renew\": record.renew,\n                                \"salary\": record.salary,\n                                \"grade\": record.grade,\n                                \"franchiseId\": record.franchise.id,\n                                \"trainer\": record.trainer,\n                                \"year\": record.year,\n                                \"lineup\": updated_lineup,\n                                \"leagueId\": store.User.franchise.league.id\n                            }\n                        }, mutateCreatePlayerQuery,\n                        undefined\n                    )\n                }\n                // else set roster alert pop-up\n                else {\n                    setRosterAlert(true)\n                }\n            };\n\n            let other_values = [\"starter\", \"rotation\", \"bench\"].filter(x => ![current_lineup].includes(x));\n\n            const options = (other_values: Array<string>) => {\n                if (other_values.length === 2) {\n                    return [{value: current_lineup, label: current_lineup}, {\n                        value: other_values[0],\n                        label: other_values[0]\n                    },\n                        {value: other_values[1], label: other_values[1]}];\n                } else {\n                    return [{value: current_lineup, label: current_lineup}, {\n                        value: other_values[0],\n                        label: other_values[0]\n                    },\n                        {value: other_values[1], label: other_values[1]}, {value: other_values[2], label: other_values[2]}];\n                }\n            };\n\n            return <Select options={options(other_values)} value={selected}\n                           onChange={(updated_lineup: any) => submitLineup(updated_lineup)}/>\n        }\n);\n\nexport default LineupSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}