{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { ActionTypeModel } from \"./ActionTypeModel\";\nimport { ActionTypeModelSelector } from \"./ActionTypeModel.base\";\nimport { CoachTypeModel } from \"./CoachTypeModel\";\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\";\nimport { GmTypeModel } from \"./GmTypeModel\";\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\nimport { PlayerTypeModel } from \"./PlayerTypeModel\";\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\";\nimport { SeasonTypeModel } from \"./SeasonTypeModel\";\nimport { SeasonTypeModelSelector } from \"./SeasonTypeModel.base\";\nimport { StadiumTypeModel } from \"./StadiumTypeModel\";\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\";\nimport { UserTypeModel } from \"./UserTypeModel\";\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\";\n/**\n * FranchiseTypeBase\n * auto generated base class for the model FranchiseTypeModel.\n */\nexport const FranchiseTypeModelBase = withTypedRefs()(ModelBase.named('FranchiseType').props({\n  __typename: types.optional(types.literal(\"FranchiseType\"), \"FranchiseType\"),\n  id: types.identifier,\n  franchise: types.union(types.undefined, types.string),\n  user: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => UserTypeModel))),\n  league: types.union(types.undefined, MSTGQLRef(types.late(() => LeagueTypeModel))),\n  gm: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => GmTypeModel))),\n  coach: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => CoachTypeModel))),\n  stadium: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => StadiumTypeModel))),\n  playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(() => PlayerTypeModel)))),\n  action: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => ActionTypeModel))),\n  seasonSet: types.union(types.undefined, types.array(MSTGQLRef(types.late(() => SeasonTypeModel))))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class FranchiseTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get franchise() {\n    return this.__attr(`franchise`);\n  }\n  user(builder) {\n    return this.__child(`user`, UserTypeModelSelector, builder);\n  }\n  league(builder) {\n    return this.__child(`league`, LeagueTypeModelSelector, builder);\n  }\n  gm(builder) {\n    return this.__child(`gm`, GmTypeModelSelector, builder);\n  }\n  coach(builder) {\n    return this.__child(`coach`, CoachTypeModelSelector, builder);\n  }\n  stadium(builder) {\n    return this.__child(`stadium`, StadiumTypeModelSelector, builder);\n  }\n  playerSet(builder) {\n    return this.__child(`playerSet`, PlayerTypeModelSelector, builder);\n  }\n  action(builder) {\n    return this.__child(`action`, ActionTypeModelSelector, builder);\n  }\n  seasonSet(builder) {\n    return this.__child(`seasonSet`, SeasonTypeModelSelector, builder);\n  }\n}\nexport function selectFromFranchiseType() {\n  return new FranchiseTypeModelSelector();\n}\nexport const franchiseTypeModelPrimitives = selectFromFranchiseType().franchise;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","ActionTypeModel","ActionTypeModelSelector","CoachTypeModel","CoachTypeModelSelector","GmTypeModel","GmTypeModelSelector","LeagueTypeModel","LeagueTypeModelSelector","PlayerTypeModel","PlayerTypeModelSelector","SeasonTypeModel","SeasonTypeModelSelector","StadiumTypeModel","StadiumTypeModelSelector","UserTypeModel","UserTypeModelSelector","FranchiseTypeModelBase","named","props","__typename","optional","literal","id","identifier","franchise","union","undefined","string","user","null","late","league","gm","coach","stadium","playerSet","array","action","seasonSet","views","self","store","__getStore","FranchiseTypeModelSelector","__attr","builder","__child","selectFromFranchiseType","franchiseTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/FranchiseTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { ActionTypeModel, ActionTypeModelType } from \"./ActionTypeModel\"\nimport { ActionTypeModelSelector } from \"./ActionTypeModel.base\"\nimport { CoachTypeModel, CoachTypeModelType } from \"./CoachTypeModel\"\nimport { CoachTypeModelSelector } from \"./CoachTypeModel.base\"\nimport { GmTypeModel, GmTypeModelType } from \"./GmTypeModel\"\nimport { GmTypeModelSelector } from \"./GmTypeModel.base\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { PlayerTypeModel, PlayerTypeModelType } from \"./PlayerTypeModel\"\nimport { PlayerTypeModelSelector } from \"./PlayerTypeModel.base\"\nimport { SeasonTypeModel, SeasonTypeModelType } from \"./SeasonTypeModel\"\nimport { SeasonTypeModelSelector } from \"./SeasonTypeModel.base\"\nimport { StadiumTypeModel, StadiumTypeModelType } from \"./StadiumTypeModel\"\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\"\nimport { UserTypeModel, UserTypeModelType } from \"./UserTypeModel\"\nimport { UserTypeModelSelector } from \"./UserTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  user: UserTypeModelType;\n  league: LeagueTypeModelType;\n  gm: GmTypeModelType;\n  coach: CoachTypeModelType;\n  stadium: StadiumTypeModelType;\n  playerSet: IObservableArray<PlayerTypeModelType>;\n  action: ActionTypeModelType;\n  seasonSet: IObservableArray<SeasonTypeModelType>;\n}\n\n/**\n * FranchiseTypeBase\n * auto generated base class for the model FranchiseTypeModel.\n */\nexport const FranchiseTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('FranchiseType')\n  .props({\n    __typename: types.optional(types.literal(\"FranchiseType\"), \"FranchiseType\"),\n    id: types.identifier,\n    franchise: types.union(types.undefined, types.string),\n    user: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => UserTypeModel))),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    gm: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => GmTypeModel))),\n    coach: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => CoachTypeModel))),\n    stadium: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => StadiumTypeModel))),\n    playerSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => PlayerTypeModel)))),\n    action: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => ActionTypeModel))),\n    seasonSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => SeasonTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class FranchiseTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get franchise() { return this.__attr(`franchise`) }\n  user(builder?: string | UserTypeModelSelector | ((selector: UserTypeModelSelector) => UserTypeModelSelector)) { return this.__child(`user`, UserTypeModelSelector, builder) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  gm(builder?: string | GmTypeModelSelector | ((selector: GmTypeModelSelector) => GmTypeModelSelector)) { return this.__child(`gm`, GmTypeModelSelector, builder) }\n  coach(builder?: string | CoachTypeModelSelector | ((selector: CoachTypeModelSelector) => CoachTypeModelSelector)) { return this.__child(`coach`, CoachTypeModelSelector, builder) }\n  stadium(builder?: string | StadiumTypeModelSelector | ((selector: StadiumTypeModelSelector) => StadiumTypeModelSelector)) { return this.__child(`stadium`, StadiumTypeModelSelector, builder) }\n  playerSet(builder?: string | PlayerTypeModelSelector | ((selector: PlayerTypeModelSelector) => PlayerTypeModelSelector)) { return this.__child(`playerSet`, PlayerTypeModelSelector, builder) }\n  action(builder?: string | ActionTypeModelSelector | ((selector: ActionTypeModelSelector) => ActionTypeModelSelector)) { return this.__child(`action`, ActionTypeModelSelector, builder) }\n  seasonSet(builder?: string | SeasonTypeModelSelector | ((selector: SeasonTypeModelSelector) => SeasonTypeModelSelector)) { return this.__child(`seasonSet`, SeasonTypeModelSelector, builder) }\n}\nexport function selectFromFranchiseType() {\n  return new FranchiseTypeModelSelector()\n}\n\nexport const franchiseTypeModelPrimitives = selectFromFranchiseType().franchise\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}