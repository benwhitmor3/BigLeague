{"ast":null,"code":"import{types}from\"mobx-state-tree\";import{RootStoreBase}from\"./RootStore.base\";import{UserTypeModel}from\"./UserTypeModel\";export var RootStore=RootStoreBase.actions(function(self){return{// This is an auto-generated example action.\nlog:function log(){console.log(JSON.stringify(self));}// draft_mutation(player: any, franchiseId: string) {\n//       self.mutateRosterUpdate({\n//       \"rosterInput\": {\n// \t\"playerId\": player.id,\n// \t\"franchiseId\": franchiseId,\n//       \"lineup\": 'bench'\n//     }\n//     })\n//   }\n};}).props({User:types.union(types.undefined,types.null,types.reference(types.late(function(){return UserTypeModel;}))),isLoggedIn:types.optional(types.boolean,false)}).actions(function(self){return{setUser:function setUser(email){var query=self.queryUser({email:email},\"\\n__typename\\n    id\\n    email\\n    username\\n    league{\\n      __typename\\n      id\\n      leagueName\\n    }\\n    franchise{\\n      __typename\\n      id\\n      gm{\\n        __typename\\n        id\\n        trait\\n      }\\n      coach{\\n        __typename\\n        id\\n        name\\n        attributeOne\\n        attributeTwo\\n      }\\n      stadium{\\n        __typename\\n        id\\n        stadiumName\\n        seats\\n        boxes\\n        grade\\n        maxGrade\\n        homeFieldAdvantage\\n        city{\\n          __typename\\n          id\\n          city\\n          cityValue\\n        }\\n        franchise{\\n          __typename\\n          id\\n          franchise\\n        }\\n      }\\n      playerSet{\\n        __typename\\n        id\\n        name\\n        suit\\n        age\\n        pv\\n        epv\\n        sEpv\\n        contract\\n        tOption\\n        pOption\\n        renew\\n        salary\\n        grade\\n        trainer\\n        franchise{\\n          __typename\\n          id\\n          franchise\\n        }\\n        lineup\\n      }\\n      action{\\n        __typename\\n        id\\n        numberOfActions\\n        improvedBathrooms\\n        improvedConcessions\\n        jumbotron\\n        upscaleBar\\n        hallOfFame\\n        improvedSeating\\n        improvedSound\\n        partyDeck\\n        wiFi\\n        fanNight\\n        familyGame\\n        doorPrizes\\n        mvpNight\\n        paradeOfChampions\\n        bribeTheRefs\\n        easyRuns\\n        fanFactor\\n        trainPlayer\\n        farmSystem\\n        fanFavourites\\n        gourmetRestaurant\\n        beerGarden\\n        namingRights\\n        eventPlanning\\n      }\\n      stadium{\\n        __typename\\n        id\\n        city{\\n          __typename\\n          id\\n        }\\n        franchise{\\n          __typename\\n          id\\n        }\\n        stadiumName\\n        seats\\n        boxes\\n        grade\\n        maxGrade\\n        homeFieldAdvantage\\n      }\\n      seasonSet{\\n        __typename\\n        id\\n        franchise{\\n          __typename\\n          id\\n        }\\n        season\\n        ready\\n        wins\\n        losses\\n        ppg\\n        std\\n        championships\\n        bonuses\\n        penalties\\n        fanBase\\n        fanIndex\\n        advertising\\n        revenue\\n        expenses\\n      }\\n      league{\\n        __typename\\n        id\\n        leagueName\\n        franchiseSet{\\n          __typename\\n          id\\n          franchise\\n          gm{\\n            __typename\\n            id\\n            trait\\n          }\\n          coach{\\n            __typename\\n            id\\n            name\\n            attributeOne\\n            attributeTwo\\n          }\\n          playerSet{\\n            __typename\\n            id\\n            name\\n          suit\\n          age\\n          pv\\n          epv\\n          sEpv\\n          contract\\n          tOption\\n          pOption\\n          renew\\n          salary\\n          grade\\n          trainer\\n          franchise{\\n            __typename\\n            id\\n          }\\n          lineup\\n          }\\n        seasonSet{\\n          __typename\\n          id\\n          franchise{\\n            __typename\\n            id\\n          }\\n          season\\n          ready\\n          wins\\n          losses\\n          ppg\\n          std\\n          championships\\n          bonuses\\n          penalties\\n          fanBase\\n          fanIndex\\n          advertising\\n          revenue\\n          expenses\\n        }\\n        stadium{\\n          __typename\\n          id\\n          stadiumName\\n          seats\\n          boxes\\n          grade\\n          maxGrade\\n          homeFieldAdvantage\\n          city{\\n            __typename\\n            id\\n            city\\n            cityValue\\n            }\\n          }\\n        }\\n        citySet{\\n          __typename\\n          id\\n          city\\n          cityValue\\n          league{\\n            __typename\\n            id\\n          }\\n          stadiumSet{\\n            __typename\\n            id\\n            city{\\n              __typename\\n              id\\n            }\\n            franchise{\\n              __typename\\n              id\\n            }\\n            stadiumName\\n            seats\\n            boxes\\n            grade\\n            maxGrade\\n            homeFieldAdvantage\\n          }\\n        }\\n        playerSet{\\n          __typename\\n          id\\n          name\\n          suit\\n          age\\n          pv\\n          epv\\n          sEpv\\n          contract\\n          tOption\\n          pOption\\n          renew\\n          salary\\n          grade\\n          trainer\\n          franchise{\\n            __typename\\n            id\\n            franchise\\n          }\\n          lineup\\n        }\\n        gmSet{\\n          __typename\\n          id\\n          trait\\n        }\\n        coachSet{\\n          __typename\\n          id\\n          name\\n          attributeOne\\n          attributeTwo\\n        }\\n      }\\n    }\\n    \",{fetchPolicy:\"cache-and-network\"}).then(function(data){return self.User=self.userTypes.get(data.user.id);});return query;},setIsLoggedIn:function setIsLoggedIn(loggedIn){self.isLoggedIn=loggedIn;}};});","map":{"version":3,"names":["types","RootStoreBase","UserTypeModel","RootStore","actions","self","log","console","JSON","stringify","props","User","union","undefined","null","reference","late","isLoggedIn","optional","boolean","setUser","email","query","queryUser","fetchPolicy","then","data","userTypes","get","user","id","setIsLoggedIn","loggedIn"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/RootStore.ts"],"sourcesContent":["import {Instance, types} from \"mobx-state-tree\"\nimport { RootStoreBase } from \"./RootStore.base\"\nimport {UserTypeModel} from \"./UserTypeModel\";\nimport {FranchiseTypeModel} from \"./FranchiseTypeModel\";\n\nexport interface RootStoreType extends Instance<typeof RootStore.Type> {}\n\nexport const RootStore = RootStoreBase\n  .actions(self => ({\n    // This is an auto-generated example action.\n    log() {\n      console.log(JSON.stringify(self))\n    },\n  // draft_mutation(player: any, franchiseId: string) {\n  //       self.mutateRosterUpdate({\n  //       \"rosterInput\": {\n\t// \t\"playerId\": player.id,\n\t// \t\"franchiseId\": franchiseId,\n  //       \"lineup\": 'bench'\n\t//     }\n  //     })\n  //   }\n  }))\n  .props({\n    User: types.union(\n      types.undefined,\n      types.null,\n      types.reference(types.late((): any => UserTypeModel)),\n    ),\n    isLoggedIn: types.optional(\n      types.boolean,\n      false,\n    ),\n  })\n  .actions((self) => ({\n      setUser(email: string) {\n      const query = self.queryUser(\n              {email: email},\n              `\n__typename\n    id\n    email\n    username\n    league{\n      __typename\n      id\n      leagueName\n    }\n    franchise{\n      __typename\n      id\n      gm{\n        __typename\n        id\n        trait\n      }\n      coach{\n        __typename\n        id\n        name\n        attributeOne\n        attributeTwo\n      }\n      stadium{\n        __typename\n        id\n        stadiumName\n        seats\n        boxes\n        grade\n        maxGrade\n        homeFieldAdvantage\n        city{\n          __typename\n          id\n          city\n          cityValue\n        }\n        franchise{\n          __typename\n          id\n          franchise\n        }\n      }\n      playerSet{\n        __typename\n        id\n        name\n        suit\n        age\n        pv\n        epv\n        sEpv\n        contract\n        tOption\n        pOption\n        renew\n        salary\n        grade\n        trainer\n        franchise{\n          __typename\n          id\n          franchise\n        }\n        lineup\n      }\n      action{\n        __typename\n        id\n        numberOfActions\n        improvedBathrooms\n        improvedConcessions\n        jumbotron\n        upscaleBar\n        hallOfFame\n        improvedSeating\n        improvedSound\n        partyDeck\n        wiFi\n        fanNight\n        familyGame\n        doorPrizes\n        mvpNight\n        paradeOfChampions\n        bribeTheRefs\n        easyRuns\n        fanFactor\n        trainPlayer\n        farmSystem\n        fanFavourites\n        gourmetRestaurant\n        beerGarden\n        namingRights\n        eventPlanning\n      }\n      stadium{\n        __typename\n        id\n        city{\n          __typename\n          id\n        }\n        franchise{\n          __typename\n          id\n        }\n        stadiumName\n        seats\n        boxes\n        grade\n        maxGrade\n        homeFieldAdvantage\n      }\n      seasonSet{\n        __typename\n        id\n        franchise{\n          __typename\n          id\n        }\n        season\n        ready\n        wins\n        losses\n        ppg\n        std\n        championships\n        bonuses\n        penalties\n        fanBase\n        fanIndex\n        advertising\n        revenue\n        expenses\n      }\n      league{\n        __typename\n        id\n        leagueName\n        franchiseSet{\n          __typename\n          id\n          franchise\n          gm{\n            __typename\n            id\n            trait\n          }\n          coach{\n            __typename\n            id\n            name\n            attributeOne\n            attributeTwo\n          }\n          playerSet{\n            __typename\n            id\n            name\n          suit\n          age\n          pv\n          epv\n          sEpv\n          contract\n          tOption\n          pOption\n          renew\n          salary\n          grade\n          trainer\n          franchise{\n            __typename\n            id\n          }\n          lineup\n          }\n        seasonSet{\n          __typename\n          id\n          franchise{\n            __typename\n            id\n          }\n          season\n          ready\n          wins\n          losses\n          ppg\n          std\n          championships\n          bonuses\n          penalties\n          fanBase\n          fanIndex\n          advertising\n          revenue\n          expenses\n        }\n        stadium{\n          __typename\n          id\n          stadiumName\n          seats\n          boxes\n          grade\n          maxGrade\n          homeFieldAdvantage\n          city{\n            __typename\n            id\n            city\n            cityValue\n            }\n          }\n        }\n        citySet{\n          __typename\n          id\n          city\n          cityValue\n          league{\n            __typename\n            id\n          }\n          stadiumSet{\n            __typename\n            id\n            city{\n              __typename\n              id\n            }\n            franchise{\n              __typename\n              id\n            }\n            stadiumName\n            seats\n            boxes\n            grade\n            maxGrade\n            homeFieldAdvantage\n          }\n        }\n        playerSet{\n          __typename\n          id\n          name\n          suit\n          age\n          pv\n          epv\n          sEpv\n          contract\n          tOption\n          pOption\n          renew\n          salary\n          grade\n          trainer\n          franchise{\n            __typename\n            id\n            franchise\n          }\n          lineup\n        }\n        gmSet{\n          __typename\n          id\n          trait\n        }\n        coachSet{\n          __typename\n          id\n          name\n          attributeOne\n          attributeTwo\n        }\n      }\n    }\n    `,\n      {fetchPolicy: \"cache-and-network\"},\n          ).then((data) => self.User! = self.userTypes!.get(data!.user!.id!))\n  return query\n      },\n    setIsLoggedIn(loggedIn: boolean) {\n            self.isLoggedIn = loggedIn\n        },\n  }))\n\n\n"],"mappings":"AAAA,OAAkBA,KAAK,KAAO,iBAAiB,CAC/C,OAASC,aAAa,KAAQ,kBAAkB,CAChD,OAAQC,aAAa,KAAO,iBAAiB,CAK7C,MAAO,IAAM,CAAAC,SAAS,CAAGF,aAAa,CACnCG,OAAO,CAAC,SAAAC,IAAI,QAAK,CAChB;AACAC,GAAG,UAAAA,IAAA,CAAG,CACJC,OAAO,CAACD,GAAG,CAACE,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CACnC,CACF;AACA;AACA;AACD;AACA;AACC;AACD;AACC;AACA;AACA,CAAC,EAAC,CAAC,CACFK,KAAK,CAAC,CACLC,IAAI,CAAEX,KAAK,CAACY,KAAK,CACfZ,KAAK,CAACa,SAAS,CACfb,KAAK,CAACc,IAAI,CACVd,KAAK,CAACe,SAAS,CAACf,KAAK,CAACgB,IAAI,CAAC,iBAAW,CAAAd,aAAa,GAAC,CAAC,CACtD,CACDe,UAAU,CAAEjB,KAAK,CAACkB,QAAQ,CACxBlB,KAAK,CAACmB,OAAO,CACb,KAAK,CAET,CAAC,CAAC,CACDf,OAAO,CAAC,SAACC,IAAI,QAAM,CAChBe,OAAO,UAAAA,QAACC,KAAa,CAAE,CACvB,GAAM,CAAAC,KAAK,CAAGjB,IAAI,CAACkB,SAAS,CACpB,CAACF,KAAK,CAAEA,KAAK,CAAC,o3JA8RtB,CAACG,WAAW,CAAE,mBAAmB,CAAC,CAC7B,CAACC,IAAI,CAAC,SAACC,IAAI,QAAK,CAAArB,IAAI,CAACM,IAAI,CAAIN,IAAI,CAACsB,SAAS,CAAEC,GAAG,CAACF,IAAI,CAAEG,IAAI,CAAEC,EAAE,CAAE,GAAC,CAC3E,MAAO,CAAAR,KAAK,CACR,CAAC,CACHS,aAAa,UAAAA,cAACC,QAAiB,CAAE,CACzB3B,IAAI,CAACY,UAAU,CAAGe,QAAQ,CAC9B,CACN,CAAC,EAAC,CAAC"},"metadata":{},"sourceType":"module"}