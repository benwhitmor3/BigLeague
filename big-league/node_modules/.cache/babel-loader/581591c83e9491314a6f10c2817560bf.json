{"ast":null,"code":"import _toConsumableArray from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useContext}from'react';import{StoreContext}from\"../../../models\";import'antd/dist/antd.css';import{Table,Tag,Spin}from'antd';import{observer}from\"mobx-react\";import{toJS}from'mobx';import{colour,insertArray,suit_icon}from\"../../Utils/tablefunctions\";import{tableStyles}from\"./TableStyles\";export var PlayerHistoryTable=observer(function(){var _store$User$league$pl,_store$User$league$pl2,_store$User;var store=useContext(StoreContext);var non_scouter_columns=[{title:'Name',dataIndex:'name',key:'name',sorter:function sorter(a,b){return a.name.localeCompare(b.name);},// @ts-ignore\nfilters:_toConsumableArray(new Map((_store$User$league$pl=store.User.league.playerhistorySet)===null||_store$User$league$pl===void 0?void 0:_store$User$league$pl.map(function(item){return[item['name'],{text:item.name,value:item.name}];})).values()),onFilter:function onFilter(value,record){return record.name.indexOf(value)===0;}},{title:'Season',dataIndex:'season',key:'season',sorter:function sorter(a,b){return a.season-b.season;},// @ts-ignore\nfilters:_toConsumableArray(new Map((_store$User$league$pl2=store.User.league.playerhistorySet)===null||_store$User$league$pl2===void 0?void 0:_store$User$league$pl2.map(function(item){return[item['season'],{text:item.season,value:item.season}];})).values()),onFilter:function onFilter(value,record){return record.season.indexOf(value)===0;}},{title:'Age',dataIndex:'age',key:'age',sorter:function sorter(a,b){return a.age-b.age;}},{title:'EPV',dataIndex:'epv',key:'epv',sorter:function sorter(a,b){return a.epv-b.epv;},render:function render(epv){return/*#__PURE__*/React.createElement(\"span\",null,epv.toFixed(1));}},{title:'Suit',dataIndex:'suit',key:'suit',render:function render(suit){return/*#__PURE__*/React.createElement(Tag,{icon:suit_icon(suit),color:colour(suit),key:suit},suit.toUpperCase());},filters:[{text:'Diamond',value:'diamond'},{text:'Spade',value:'spade'},{text:'Heart',value:'heart'},{text:'Club',value:'club'}],onFilter:function onFilter(value,record){return record.suit.indexOf(value)===0;}}];var sEPV_column={title:'S EPV',dataIndex:'sEpv',key:'sEpv',sorter:function sorter(a,b){return a.sEpv-b.sEpv;},render:function render(sEpv){return/*#__PURE__*/React.createElement(\"span\",null,sEpv.toFixed(1));}};var columns=function columns(){if(store.User.franchise.gm!==null){if(store.User.franchise.gm.trait===\"SCOUTER\"){var scouter_columns=non_scouter_columns;insertArray(non_scouter_columns,4,sEPV_column);return scouter_columns;}else{return non_scouter_columns;}}else return non_scouter_columns;};if(((_store$User=store.User)===null||_store$User===void 0?void 0:_store$User.franchise)===undefined)return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Spin,{size:\"large\"}));else{return/*#__PURE__*/React.createElement(Table,{rowKey:\"id\",columns:columns(),dataSource:toJS(store.User.league.playerhistorySet),pagination:false,bordered:true,style:tableStyles});}});export default PlayerHistoryTable;","map":{"version":3,"names":["React","useContext","StoreContext","Table","Tag","Spin","observer","toJS","colour","insertArray","suit_icon","tableStyles","PlayerHistoryTable","_store$User$league$pl","_store$User$league$pl2","_store$User","store","non_scouter_columns","title","dataIndex","key","sorter","a","b","name","localeCompare","filters","_toConsumableArray","Map","User","league","playerhistorySet","map","item","text","value","values","onFilter","record","indexOf","season","age","epv","render","createElement","toFixed","suit","icon","color","toUpperCase","sEPV_column","sEpv","columns","franchise","gm","trait","scouter_columns","undefined","size","rowKey","dataSource","pagination","bordered","style"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/Pages/Organisms/Tables/PlayerHistoryTable.tsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport {StoreContext} from \"../../../models\";\nimport 'antd/dist/antd.css';\nimport {Table, Tag, Spin} from 'antd';\nimport {observer} from \"mobx-react\";\nimport {toJS} from 'mobx';\nimport {colour, insertArray, suit_icon} from \"../../Utils/tablefunctions\";\nimport {tableStyles} from \"./TableStyles\";\n\n\nexport const PlayerHistoryTable: React.FunctionComponent = observer(() => {\n\n        const store = useContext(StoreContext)\n\n    const non_scouter_columns = [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                sorter: (a: any, b: any) => a.name.localeCompare(b.name),\n                // @ts-ignore\n                filters: [...new Map(store.User.league.playerhistorySet?.map(item =>\n                [item['name'], {text: item.name, value: item.name}])).values()],\n                onFilter: (value: any, record: any) => record.name.indexOf(value) === 0,\n            },\n            {\n                title: 'Season',\n                dataIndex: 'season',\n                key: 'season',\n                sorter: (a: any, b: any) => a.season - b.season,\n                // @ts-ignore\n                filters: [...new Map(store.User.league.playerhistorySet?.map(item =>\n                [item['season'], {text: item.season, value: item.season}])).values()],\n                onFilter: (value: any, record: any) => record.season.indexOf(value) === 0,\n            },\n            {\n                title: 'Age',\n                dataIndex: 'age',\n                key: 'age',\n                sorter: (a: any, b: any) => a.age - b.age,\n            },\n            {\n                title: 'EPV',\n                dataIndex: 'epv',\n                key: 'epv',\n                sorter: (a: any, b: any) => a.epv - b.epv,\n                render: (epv: number) => <span>{epv.toFixed(1)}</span>,\n            },\n            {\n                title: 'Suit',\n                dataIndex: 'suit',\n                key: 'suit',\n                render: (suit: string) => (\n                    <Tag icon={suit_icon(suit)} color={colour(suit)} key={suit}>\n                        {suit.toUpperCase()}\n                    </Tag>\n                ),\n                filters: [\n                    {\n                        text: 'Diamond',\n                        value: 'diamond',\n                    },\n                    {\n                        text: 'Spade',\n                        value: 'spade',\n                    },\n                    {\n                        text: 'Heart',\n                        value: 'heart',\n                    },\n                    {\n                        text: 'Club',\n                        value: 'club',\n                    },\n                ],\n                onFilter: (value: any, record: any) => record.suit.indexOf(value) === 0,\n            },\n        ];\n\n\n        let sEPV_column =\n            {\n                title: 'S EPV',\n                dataIndex: 'sEpv',\n                key: 'sEpv',\n                sorter: (a: any, b: any) => a.sEpv - b.sEpv,\n                render: (sEpv: number) => <span>{sEpv.toFixed(1)}</span>,\n            }\n\n\n        const columns = () => {\n            if (store.User.franchise.gm !== null)\n                if (store.User.franchise.gm.trait === \"SCOUTER\") {\n                    let scouter_columns = non_scouter_columns\n                    insertArray(non_scouter_columns, 4, sEPV_column)\n                    return scouter_columns\n                } else {\n                    return non_scouter_columns\n                }\n            else return non_scouter_columns\n        }\n\n\n        if (store.User?.franchise === undefined) return <div><Spin size=\"large\"/></div>;\n        else {\n            return (\n                <Table\n                    rowKey=\"id\"\n                    columns={columns()}\n                    dataSource={toJS(store.User.league.playerhistorySet)}\n                    pagination={false}\n                    bordered\n                    style={tableStyles}\n                />\n            );\n        }\n    }\n)\n\nexport default PlayerHistoryTable;"],"mappings":"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"},"metadata":{},"sourceType":"module"}