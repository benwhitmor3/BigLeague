{"ast":null,"code":"/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\";\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\";\nimport { ModelBase } from \"./ModelBase\";\nimport { FranchiseTypeModel } from \"./FranchiseTypeModel\";\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\";\nimport { LeagueTypeModel } from \"./LeagueTypeModel\";\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\";\n/**\n * PlayerTypeBase\n * auto generated base class for the model PlayerTypeModel.\n */\nexport const PlayerTypeModelBase = withTypedRefs()(ModelBase.named('PlayerType').props({\n  __typename: types.optional(types.literal(\"PlayerType\"), \"PlayerType\"),\n  id: types.identifier,\n  name: types.union(types.undefined, types.string),\n  suit: types.union(types.undefined, types.string),\n  age: types.union(types.undefined, types.integer),\n  pv: types.union(types.undefined, types.number),\n  epv: types.union(types.undefined, types.number),\n  sEpv: types.union(types.undefined, types.number),\n  contract: types.union(types.undefined, types.null, types.integer),\n  tOption: types.union(types.undefined, types.null, types.integer),\n  pOption: types.union(types.undefined, types.null, types.integer),\n  renew: types.union(types.undefined, types.null, types.string),\n  salary: types.union(types.undefined, types.null, types.number),\n  grade: types.union(types.undefined, types.null, types.number),\n  trainer: types.union(types.undefined, types.boolean),\n  year: types.union(types.undefined, types.integer),\n  lineup: types.union(types.undefined, types.null, types.string),\n  franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late(() => FranchiseTypeModel))),\n  league: types.union(types.undefined, MSTGQLRef(types.late(() => LeagueTypeModel)))\n}).views(self => ({\n  get store() {\n    return self.__getStore();\n  }\n})));\nexport class PlayerTypeModelSelector extends QueryBuilder {\n  get id() {\n    return this.__attr(`id`);\n  }\n  get name() {\n    return this.__attr(`name`);\n  }\n  get suit() {\n    return this.__attr(`suit`);\n  }\n  get age() {\n    return this.__attr(`age`);\n  }\n  get pv() {\n    return this.__attr(`pv`);\n  }\n  get epv() {\n    return this.__attr(`epv`);\n  }\n  get sEpv() {\n    return this.__attr(`sEpv`);\n  }\n  get contract() {\n    return this.__attr(`contract`);\n  }\n  get tOption() {\n    return this.__attr(`tOption`);\n  }\n  get pOption() {\n    return this.__attr(`pOption`);\n  }\n  get renew() {\n    return this.__attr(`renew`);\n  }\n  get salary() {\n    return this.__attr(`salary`);\n  }\n  get grade() {\n    return this.__attr(`grade`);\n  }\n  get trainer() {\n    return this.__attr(`trainer`);\n  }\n  get year() {\n    return this.__attr(`year`);\n  }\n  get lineup() {\n    return this.__attr(`lineup`);\n  }\n  franchise(builder) {\n    return this.__child(`franchise`, FranchiseTypeModelSelector, builder);\n  }\n  league(builder) {\n    return this.__child(`league`, LeagueTypeModelSelector, builder);\n  }\n}\nexport function selectFromPlayerType() {\n  return new PlayerTypeModelSelector();\n}\nexport const playerTypeModelPrimitives = selectFromPlayerType().name.suit.age.pv.epv.sEpv.contract.tOption.pOption.renew.salary.grade.trainer.year.lineup;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","LeagueTypeModel","LeagueTypeModelSelector","PlayerTypeModelBase","named","props","__typename","optional","literal","id","identifier","name","union","undefined","string","suit","age","integer","pv","number","epv","sEpv","contract","null","tOption","pOption","renew","salary","grade","trainer","boolean","year","lineup","franchise","late","league","views","self","store","__getStore","PlayerTypeModelSelector","__attr","builder","__child","selectFromPlayerType","playerTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/PlayerTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  franchise: FranchiseTypeModelType;\n  league: LeagueTypeModelType;\n}\n\n/**\n * PlayerTypeBase\n * auto generated base class for the model PlayerTypeModel.\n */\nexport const PlayerTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('PlayerType')\n  .props({\n    __typename: types.optional(types.literal(\"PlayerType\"), \"PlayerType\"),\n    id: types.identifier,\n    name: types.union(types.undefined, types.string),\n    suit: types.union(types.undefined, types.string),\n    age: types.union(types.undefined, types.integer),\n    pv: types.union(types.undefined, types.number),\n    epv: types.union(types.undefined, types.number),\n    sEpv: types.union(types.undefined, types.number),\n    contract: types.union(types.undefined, types.null, types.integer),\n    tOption: types.union(types.undefined, types.null, types.integer),\n    pOption: types.union(types.undefined, types.null, types.integer),\n    renew: types.union(types.undefined, types.null, types.string),\n    salary: types.union(types.undefined, types.null, types.number),\n    grade: types.union(types.undefined, types.null, types.number),\n    trainer: types.union(types.undefined, types.boolean),\n    year: types.union(types.undefined, types.integer),\n    lineup: types.union(types.undefined, types.null, types.string),\n    franchise: types.union(types.undefined, types.null, MSTGQLRef(types.late((): any => FranchiseTypeModel))),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class PlayerTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get name() { return this.__attr(`name`) }\n  get suit() { return this.__attr(`suit`) }\n  get age() { return this.__attr(`age`) }\n  get pv() { return this.__attr(`pv`) }\n  get epv() { return this.__attr(`epv`) }\n  get sEpv() { return this.__attr(`sEpv`) }\n  get contract() { return this.__attr(`contract`) }\n  get tOption() { return this.__attr(`tOption`) }\n  get pOption() { return this.__attr(`pOption`) }\n  get renew() { return this.__attr(`renew`) }\n  get salary() { return this.__attr(`salary`) }\n  get grade() { return this.__attr(`grade`) }\n  get trainer() { return this.__attr(`trainer`) }\n  get year() { return this.__attr(`year`) }\n  get lineup() { return this.__attr(`lineup`) }\n  franchise(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchise`, FranchiseTypeModelSelector, builder) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n}\nexport function selectFromPlayerType() {\n  return new PlayerTypeModelSelector()\n}\n\nexport const playerTypeModelPrimitives = selectFromPlayerType().name.suit.age.pv.epv.sEpv.contract.tOption.pOption.renew.salary.grade.trainer.year.lineup\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}