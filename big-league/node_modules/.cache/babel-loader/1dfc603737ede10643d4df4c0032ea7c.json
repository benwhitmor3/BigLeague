{"ast":null,"code":"import _classCallCheck from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* This is a mst-gql generated file, don't modify it manually */ /* eslint-disable */ /* tslint:disable */import{types}from\"mobx-state-tree\";import{MSTGQLRef,QueryBuilder,withTypedRefs}from\"mst-gql\";import{ModelBase}from\"./ModelBase\";import{LeagueTypeModel}from\"./LeagueTypeModel\";import{LeagueTypeModelSelector}from\"./LeagueTypeModel.base\";import{StadiumTypeModel}from\"./StadiumTypeModel\";import{StadiumTypeModelSelector}from\"./StadiumTypeModel.base\";/**\n * CityTypeBase\n * auto generated base class for the model CityTypeModel.\n */export var CityTypeModelBase=withTypedRefs()(ModelBase.named('CityType').props({__typename:types.optional(types.literal(\"CityType\"),\"CityType\"),id:types.identifier,city:types.union(types.undefined,types.string),cityValue:types.union(types.undefined,types.integer),league:types.union(types.undefined,MSTGQLRef(types.late(function(){return LeagueTypeModel;}))),stadiumSet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return StadiumTypeModel;}))))}).views(function(self){return{get store(){return self.__getStore();}};}));export var CityTypeModelSelector=/*#__PURE__*/function(_QueryBuilder){_inherits(CityTypeModelSelector,_QueryBuilder);var _super=_createSuper(CityTypeModelSelector);function CityTypeModelSelector(){_classCallCheck(this,CityTypeModelSelector);return _super.apply(this,arguments);}_createClass(CityTypeModelSelector,[{key:\"id\",get:function get(){return this.__attr(\"id\");}},{key:\"city\",get:function get(){return this.__attr(\"city\");}},{key:\"cityValue\",get:function get(){return this.__attr(\"cityValue\");}},{key:\"league\",value:function league(builder){return this.__child(\"league\",LeagueTypeModelSelector,builder);}},{key:\"stadiumSet\",value:function stadiumSet(builder){return this.__child(\"stadiumSet\",StadiumTypeModelSelector,builder);}}]);return CityTypeModelSelector;}(QueryBuilder);export function selectFromCityType(){return new CityTypeModelSelector();}export var cityTypeModelPrimitives=selectFromCityType().city.cityValue;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","LeagueTypeModel","LeagueTypeModelSelector","StadiumTypeModel","StadiumTypeModelSelector","CityTypeModelBase","named","props","__typename","optional","literal","id","identifier","city","union","undefined","string","cityValue","integer","league","late","stadiumSet","array","views","self","store","__getStore","CityTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromCityType","cityTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/CityTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { StadiumTypeModel, StadiumTypeModelType } from \"./StadiumTypeModel\"\nimport { StadiumTypeModelSelector } from \"./StadiumTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  league: LeagueTypeModelType;\n  stadiumSet: IObservableArray<StadiumTypeModelType>;\n}\n\n/**\n * CityTypeBase\n * auto generated base class for the model CityTypeModel.\n */\nexport const CityTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('CityType')\n  .props({\n    __typename: types.optional(types.literal(\"CityType\"), \"CityType\"),\n    id: types.identifier,\n    city: types.union(types.undefined, types.string),\n    cityValue: types.union(types.undefined, types.integer),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    stadiumSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => StadiumTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class CityTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get city() { return this.__attr(`city`) }\n  get cityValue() { return this.__attr(`cityValue`) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  stadiumSet(builder?: string | StadiumTypeModelSelector | ((selector: StadiumTypeModelSelector) => StadiumTypeModelSelector)) { return this.__child(`stadiumSet`, StadiumTypeModelSelector, builder) }\n}\nexport function selectFromCityType() {\n  return new CityTypeModelSelector()\n}\n\nexport const cityTypeModelPrimitives = selectFromCityType().city.cityValue\n"],"mappings":"4nBAAA,iEACA,qBACA,oBAGA,OAASA,KAAK,KAAQ,iBAAiB,CACvC,OAASC,SAAS,CAAEC,YAAY,CAAEC,aAAa,KAAQ,SAAS,CAChE,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,eAAe,KAA6B,mBAAmB,CACxE,OAASC,uBAAuB,KAAQ,wBAAwB,CAChE,OAASC,gBAAgB,KAA8B,oBAAoB,CAC3E,OAASC,wBAAwB,KAAQ,yBAAyB,CAUlE;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,iBAAiB,CAAGN,aAAa,EAAQ,CAACC,SAAS,CAC7DM,KAAK,CAAC,UAAU,CAAC,CACjBC,KAAK,CAAC,CACLC,UAAU,CAAEZ,KAAK,CAACa,QAAQ,CAACb,KAAK,CAACc,OAAO,CAAC,UAAU,CAAC,CAAE,UAAU,CAAC,CACjEC,EAAE,CAAEf,KAAK,CAACgB,UAAU,CACpBC,IAAI,CAAEjB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,CAAEnB,KAAK,CAACoB,MAAM,CAAC,CAChDC,SAAS,CAAErB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,CAAEnB,KAAK,CAACsB,OAAO,CAAC,CACtDC,MAAM,CAAEvB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,CAAElB,SAAS,CAACD,KAAK,CAACwB,IAAI,CAAC,iBAAW,CAAAnB,eAAe,GAAC,CAAC,CAAC,CACvFoB,UAAU,CAAEzB,KAAK,CAACkB,KAAK,CAAClB,KAAK,CAACmB,SAAS,CAAEnB,KAAK,CAAC0B,KAAK,CAACzB,SAAS,CAACD,KAAK,CAACwB,IAAI,CAAC,iBAAW,CAAAjB,gBAAgB,GAAC,CAAC,CAAC,CAC1G,CAAC,CAAC,CACDoB,KAAK,CAAC,SAAAC,IAAI,QAAK,CACd,GAAI,CAAAC,KAAKA,CAAA,CAAG,CACV,MAAO,CAAAD,IAAI,CAACE,UAAU,EAAiB,CACzC,CACF,CAAC,EAAC,CAAC,CAAC,CAEN,UAAa,CAAAC,qBAAqB,uBAAAC,aAAA,EAAAC,SAAA,CAAAF,qBAAA,CAAAC,aAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,qBAAA,WAAAA,sBAAA,EAAAK,eAAA,MAAAL,qBAAA,SAAAG,MAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAC,YAAA,CAAAR,qBAAA,GAAAS,GAAA,MAAAC,GAAA,CAChC,SAAAA,IAAA,CAAS,CAAE,MAAO,KAAI,CAACC,MAAM,MAAM,CAAC,CAAC,GAAAF,GAAA,QAAAC,GAAA,CACrC,SAAAA,IAAA,CAAW,CAAE,MAAO,KAAI,CAACC,MAAM,QAAQ,CAAC,CAAC,GAAAF,GAAA,aAAAC,GAAA,CACzC,SAAAA,IAAA,CAAgB,CAAE,MAAO,KAAI,CAACC,MAAM,aAAa,CAAC,CAAC,GAAAF,GAAA,UAAAG,KAAA,CACnD,SAAApB,OAAOqB,OAA6G,CAAE,CAAE,MAAO,KAAI,CAACC,OAAO,UAAWvC,uBAAuB,CAAEsC,OAAO,CAAC,CAAC,CAAC,GAAAJ,GAAA,cAAAG,KAAA,CACzL,SAAAlB,WAAWmB,OAAgH,CAAE,CAAE,MAAO,KAAI,CAACC,OAAO,cAAerC,wBAAwB,CAAEoC,OAAO,CAAC,CAAC,CAAC,WAAAb,qBAAA,GAL5J7B,YAAY,EAOvD,MAAO,SAAS,CAAA4C,kBAAkBA,CAAA,CAAG,CACnC,MAAO,IAAI,CAAAf,qBAAqB,EAAE,CACpC,CAEA,MAAO,IAAM,CAAAgB,uBAAuB,CAAGD,kBAAkB,EAAE,CAAC7B,IAAI,CAACI,SAAS"},"metadata":{},"sourceType":"module"}