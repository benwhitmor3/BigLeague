{"ast":null,"code":"import _classCallCheck from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bwhitmore6/Desktop/Projects/BigLeague/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* This is a mst-gql generated file, don't modify it manually */ /* eslint-disable */ /* tslint:disable */import{types}from\"mobx-state-tree\";import{MSTGQLRef,QueryBuilder,withTypedRefs}from\"mst-gql\";import{ModelBase}from\"./ModelBase\";import{FranchiseTypeModel}from\"./FranchiseTypeModel\";import{FranchiseTypeModelSelector}from\"./FranchiseTypeModel.base\";import{GmTraitEnumType}from\"./GmTraitEnum\";import{LeagueTypeModel}from\"./LeagueTypeModel\";import{LeagueTypeModelSelector}from\"./LeagueTypeModel.base\";/**\n * GmTypeBase\n * auto generated base class for the model GmTypeModel.\n */export var GmTypeModelBase=withTypedRefs()(ModelBase.named('GmType').props({__typename:types.optional(types.literal(\"GMType\"),\"GMType\"),id:types.identifier,trait:types.union(types.undefined,GmTraitEnumType),league:types.union(types.undefined,MSTGQLRef(types.late(function(){return LeagueTypeModel;}))),franchiseSet:types.union(types.undefined,types.array(MSTGQLRef(types.late(function(){return FranchiseTypeModel;}))))}).views(function(self){return{get store(){return self.__getStore();}};}));export var GmTypeModelSelector=/*#__PURE__*/function(_QueryBuilder){_inherits(GmTypeModelSelector,_QueryBuilder);var _super=_createSuper(GmTypeModelSelector);function GmTypeModelSelector(){_classCallCheck(this,GmTypeModelSelector);return _super.apply(this,arguments);}_createClass(GmTypeModelSelector,[{key:\"id\",get:function get(){return this.__attr(\"id\");}},{key:\"trait\",get:function get(){return this.__attr(\"trait\");}},{key:\"league\",value:function league(builder){return this.__child(\"league\",LeagueTypeModelSelector,builder);}},{key:\"franchiseSet\",value:function franchiseSet(builder){return this.__child(\"franchiseSet\",FranchiseTypeModelSelector,builder);}}]);return GmTypeModelSelector;}(QueryBuilder);export function selectFromGmType(){return new GmTypeModelSelector();}export var gmTypeModelPrimitives=selectFromGmType().trait;","map":{"version":3,"names":["types","MSTGQLRef","QueryBuilder","withTypedRefs","ModelBase","FranchiseTypeModel","FranchiseTypeModelSelector","GmTraitEnumType","LeagueTypeModel","LeagueTypeModelSelector","GmTypeModelBase","named","props","__typename","optional","literal","id","identifier","trait","union","undefined","league","late","franchiseSet","array","views","self","store","__getStore","GmTypeModelSelector","_QueryBuilder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","__attr","value","builder","__child","selectFromGmType","gmTypeModelPrimitives"],"sources":["/Users/bwhitmore6/Desktop/Projects/BigLeague/src/models/GmTypeModel.base.ts"],"sourcesContent":["/* This is a mst-gql generated file, don't modify it manually */\n/* eslint-disable */\n/* tslint:disable */\n\nimport { IObservableArray } from \"mobx\"\nimport { types } from \"mobx-state-tree\"\nimport { MSTGQLRef, QueryBuilder, withTypedRefs } from \"mst-gql\"\nimport { ModelBase } from \"./ModelBase\"\nimport { FranchiseTypeModel, FranchiseTypeModelType } from \"./FranchiseTypeModel\"\nimport { FranchiseTypeModelSelector } from \"./FranchiseTypeModel.base\"\nimport { GmTraitEnumType } from \"./GmTraitEnum\"\nimport { LeagueTypeModel, LeagueTypeModelType } from \"./LeagueTypeModel\"\nimport { LeagueTypeModelSelector } from \"./LeagueTypeModel.base\"\nimport { RootStoreType } from \"./index\"\n\n\n/* The TypeScript type that explicits the refs to other models in order to prevent a circular refs issue */\ntype Refs = {\n  league: LeagueTypeModelType;\n  franchiseSet: IObservableArray<FranchiseTypeModelType>;\n}\n\n/**\n * GmTypeBase\n * auto generated base class for the model GmTypeModel.\n */\nexport const GmTypeModelBase = withTypedRefs<Refs>()(ModelBase\n  .named('GmType')\n  .props({\n    __typename: types.optional(types.literal(\"GMType\"), \"GMType\"),\n    id: types.identifier,\n    trait: types.union(types.undefined, GmTraitEnumType),\n    league: types.union(types.undefined, MSTGQLRef(types.late((): any => LeagueTypeModel))),\n    franchiseSet: types.union(types.undefined, types.array(MSTGQLRef(types.late((): any => FranchiseTypeModel)))),\n  })\n  .views(self => ({\n    get store() {\n      return self.__getStore<RootStoreType>()\n    }\n  })))\n\nexport class GmTypeModelSelector extends QueryBuilder {\n  get id() { return this.__attr(`id`) }\n  get trait() { return this.__attr(`trait`) }\n  league(builder?: string | LeagueTypeModelSelector | ((selector: LeagueTypeModelSelector) => LeagueTypeModelSelector)) { return this.__child(`league`, LeagueTypeModelSelector, builder) }\n  franchiseSet(builder?: string | FranchiseTypeModelSelector | ((selector: FranchiseTypeModelSelector) => FranchiseTypeModelSelector)) { return this.__child(`franchiseSet`, FranchiseTypeModelSelector, builder) }\n}\nexport function selectFromGmType() {\n  return new GmTypeModelSelector()\n}\n\nexport const gmTypeModelPrimitives = selectFromGmType().trait\n"],"mappings":"4nBAAA,iEACA,qBACA,oBAGA,OAASA,KAAK,KAAQ,iBAAiB,CACvC,OAASC,SAAS,CAAEC,YAAY,CAAEC,aAAa,KAAQ,SAAS,CAChE,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,kBAAkB,KAAgC,sBAAsB,CACjF,OAASC,0BAA0B,KAAQ,2BAA2B,CACtE,OAASC,eAAe,KAAQ,eAAe,CAC/C,OAASC,eAAe,KAA6B,mBAAmB,CACxE,OAASC,uBAAuB,KAAQ,wBAAwB,CAUhE;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,eAAe,CAAGP,aAAa,EAAQ,CAACC,SAAS,CAC3DO,KAAK,CAAC,QAAQ,CAAC,CACfC,KAAK,CAAC,CACLC,UAAU,CAAEb,KAAK,CAACc,QAAQ,CAACd,KAAK,CAACe,OAAO,CAAC,QAAQ,CAAC,CAAE,QAAQ,CAAC,CAC7DC,EAAE,CAAEhB,KAAK,CAACiB,UAAU,CACpBC,KAAK,CAAElB,KAAK,CAACmB,KAAK,CAACnB,KAAK,CAACoB,SAAS,CAAEb,eAAe,CAAC,CACpDc,MAAM,CAAErB,KAAK,CAACmB,KAAK,CAACnB,KAAK,CAACoB,SAAS,CAAEnB,SAAS,CAACD,KAAK,CAACsB,IAAI,CAAC,iBAAW,CAAAd,eAAe,GAAC,CAAC,CAAC,CACvFe,YAAY,CAAEvB,KAAK,CAACmB,KAAK,CAACnB,KAAK,CAACoB,SAAS,CAAEpB,KAAK,CAACwB,KAAK,CAACvB,SAAS,CAACD,KAAK,CAACsB,IAAI,CAAC,iBAAW,CAAAjB,kBAAkB,GAAC,CAAC,CAAC,CAC9G,CAAC,CAAC,CACDoB,KAAK,CAAC,SAAAC,IAAI,QAAK,CACd,GAAI,CAAAC,KAAKA,CAAA,CAAG,CACV,MAAO,CAAAD,IAAI,CAACE,UAAU,EAAiB,CACzC,CACF,CAAC,EAAC,CAAC,CAAC,CAEN,UAAa,CAAAC,mBAAmB,uBAAAC,aAAA,EAAAC,SAAA,CAAAF,mBAAA,CAAAC,aAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,mBAAA,WAAAA,oBAAA,EAAAK,eAAA,MAAAL,mBAAA,SAAAG,MAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAC,YAAA,CAAAR,mBAAA,GAAAS,GAAA,MAAAC,GAAA,CAC9B,SAAAA,IAAA,CAAS,CAAE,MAAO,KAAI,CAACC,MAAM,MAAM,CAAC,CAAC,GAAAF,GAAA,SAAAC,GAAA,CACrC,SAAAA,IAAA,CAAY,CAAE,MAAO,KAAI,CAACC,MAAM,SAAS,CAAC,CAAC,GAAAF,GAAA,UAAAG,KAAA,CAC3C,SAAApB,OAAOqB,OAA6G,CAAE,CAAE,MAAO,KAAI,CAACC,OAAO,UAAWlC,uBAAuB,CAAEiC,OAAO,CAAC,CAAC,CAAC,GAAAJ,GAAA,gBAAAG,KAAA,CACzL,SAAAlB,aAAamB,OAAsH,CAAE,CAAE,MAAO,KAAI,CAACC,OAAO,gBAAiBrC,0BAA0B,CAAEoC,OAAO,CAAC,CAAC,CAAC,WAAAb,mBAAA,GAJ1K3B,YAAY,EAMrD,MAAO,SAAS,CAAA0C,gBAAgBA,CAAA,CAAG,CACjC,MAAO,IAAI,CAAAf,mBAAmB,EAAE,CAClC,CAEA,MAAO,IAAM,CAAAgB,qBAAqB,CAAGD,gBAAgB,EAAE,CAAC1B,KAAK"},"metadata":{},"sourceType":"module"}