import * as React from 'react';
import { List, IndexRange, OverscanIndexRange, Index } from 'react-virtualized';
export declare type Props = {
    data: Array<any>;
    height: number;
    rowHeight: Function;
    rowRenderer: Function;
    extraContentRenderer: Function;
    maxRowCount?: number;
    rowClassName?: string;
    isRowLoaded?: (index: Index) => Boolean;
    onRowsRendered?: (info: IndexRange & OverscanIndexRange) => void;
    registerChild?: (ref: List | null) => void;
    noRowsRenderer: () => JSX.Element;
    stopScrollPropagation: boolean;
    autoSizerProps: Object;
    listProps: Object;
};
declare type State = {
    expandedRowsMap: object;
};
export declare class CollapsibleList extends React.Component<Props, State> {
    ListRef: List | null;
    state: {
        expandedRowsMap: {};
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    getScroller(): any;
    _onScroll(event: any): void;
    _onRowClick: (index: number) => void;
    _rowHeight: (params: {
        index: number;
    }) => any;
    _getUpdatedExpandedRowsMap: (index: number) => object;
    _recomputeRowHeights: (index: number) => void;
    _registerThyself: (ref: List | null) => void;
    _rowRenderer: (params: {
        index: number;
        style: {};
    }) => JSX.Element;
    render(): JSX.Element;
}
export declare const InfiniteCollapsibleList: typeof React.Component;
export {};
