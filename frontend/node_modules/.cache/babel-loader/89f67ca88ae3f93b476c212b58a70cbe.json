{"ast":null,"code":"var _jsxFileName = \"/Users/buw0017/projects/TheBigLeagueGame/frontend/src/components/Table.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport Row from './Row';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangedCell = ({\n      x,\n      y\n    }, value) => {\n      const modifiedData = Object.assign({}, this.state.data);\n      if (!modifiedData[y]) modifiedData[y] = {};\n      modifiedData[y][x] = value;\n      this.setState({\n        data: modifiedData\n      });\n    };\n\n    this.updateCells = () => {\n      this.forceUpdate();\n    };\n\n    this.state = {\n      data: {}\n    };\n  }\n\n  render() {\n    const rows = [];\n\n    for (let y = 0; y < this.props.y + 1; y += 1) {\n      const rowData = this.state.data[y] || {};\n      rows.push(React.createElement(Row, {\n        handleChangedCell: this.handleChangedCell,\n        updateCells: this.updateCells,\n        key: y,\n        y: y,\n        x: this.props.x + 1,\n        rowData: rowData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, rows);\n  }\n\n}\nTable.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/buw0017/projects/TheBigLeagueGame/frontend/src/components/Table.js"],"names":["React","Component","PropTypes","Row","Table","constructor","props","handleChangedCell","x","y","value","modifiedData","Object","assign","state","data","setState","updateCells","forceUpdate","render","rows","rowData","push","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAIA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,iBARmB,GAQC,CAAC;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAD,EAAWC,KAAX,KAAqB;AACvC,YAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,IAA7B,CAArB;AACA,UAAI,CAACJ,YAAY,CAACF,CAAD,CAAjB,EAAsBE,YAAY,CAACF,CAAD,CAAZ,GAAkB,EAAlB;AACtBE,MAAAA,YAAY,CAACF,CAAD,CAAZ,CAAgBD,CAAhB,IAAqBE,KAArB;AACA,WAAKM,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAEJ;AAAR,OAAd;AACD,KAbkB;;AAAA,SAenBM,WAfmB,GAeL,MAAM;AAClB,WAAKC,WAAL;AACD,KAjBkB;;AAGjB,SAAKJ,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAaDI,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWG,CAAX,GAAe,CAAnC,EAAsCA,CAAC,IAAI,CAA3C,EAA8C;AAC5C,YAAMY,OAAO,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBN,CAAhB,KAAsB,EAAtC;AACAW,MAAAA,IAAI,CAACE,IAAL,CACE,oBAAC,GAAD;AACE,QAAA,iBAAiB,EAAE,KAAKf,iBAD1B;AAEE,QAAA,WAAW,EAAE,KAAKU,WAFpB;AAGE,QAAA,GAAG,EAAER,CAHP;AAIE,QAAA,CAAC,EAAEA,CAJL;AAKE,QAAA,CAAC,EAAE,KAAKH,KAAL,CAAWE,CAAX,GAAe,CALpB;AAME,QAAA,OAAO,EAAEa,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CADF;AAKD;;AAzC0C;AA4C7ChB,KAAK,CAACmB,SAAN,GAAkB;AAChBf,EAAAA,CAAC,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UADJ;AAEhBhB,EAAAA,CAAC,EAAEP,SAAS,CAACsB,MAAV,CAAiBC;AAFJ,CAAlB","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport Row from './Row'\n\n\n\nexport default class Table extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: {},\n    }\n  }\n\n  handleChangedCell = ({ x, y }, value) => {\n    const modifiedData = Object.assign({}, this.state.data)\n    if (!modifiedData[y]) modifiedData[y] = {}\n    modifiedData[y][x] = value\n    this.setState({ data: modifiedData })\n  }\n\n  updateCells = () => {\n    this.forceUpdate()\n  }\n\n  render() {\n    const rows = []\n\n    for (let y = 0; y < this.props.y + 1; y += 1) {\n      const rowData = this.state.data[y] || {}\n      rows.push(\n        <Row\n          handleChangedCell={this.handleChangedCell}\n          updateCells={this.updateCells}\n          key={y}\n          y={y}\n          x={this.props.x + 1}\n          rowData={rowData}\n        />,\n      )\n    }\n    return (\n      <div>\n        {rows}\n      </div>\n    )\n  }\n}\n\nTable.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n}"]},"metadata":{},"sourceType":"module"}