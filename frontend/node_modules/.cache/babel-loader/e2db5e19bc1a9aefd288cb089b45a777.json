{"ast":null,"code":"var _jsxFileName = \"/Users/buw0017/projects/TheBigLeagueGame/frontend/src/components/DropdownCity.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nclass DropdownCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {\n      listOpen\n    } = this.state;\n    setTimeout(() => {\n      if (listOpen) {\n        window.addEventListener('click', this.close);\n      } else {\n        window.removeEventListener('click', this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.close);\n  }\n\n  close(timeOut) {\n    this.setState({\n      listOpen: false\n    });\n  }\n\n  selectItem(title, id, stateKey) {\n    this.setState({\n      headerTitle: title,\n      listOpen: false\n    }, this.props.resetThenSet(id, stateKey));\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  render() {\n    const {\n      list\n    } = this.props;\n    const {\n      listOpen,\n      headerTitle\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"dd-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-header\",\n      onClick: () => this.toggleList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, headerTitle), listOpen ? React.createElement(FontAwesome, {\n      name: \"angle-up\",\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : React.createElement(FontAwesome, {\n      name: \"angle-down\",\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), listOpen && React.createElement(\"ul\", {\n      className: \"dd-list\",\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, list.map(item => React.createElement(\"li\", {\n      className: \"dd-list-item\",\n      key: item.id,\n      onClick: () => this.selectItem(item.title, item.id, item.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, item.title, \" \", item.selected && React.createElement(FontAwesome, {\n      name: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default DropdownCity;","map":{"version":3,"sources":["/Users/buw0017/projects/TheBigLeagueGame/frontend/src/components/DropdownCity.js"],"names":["React","Component","FontAwesome","DropdownCity","constructor","props","state","listOpen","headerTitle","title","close","bind","componentDidUpdate","setTimeout","window","addEventListener","removeEventListener","componentWillUnmount","timeOut","setState","selectItem","id","stateKey","resetThenSet","toggleList","prevState","render","list","e","stopPropagation","map","item","key","selected"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FontAwesome from 'react-fontawesome'\n\nclass DropdownCity extends Component {\n\n constructor(props) {\n    super(props)\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title\n    }\n    this.close = this.close.bind(this)\n  }\n\n  componentDidUpdate(){\n    const { listOpen } = this.state\n    setTimeout(() => {\n      if(listOpen){\n        window.addEventListener('click', this.close)\n      }\n      else{\n        window.removeEventListener('click', this.close)\n      }\n    }, 0)\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('click', this.close)\n  }\n\n  close(timeOut){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  selectItem(title, id, stateKey){\n    this.setState({\n      headerTitle: title,\n      listOpen: false\n    }, this.props.resetThenSet(id, stateKey))\n  }\n\n  toggleList(){\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\nrender() {\n    const{list} = this.props\n    const{listOpen, headerTitle} = this.state\n     return (\n<div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">{headerTitle}</div>\n          {listOpen\n            ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n            : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n          }\n        </div>\n        {listOpen && <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n          {list.map((item)=> (\n            <li className=\"dd-list-item\" key={item.id} onClick={() => this.selectItem(item.title, item.id, item.key)}>{item.title} {item.selected && <FontAwesome name=\"check\"/>}</li>\n          ))}\n        </ul>}\n      </div>\n    );\n  }\n}\n\nexport default DropdownCity;"]},"metadata":{},"sourceType":"module"}