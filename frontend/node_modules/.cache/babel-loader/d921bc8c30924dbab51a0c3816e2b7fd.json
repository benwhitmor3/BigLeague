{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n//\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n//\n//\n// Array.map Great for rendering lists\nconst colours = ['red', 'green', 'blue'];\nconst items = colours.map(colour => '<li>${colour}</li>');\nconsole.log(items); // Destructuring\n\nconst address = {\n  street: '',\n  city: '',\n  country: ''\n};\nconst {\n  street: st\n} = address; // Spread Operator\n\nconst first = [1, 2, 3];\nconst second = [4, 5, 6];\nconst combined = [...first, 10, ...second];\nconsole.log(combined);\nconst name = {\n  name: 'Ben'\n};\nconst job = {\n  job: 'dev'\n};\nconst combo = { ...name,\n  ...job,\n  location: 'Hoboken'\n};\nconsole.log(combo); // Classes\n\nclass Person {\n  constructor(name) {\n    this.name = name;\n  }\n\n  walk() {\n    console.log('walk');\n  }\n\n} // extends allows classes to inherit methods/properties\n\n\nclass Teacher extends Person {\n  constructor(name, degree) {\n    super(name);\n    this.degree = degree;\n  }\n\n  teach() {\n    console.log('teach');\n  }\n\n}\n\nconst teacher = new Teacher('Ben', 'masters');\nteacher.degree();\nteacher.name();\nteacher.teach();\nteacher.walk();\nconsole.log(teacher.degree);","map":{"version":3,"sources":["/Users/buw0017/projects/TheBigLeagueGame/frontend/src/index.js"],"names":["colours","items","map","colour","console","log","address","street","city","country","st","first","second","combined","name","job","combo","location","Person","constructor","walk","Teacher","degree","teach","teacher"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,MAAMA,OAAO,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAAhB;AACA,MAAMC,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI,oBAAtB,CAAd;AACAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,E,CAEA;;AACA,MAAMK,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,EADI;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,OAAO,EAAE;AAHG,CAAhB;AAKA,MAAM;AAAEF,EAAAA,MAAM,EAAEG;AAAV,IAAgBJ,OAAtB,C,CAEA;;AACA,MAAMK,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAd;AACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf;AAEA,MAAMC,QAAQ,GAAG,CAAC,GAAGF,KAAJ,EAAW,EAAX,EAAe,GAAGC,MAAlB,CAAjB;AACAR,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AAEA,MAAMC,IAAI,GAAG;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAb;AACA,MAAMC,GAAG,GAAG;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAAZ;AAEA,MAAMC,KAAK,GAAG,EAAC,GAAGF,IAAJ;AAAU,KAAGC,GAAb;AAAkBE,EAAAA,QAAQ,EAAE;AAA5B,CAAd;AACAb,OAAO,CAACC,GAAR,CAAYW,KAAZ,E,CAEA;;AACA,MAAME,MAAN,CAAa;AACTC,EAAAA,WAAW,CAACL,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AAEDM,EAAAA,IAAI,GAAG;AACHhB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AAPQ,C,CAUT;;;AACJ,MAAMgB,OAAN,SAAsBH,MAAtB,CAA6B;AACzBC,EAAAA,WAAW,CAACL,IAAD,EAAOQ,MAAP,EAAe;AACtB,UAAMR,IAAN;AACA,SAAKQ,MAAL,GAAcA,MAAd;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJnB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AARwB;;AAW7B,MAAMmB,OAAO,GAAG,IAAIH,OAAJ,CAAY,KAAZ,EAAmB,SAAnB,CAAhB;AACAG,OAAO,CAACF,MAAR;AACAE,OAAO,CAACV,IAAR;AACAU,OAAO,CAACD,KAAR;AACAC,OAAO,CAACJ,IAAR;AAEAhB,OAAO,CAACC,GAAR,CAAYmB,OAAO,CAACF,MAApB","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n//\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n//\n//\n\n\n// Array.map Great for rendering lists\nconst colours = ['red', 'green', 'blue'];\nconst items = colours.map(colour => '<li>${colour}</li>');\nconsole.log(items)\n\n// Destructuring\nconst address = {\n    street: '',\n    city: '',\n    country: ''\n};\nconst { street: st} = address;\n\n// Spread Operator\nconst first = [1, 2, 3];\nconst second = [4, 5, 6];\n\nconst combined = [...first, 10, ...second];\nconsole.log(combined)\n\nconst name = { name: 'Ben'}\nconst job = { job: 'dev'};\n\nconst combo = {...name, ...job, location: 'Hoboken'}\nconsole.log(combo)\n\n// Classes\nclass Person {\n    constructor(name) {\n        this.name = name;\n    }\n\n    walk() {\n        console.log('walk');\n    }\n}\n\n    // extends allows classes to inherit methods/properties\nclass Teacher extends Person {\n    constructor(name, degree) {\n        super(name);\n        this.degree = degree\n    }\n\n    teach() {\n        console.log('teach');\n    }\n}\n\nconst teacher = new Teacher('Ben', 'masters');\nteacher.degree();\nteacher.name();\nteacher.teach();\nteacher.walk();\n\nconsole.log(teacher.degree);"]},"metadata":{},"sourceType":"module"}